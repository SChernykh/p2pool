// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: block.proto
// Protobuf C++ Version: 6.31.1

#include "block.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tari {
namespace rpc {

inline constexpr ProofOfWork::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pow_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pow_algo_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR ProofOfWork::ProofOfWork(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ProofOfWork_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProofOfWorkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProofOfWorkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProofOfWorkDefaultTypeInternal() {}
  union {
    ProofOfWork _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProofOfWorkDefaultTypeInternal _ProofOfWork_default_instance_;

inline constexpr PowAlgo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pow_algo_{static_cast< ::tari::rpc::PowAlgo_PowAlgos >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PowAlgo::PowAlgo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PowAlgo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PowAlgoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PowAlgoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PowAlgoDefaultTypeInternal() {}
  union {
    PowAlgo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PowAlgoDefaultTypeInternal _PowAlgo_default_instance_;

inline constexpr NewBlockHeaderTemplate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        prev_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_kernel_offset_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_script_offset_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pow_{nullptr},
        height_{::uint64_t{0u}},
        version_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR NewBlockHeaderTemplate::NewBlockHeaderTemplate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NewBlockHeaderTemplate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NewBlockHeaderTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewBlockHeaderTemplateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewBlockHeaderTemplateDefaultTypeInternal() {}
  union {
    NewBlockHeaderTemplate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewBlockHeaderTemplateDefaultTypeInternal _NewBlockHeaderTemplate_default_instance_;

inline constexpr BlockHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        prev_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        output_mr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_output_mr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        kernel_mr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        input_mr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_kernel_offset_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_script_offset_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validator_node_mr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pow_{nullptr},
        height_{::uint64_t{0u}},
        timestamp_{::uint64_t{0u}},
        nonce_{::uint64_t{0u}},
        kernel_mmr_size_{::uint64_t{0u}},
        output_mmr_size_{::uint64_t{0u}},
        validator_node_size_{::uint64_t{0u}},
        version_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR BlockHeader::BlockHeader(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BlockHeader_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockHeaderDefaultTypeInternal() {}
  union {
    BlockHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockHeaderDefaultTypeInternal _BlockHeader_default_instance_;

inline constexpr NewBlockTemplate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr},
        body_{nullptr},
        is_mempool_in_sync_{false} {}

template <typename>
PROTOBUF_CONSTEXPR NewBlockTemplate::NewBlockTemplate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NewBlockTemplate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NewBlockTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewBlockTemplateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewBlockTemplateDefaultTypeInternal() {}
  union {
    NewBlockTemplate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewBlockTemplateDefaultTypeInternal _NewBlockTemplate_default_instance_;

inline constexpr Block::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr},
        body_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Block::Block(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Block_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockDefaultTypeInternal() {}
  union {
    Block _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockDefaultTypeInternal _Block_default_instance_;

inline constexpr HistoricalBlock::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        block_{nullptr},
        confirmations_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR HistoricalBlock::HistoricalBlock(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HistoricalBlock_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HistoricalBlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoricalBlockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoricalBlockDefaultTypeInternal() {}
  union {
    HistoricalBlock _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoricalBlockDefaultTypeInternal _HistoricalBlock_default_instance_;
}  // namespace rpc
}  // namespace tari
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_block_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_block_2eproto = nullptr;
const ::uint32_t
    TableStruct_block_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_._has_bits_),
        20, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.hash_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.prev_hash_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.output_mr_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.block_output_mr_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.kernel_mr_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.input_mr_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.total_kernel_offset_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.nonce_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.pow_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.kernel_mmr_size_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.output_mmr_size_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.total_script_offset_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.validator_node_mr_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeader, _impl_.validator_node_size_),
        0,
        16,
        10,
        1,
        11,
        2,
        3,
        4,
        5,
        6,
        12,
        9,
        13,
        14,
        7,
        8,
        15,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ProofOfWork, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ProofOfWork, _impl_.pow_algo_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ProofOfWork, _impl_.pow_data_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::PowAlgo, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::PowAlgo, _impl_.pow_algo_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Block, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Block, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Block, _impl_.body_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::HistoricalBlock, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::HistoricalBlock, _impl_.confirmations_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::HistoricalBlock, _impl_.block_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NewBlockHeaderTemplate, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NewBlockHeaderTemplate, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NewBlockHeaderTemplate, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NewBlockHeaderTemplate, _impl_.prev_hash_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NewBlockHeaderTemplate, _impl_.total_kernel_offset_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NewBlockHeaderTemplate, _impl_.pow_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NewBlockHeaderTemplate, _impl_.total_script_offset_),
        5,
        4,
        0,
        1,
        3,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NewBlockTemplate, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NewBlockTemplate, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NewBlockTemplate, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NewBlockTemplate, _impl_.is_mempool_in_sync_),
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::tari::rpc::BlockHeader)},
        {37, sizeof(::tari::rpc::ProofOfWork)},
        {44, sizeof(::tari::rpc::PowAlgo)},
        {49, sizeof(::tari::rpc::Block)},
        {56, sizeof(::tari::rpc::HistoricalBlock)},
        {63, sizeof(::tari::rpc::NewBlockHeaderTemplate)},
        {78, sizeof(::tari::rpc::NewBlockTemplate)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::tari::rpc::_BlockHeader_default_instance_._instance,
    &::tari::rpc::_ProofOfWork_default_instance_._instance,
    &::tari::rpc::_PowAlgo_default_instance_._instance,
    &::tari::rpc::_Block_default_instance_._instance,
    &::tari::rpc::_HistoricalBlock_default_instance_._instance,
    &::tari::rpc::_NewBlockHeaderTemplate_default_instance_._instance,
    &::tari::rpc::_NewBlockTemplate_default_instance_._instance,
};
const char descriptor_table_protodef_block_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013block.proto\022\010tari.rpc\032\021transaction.pro"
    "to\"\212\003\n\013BlockHeader\022\014\n\004hash\030\001 \001(\014\022\017\n\007vers"
    "ion\030\002 \001(\r\022\016\n\006height\030\003 \001(\004\022\021\n\tprev_hash\030\004"
    " \001(\014\022\021\n\ttimestamp\030\005 \001(\004\022\021\n\toutput_mr\030\006 \001"
    "(\014\022\027\n\017block_output_mr\030\007 \001(\014\022\021\n\tkernel_mr"
    "\030\010 \001(\014\022\020\n\010input_mr\030\t \001(\014\022\033\n\023total_kernel"
    "_offset\030\n \001(\014\022\r\n\005nonce\030\013 \001(\004\022\"\n\003pow\030\014 \001("
    "\0132\025.tari.rpc.ProofOfWork\022\027\n\017kernel_mmr_s"
    "ize\030\r \001(\004\022\027\n\017output_mmr_size\030\016 \001(\004\022\033\n\023to"
    "tal_script_offset\030\017 \001(\014\022\031\n\021validator_nod"
    "e_mr\030\020 \001(\014\022\033\n\023validator_node_size\030\021 \001(\004\""
    "1\n\013ProofOfWork\022\020\n\010pow_algo\030\001 \001(\004\022\020\n\010pow_"
    "data\030\004 \001(\014\"\210\001\n\007PowAlgo\022,\n\010pow_algo\030\001 \001(\016"
    "2\032.tari.rpc.PowAlgo.PowAlgos\"O\n\010PowAlgos"
    "\022\026\n\022POW_ALGOS_RANDOMXM\020\000\022\023\n\017POW_ALGOS_SH"
    "A3X\020\001\022\026\n\022POW_ALGOS_RANDOMXT\020\002\"U\n\005Block\022%"
    "\n\006header\030\001 \001(\0132\025.tari.rpc.BlockHeader\022%\n"
    "\004body\030\002 \001(\0132\027.tari.rpc.AggregateBody\"H\n\017"
    "HistoricalBlock\022\025\n\rconfirmations\030\001 \001(\004\022\036"
    "\n\005block\030\002 \001(\0132\017.tari.rpc.Block\"\252\001\n\026NewBl"
    "ockHeaderTemplate\022\017\n\007version\030\001 \001(\r\022\016\n\006he"
    "ight\030\002 \001(\004\022\021\n\tprev_hash\030\003 \001(\014\022\033\n\023total_k"
    "ernel_offset\030\004 \001(\014\022\"\n\003pow\030\005 \001(\0132\025.tari.r"
    "pc.ProofOfWork\022\033\n\023total_script_offset\030\007 "
    "\001(\014\"\207\001\n\020NewBlockTemplate\0220\n\006header\030\001 \001(\013"
    "2 .tari.rpc.NewBlockHeaderTemplate\022%\n\004bo"
    "dy\030\002 \001(\0132\027.tari.rpc.AggregateBody\022\032\n\022is_"
    "mempool_in_sync\030\003 \001(\010b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_block_2eproto_deps[1] = {
        &::descriptor_table_transaction_2eproto,
};
static ::absl::once_flag descriptor_table_block_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_block_2eproto = {
    false,
    false,
    1109,
    descriptor_table_protodef_block_2eproto,
    "block.proto",
    &descriptor_table_block_2eproto_once,
    descriptor_table_block_2eproto_deps,
    1,
    7,
    schemas,
    file_default_instances,
    TableStruct_block_2eproto::offsets,
    file_level_enum_descriptors_block_2eproto,
    file_level_service_descriptors_block_2eproto,
};
namespace tari {
namespace rpc {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PowAlgo_PowAlgos_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_block_2eproto);
  return file_level_enum_descriptors_block_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t PowAlgo_PowAlgos_internal_data_[] = {
    196608u, 0u, };
// ===================================================================

class BlockHeader::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BlockHeader>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_._has_bits_);
};

BlockHeader::BlockHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BlockHeader_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.BlockHeader)
}
PROTOBUF_NDEBUG_INLINE BlockHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::BlockHeader& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        hash_(arena, from.hash_),
        prev_hash_(arena, from.prev_hash_),
        output_mr_(arena, from.output_mr_),
        block_output_mr_(arena, from.block_output_mr_),
        kernel_mr_(arena, from.kernel_mr_),
        input_mr_(arena, from.input_mr_),
        total_kernel_offset_(arena, from.total_kernel_offset_),
        total_script_offset_(arena, from.total_script_offset_),
        validator_node_mr_(arena, from.validator_node_mr_) {}

BlockHeader::BlockHeader(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BlockHeader& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BlockHeader_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlockHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pow_ = ((cached_has_bits & 0x00000200u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pow_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, height_),
           offsetof(Impl_, version_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::version_));

  // @@protoc_insertion_point(copy_constructor:tari.rpc.BlockHeader)
}
PROTOBUF_NDEBUG_INLINE BlockHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        hash_(arena),
        prev_hash_(arena),
        output_mr_(arena),
        block_output_mr_(arena),
        kernel_mr_(arena),
        input_mr_(arena),
        total_kernel_offset_(arena),
        total_script_offset_(arena),
        validator_node_mr_(arena) {}

inline void BlockHeader::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pow_),
           0,
           offsetof(Impl_, version_) -
               offsetof(Impl_, pow_) +
               sizeof(Impl_::version_));
}
BlockHeader::~BlockHeader() {
  // @@protoc_insertion_point(destructor:tari.rpc.BlockHeader)
  SharedDtor(*this);
}
inline void BlockHeader::SharedDtor(MessageLite& self) {
  BlockHeader& this_ = static_cast<BlockHeader&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hash_.Destroy();
  this_._impl_.prev_hash_.Destroy();
  this_._impl_.output_mr_.Destroy();
  this_._impl_.block_output_mr_.Destroy();
  this_._impl_.kernel_mr_.Destroy();
  this_._impl_.input_mr_.Destroy();
  this_._impl_.total_kernel_offset_.Destroy();
  this_._impl_.total_script_offset_.Destroy();
  this_._impl_.validator_node_mr_.Destroy();
  delete this_._impl_.pow_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BlockHeader::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BlockHeader(arena);
}
constexpr auto BlockHeader::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BlockHeader),
                                            alignof(BlockHeader));
}
constexpr auto BlockHeader::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BlockHeader_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BlockHeader::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BlockHeader>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BlockHeader::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BlockHeader>(), &BlockHeader::ByteSizeLong,
              &BlockHeader::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_._cached_size_),
          false,
      },
      &BlockHeader::kDescriptorMethods,
      &descriptor_table_block_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BlockHeader_class_data_ =
        BlockHeader::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BlockHeader::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BlockHeader_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BlockHeader_class_data_.tc_table);
  return BlockHeader_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 1, 0, 2>
BlockHeader::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_._has_bits_),
    0, // no _extensions_
    17, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BlockHeader_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::BlockHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes hash = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.hash_)}},
    // uint32 version = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlockHeader, _impl_.version_), 16>(),
     {16, 16, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.version_)}},
    // uint64 height = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockHeader, _impl_.height_), 10>(),
     {24, 10, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.height_)}},
    // bytes prev_hash = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.prev_hash_)}},
    // uint64 timestamp = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockHeader, _impl_.timestamp_), 11>(),
     {40, 11, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.timestamp_)}},
    // bytes output_mr = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.output_mr_)}},
    // bytes block_output_mr = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.block_output_mr_)}},
    // bytes kernel_mr = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 4, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.kernel_mr_)}},
    // bytes input_mr = 9;
    {::_pbi::TcParser::FastBS1,
     {74, 5, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.input_mr_)}},
    // bytes total_kernel_offset = 10;
    {::_pbi::TcParser::FastBS1,
     {82, 6, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.total_kernel_offset_)}},
    // uint64 nonce = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockHeader, _impl_.nonce_), 12>(),
     {88, 12, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.nonce_)}},
    // .tari.rpc.ProofOfWork pow = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 9, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.pow_)}},
    // uint64 kernel_mmr_size = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockHeader, _impl_.kernel_mmr_size_), 13>(),
     {104, 13, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.kernel_mmr_size_)}},
    // uint64 output_mmr_size = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockHeader, _impl_.output_mmr_size_), 14>(),
     {112, 14, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.output_mmr_size_)}},
    // bytes total_script_offset = 15;
    {::_pbi::TcParser::FastBS1,
     {122, 7, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.total_script_offset_)}},
    // bytes validator_node_mr = 16;
    {::_pbi::TcParser::FastBS2,
     {386, 8, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.validator_node_mr_)}},
    // uint64 validator_node_size = 17;
    {::_pbi::TcParser::FastV64S2,
     {392, 15, 0, PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.validator_node_size_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes hash = 1;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 version = 2;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.version_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint64 height = 3;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.height_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // bytes prev_hash = 4;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.prev_hash_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.timestamp_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // bytes output_mr = 6;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.output_mr_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes block_output_mr = 7;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.block_output_mr_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes kernel_mr = 8;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.kernel_mr_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes input_mr = 9;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.input_mr_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes total_kernel_offset = 10;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.total_kernel_offset_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 nonce = 11;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.nonce_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // .tari.rpc.ProofOfWork pow = 12;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.pow_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 kernel_mmr_size = 13;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.kernel_mmr_size_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 output_mmr_size = 14;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.output_mmr_size_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // bytes total_script_offset = 15;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.total_script_offset_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes validator_node_mr = 16;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.validator_node_mr_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 validator_node_size = 17;
    {PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.validator_node_size_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::ProofOfWork>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void BlockHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.BlockHeader)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.hash_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.prev_hash_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.output_mr_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.block_output_mr_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.kernel_mr_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _impl_.input_mr_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _impl_.total_kernel_offset_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _impl_.total_script_offset_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _impl_.validator_node_mr_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      ABSL_DCHECK(_impl_.pow_ != nullptr);
      _impl_.pow_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000fc00u) != 0) {
    ::memset(&_impl_.height_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.validator_node_size_) -
        reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.validator_node_size_));
  }
  _impl_.version_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BlockHeader::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BlockHeader& this_ = static_cast<const BlockHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BlockHeader::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BlockHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.BlockHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes hash = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_hash().empty()) {
      const ::std::string& _s = this_._internal_hash();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // uint32 version = 2;
  if ((this_._impl_._has_bits_[0] & 0x00010000u) != 0) {
    if (this_._internal_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_version(), target);
    }
  }

  // uint64 height = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (this_._internal_height() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          3, this_._internal_height(), target);
    }
  }

  // bytes prev_hash = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_prev_hash().empty()) {
      const ::std::string& _s = this_._internal_prev_hash();
      target = stream->WriteBytesMaybeAliased(4, _s, target);
    }
  }

  // uint64 timestamp = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000800u) != 0) {
    if (this_._internal_timestamp() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          5, this_._internal_timestamp(), target);
    }
  }

  // bytes output_mr = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_output_mr().empty()) {
      const ::std::string& _s = this_._internal_output_mr();
      target = stream->WriteBytesMaybeAliased(6, _s, target);
    }
  }

  // bytes block_output_mr = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_block_output_mr().empty()) {
      const ::std::string& _s = this_._internal_block_output_mr();
      target = stream->WriteBytesMaybeAliased(7, _s, target);
    }
  }

  // bytes kernel_mr = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._internal_kernel_mr().empty()) {
      const ::std::string& _s = this_._internal_kernel_mr();
      target = stream->WriteBytesMaybeAliased(8, _s, target);
    }
  }

  // bytes input_mr = 9;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (!this_._internal_input_mr().empty()) {
      const ::std::string& _s = this_._internal_input_mr();
      target = stream->WriteBytesMaybeAliased(9, _s, target);
    }
  }

  // bytes total_kernel_offset = 10;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (!this_._internal_total_kernel_offset().empty()) {
      const ::std::string& _s = this_._internal_total_kernel_offset();
      target = stream->WriteBytesMaybeAliased(10, _s, target);
    }
  }

  // uint64 nonce = 11;
  if ((this_._impl_._has_bits_[0] & 0x00001000u) != 0) {
    if (this_._internal_nonce() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          11, this_._internal_nonce(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.ProofOfWork pow = 12;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.pow_, this_._impl_.pow_->GetCachedSize(), target,
        stream);
  }

  // uint64 kernel_mmr_size = 13;
  if ((cached_has_bits & 0x00002000u) != 0) {
    if (this_._internal_kernel_mmr_size() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          13, this_._internal_kernel_mmr_size(), target);
    }
  }

  // uint64 output_mmr_size = 14;
  if ((cached_has_bits & 0x00004000u) != 0) {
    if (this_._internal_output_mmr_size() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          14, this_._internal_output_mmr_size(), target);
    }
  }

  // bytes total_script_offset = 15;
  if ((cached_has_bits & 0x00000080u) != 0) {
    if (!this_._internal_total_script_offset().empty()) {
      const ::std::string& _s = this_._internal_total_script_offset();
      target = stream->WriteBytesMaybeAliased(15, _s, target);
    }
  }

  // bytes validator_node_mr = 16;
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (!this_._internal_validator_node_mr().empty()) {
      const ::std::string& _s = this_._internal_validator_node_mr();
      target = stream->WriteBytesMaybeAliased(16, _s, target);
    }
  }

  // uint64 validator_node_size = 17;
  if ((cached_has_bits & 0x00008000u) != 0) {
    if (this_._internal_validator_node_size() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          17, this_._internal_validator_node_size(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.BlockHeader)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BlockHeader::ByteSizeLong(const MessageLite& base) {
  const BlockHeader& this_ = static_cast<const BlockHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BlockHeader::ByteSizeLong() const {
  const BlockHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.BlockHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // bytes hash = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_hash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_hash());
      }
    }
    // bytes prev_hash = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_prev_hash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_prev_hash());
      }
    }
    // bytes output_mr = 6;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_output_mr().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_output_mr());
      }
    }
    // bytes block_output_mr = 7;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_block_output_mr().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_block_output_mr());
      }
    }
    // bytes kernel_mr = 8;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_kernel_mr().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_kernel_mr());
      }
    }
    // bytes input_mr = 9;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!this_._internal_input_mr().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_input_mr());
      }
    }
    // bytes total_kernel_offset = 10;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (!this_._internal_total_kernel_offset().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_total_kernel_offset());
      }
    }
    // bytes total_script_offset = 15;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (!this_._internal_total_script_offset().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_total_script_offset());
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // bytes validator_node_mr = 16;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (!this_._internal_validator_node_mr().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_validator_node_mr());
      }
    }
    // .tari.rpc.ProofOfWork pow = 12;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pow_);
    }
    // uint64 height = 3;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_height() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_height());
      }
    }
    // uint64 timestamp = 5;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_timestamp());
      }
    }
    // uint64 nonce = 11;
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (this_._internal_nonce() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_nonce());
      }
    }
    // uint64 kernel_mmr_size = 13;
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (this_._internal_kernel_mmr_size() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_kernel_mmr_size());
      }
    }
    // uint64 output_mmr_size = 14;
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (this_._internal_output_mmr_size() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_output_mmr_size());
      }
    }
    // uint64 validator_node_size = 17;
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (this_._internal_validator_node_size() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                        this_._internal_validator_node_size());
      }
    }
  }
   {
    // uint32 version = 2;
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (this_._internal_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_version());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BlockHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlockHeader*>(&to_msg);
  auto& from = static_cast<const BlockHeader&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.BlockHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_hash().empty()) {
        _this->_internal_set_hash(from._internal_hash());
      } else {
        if (_this->_impl_.hash_.IsDefault()) {
          _this->_internal_set_hash("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_prev_hash().empty()) {
        _this->_internal_set_prev_hash(from._internal_prev_hash());
      } else {
        if (_this->_impl_.prev_hash_.IsDefault()) {
          _this->_internal_set_prev_hash("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_output_mr().empty()) {
        _this->_internal_set_output_mr(from._internal_output_mr());
      } else {
        if (_this->_impl_.output_mr_.IsDefault()) {
          _this->_internal_set_output_mr("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_block_output_mr().empty()) {
        _this->_internal_set_block_output_mr(from._internal_block_output_mr());
      } else {
        if (_this->_impl_.block_output_mr_.IsDefault()) {
          _this->_internal_set_block_output_mr("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_kernel_mr().empty()) {
        _this->_internal_set_kernel_mr(from._internal_kernel_mr());
      } else {
        if (_this->_impl_.kernel_mr_.IsDefault()) {
          _this->_internal_set_kernel_mr("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!from._internal_input_mr().empty()) {
        _this->_internal_set_input_mr(from._internal_input_mr());
      } else {
        if (_this->_impl_.input_mr_.IsDefault()) {
          _this->_internal_set_input_mr("");
        }
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (!from._internal_total_kernel_offset().empty()) {
        _this->_internal_set_total_kernel_offset(from._internal_total_kernel_offset());
      } else {
        if (_this->_impl_.total_kernel_offset_.IsDefault()) {
          _this->_internal_set_total_kernel_offset("");
        }
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (!from._internal_total_script_offset().empty()) {
        _this->_internal_set_total_script_offset(from._internal_total_script_offset());
      } else {
        if (_this->_impl_.total_script_offset_.IsDefault()) {
          _this->_internal_set_total_script_offset("");
        }
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (!from._internal_validator_node_mr().empty()) {
        _this->_internal_set_validator_node_mr(from._internal_validator_node_mr());
      } else {
        if (_this->_impl_.validator_node_mr_.IsDefault()) {
          _this->_internal_set_validator_node_mr("");
        }
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      ABSL_DCHECK(from._impl_.pow_ != nullptr);
      if (_this->_impl_.pow_ == nullptr) {
        _this->_impl_.pow_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pow_);
      } else {
        _this->_impl_.pow_->MergeFrom(*from._impl_.pow_);
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_height() != 0) {
        _this->_impl_.height_ = from._impl_.height_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (from._internal_timestamp() != 0) {
        _this->_impl_.timestamp_ = from._impl_.timestamp_;
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (from._internal_nonce() != 0) {
        _this->_impl_.nonce_ = from._impl_.nonce_;
      }
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (from._internal_kernel_mmr_size() != 0) {
        _this->_impl_.kernel_mmr_size_ = from._impl_.kernel_mmr_size_;
      }
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (from._internal_output_mmr_size() != 0) {
        _this->_impl_.output_mmr_size_ = from._impl_.output_mmr_size_;
      }
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (from._internal_validator_node_size() != 0) {
        _this->_impl_.validator_node_size_ = from._impl_.validator_node_size_;
      }
    }
  }
  if ((cached_has_bits & 0x00010000u) != 0) {
    if (from._internal_version() != 0) {
      _this->_impl_.version_ = from._impl_.version_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockHeader::CopyFrom(const BlockHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.BlockHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlockHeader::InternalSwap(BlockHeader* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, &other->_impl_.hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prev_hash_, &other->_impl_.prev_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.output_mr_, &other->_impl_.output_mr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.block_output_mr_, &other->_impl_.block_output_mr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.kernel_mr_, &other->_impl_.kernel_mr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.input_mr_, &other->_impl_.input_mr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.total_kernel_offset_, &other->_impl_.total_kernel_offset_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.total_script_offset_, &other->_impl_.total_script_offset_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_node_mr_, &other->_impl_.validator_node_mr_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.version_)
      + sizeof(BlockHeader::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(BlockHeader, _impl_.pow_)>(
          reinterpret_cast<char*>(&_impl_.pow_),
          reinterpret_cast<char*>(&other->_impl_.pow_));
}

::google::protobuf::Metadata BlockHeader::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ProofOfWork::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ProofOfWork>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ProofOfWork, _impl_._has_bits_);
};

ProofOfWork::ProofOfWork(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ProofOfWork_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.ProofOfWork)
}
PROTOBUF_NDEBUG_INLINE ProofOfWork::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::ProofOfWork& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        pow_data_(arena, from.pow_data_) {}

ProofOfWork::ProofOfWork(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ProofOfWork& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ProofOfWork_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ProofOfWork* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.pow_algo_ = from._impl_.pow_algo_;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.ProofOfWork)
}
PROTOBUF_NDEBUG_INLINE ProofOfWork::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        pow_data_(arena) {}

inline void ProofOfWork::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pow_algo_ = {};
}
ProofOfWork::~ProofOfWork() {
  // @@protoc_insertion_point(destructor:tari.rpc.ProofOfWork)
  SharedDtor(*this);
}
inline void ProofOfWork::SharedDtor(MessageLite& self) {
  ProofOfWork& this_ = static_cast<ProofOfWork&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.pow_data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ProofOfWork::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ProofOfWork(arena);
}
constexpr auto ProofOfWork::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ProofOfWork),
                                            alignof(ProofOfWork));
}
constexpr auto ProofOfWork::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ProofOfWork_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ProofOfWork::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ProofOfWork>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ProofOfWork::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ProofOfWork>(), &ProofOfWork::ByteSizeLong,
              &ProofOfWork::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ProofOfWork, _impl_._cached_size_),
          false,
      },
      &ProofOfWork::kDescriptorMethods,
      &descriptor_table_block_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ProofOfWork_class_data_ =
        ProofOfWork::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ProofOfWork::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ProofOfWork_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ProofOfWork_class_data_.tc_table);
  return ProofOfWork_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
ProofOfWork::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProofOfWork, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967286,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ProofOfWork_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::ProofOfWork>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes pow_data = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(ProofOfWork, _impl_.pow_data_)}},
    // uint64 pow_algo = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ProofOfWork, _impl_.pow_algo_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ProofOfWork, _impl_.pow_algo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 pow_algo = 1;
    {PROTOBUF_FIELD_OFFSET(ProofOfWork, _impl_.pow_algo_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // bytes pow_data = 4;
    {PROTOBUF_FIELD_OFFSET(ProofOfWork, _impl_.pow_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ProofOfWork::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.ProofOfWork)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.pow_data_.ClearNonDefaultToEmpty();
  }
  _impl_.pow_algo_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ProofOfWork::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ProofOfWork& this_ = static_cast<const ProofOfWork&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ProofOfWork::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ProofOfWork& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.ProofOfWork)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 pow_algo = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_pow_algo() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_pow_algo(), target);
    }
  }

  // bytes pow_data = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_pow_data().empty()) {
      const ::std::string& _s = this_._internal_pow_data();
      target = stream->WriteBytesMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.ProofOfWork)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ProofOfWork::ByteSizeLong(const MessageLite& base) {
  const ProofOfWork& this_ = static_cast<const ProofOfWork&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ProofOfWork::ByteSizeLong() const {
  const ProofOfWork& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.ProofOfWork)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // bytes pow_data = 4;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_pow_data().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_pow_data());
      }
    }
    // uint64 pow_algo = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_pow_algo() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_pow_algo());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ProofOfWork::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ProofOfWork*>(&to_msg);
  auto& from = static_cast<const ProofOfWork&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.ProofOfWork)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_pow_data().empty()) {
        _this->_internal_set_pow_data(from._internal_pow_data());
      } else {
        if (_this->_impl_.pow_data_.IsDefault()) {
          _this->_internal_set_pow_data("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_pow_algo() != 0) {
        _this->_impl_.pow_algo_ = from._impl_.pow_algo_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProofOfWork::CopyFrom(const ProofOfWork& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.ProofOfWork)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ProofOfWork::InternalSwap(ProofOfWork* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pow_data_, &other->_impl_.pow_data_, arena);
  swap(_impl_.pow_algo_, other->_impl_.pow_algo_);
}

::google::protobuf::Metadata ProofOfWork::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PowAlgo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PowAlgo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PowAlgo, _impl_._has_bits_);
};

PowAlgo::PowAlgo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PowAlgo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.PowAlgo)
}
PowAlgo::PowAlgo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PowAlgo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PowAlgo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PowAlgo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PowAlgo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pow_algo_ = {};
}
PowAlgo::~PowAlgo() {
  // @@protoc_insertion_point(destructor:tari.rpc.PowAlgo)
  SharedDtor(*this);
}
inline void PowAlgo::SharedDtor(MessageLite& self) {
  PowAlgo& this_ = static_cast<PowAlgo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PowAlgo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PowAlgo(arena);
}
constexpr auto PowAlgo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PowAlgo),
                                            alignof(PowAlgo));
}
constexpr auto PowAlgo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PowAlgo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PowAlgo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PowAlgo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PowAlgo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PowAlgo>(), &PowAlgo::ByteSizeLong,
              &PowAlgo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PowAlgo, _impl_._cached_size_),
          false,
      },
      &PowAlgo::kDescriptorMethods,
      &descriptor_table_block_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PowAlgo_class_data_ =
        PowAlgo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PowAlgo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PowAlgo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PowAlgo_class_data_.tc_table);
  return PowAlgo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
PowAlgo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PowAlgo, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PowAlgo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::PowAlgo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tari.rpc.PowAlgo.PowAlgos pow_algo = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PowAlgo, _impl_.pow_algo_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PowAlgo, _impl_.pow_algo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tari.rpc.PowAlgo.PowAlgos pow_algo = 1;
    {PROTOBUF_FIELD_OFFSET(PowAlgo, _impl_.pow_algo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PowAlgo::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.PowAlgo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pow_algo_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PowAlgo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PowAlgo& this_ = static_cast<const PowAlgo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PowAlgo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PowAlgo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.PowAlgo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .tari.rpc.PowAlgo.PowAlgos pow_algo = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_pow_algo() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_pow_algo(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.PowAlgo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PowAlgo::ByteSizeLong(const MessageLite& base) {
  const PowAlgo& this_ = static_cast<const PowAlgo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PowAlgo::ByteSizeLong() const {
  const PowAlgo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.PowAlgo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .tari.rpc.PowAlgo.PowAlgos pow_algo = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_pow_algo() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_pow_algo());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PowAlgo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PowAlgo*>(&to_msg);
  auto& from = static_cast<const PowAlgo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.PowAlgo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_pow_algo() != 0) {
      _this->_impl_.pow_algo_ = from._impl_.pow_algo_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PowAlgo::CopyFrom(const PowAlgo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.PowAlgo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PowAlgo::InternalSwap(PowAlgo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.pow_algo_, other->_impl_.pow_algo_);
}

::google::protobuf::Metadata PowAlgo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Block::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Block>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Block, _impl_._has_bits_);
};

void Block::clear_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.body_ != nullptr) _impl_.body_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Block::Block(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Block_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.Block)
}
PROTOBUF_NDEBUG_INLINE Block::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::Block& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Block::Block(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Block& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Block_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Block* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;
  _impl_.body_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.body_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.Block)
}
PROTOBUF_NDEBUG_INLINE Block::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Block::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, body_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::body_));
}
Block::~Block() {
  // @@protoc_insertion_point(destructor:tari.rpc.Block)
  SharedDtor(*this);
}
inline void Block::SharedDtor(MessageLite& self) {
  Block& this_ = static_cast<Block&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  delete this_._impl_.body_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Block::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Block(arena);
}
constexpr auto Block::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Block),
                                            alignof(Block));
}
constexpr auto Block::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Block_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Block::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Block>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Block::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Block>(), &Block::ByteSizeLong,
              &Block::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Block, _impl_._cached_size_),
          false,
      },
      &Block::kDescriptorMethods,
      &descriptor_table_block_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Block_class_data_ =
        Block::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Block::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Block_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Block_class_data_.tc_table);
  return Block_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
Block::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Block, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Block_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::Block>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tari.rpc.AggregateBody body = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Block, _impl_.body_)}},
    // .tari.rpc.BlockHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Block, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tari.rpc.BlockHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.AggregateBody body = 2;
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.body_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::BlockHeader>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::AggregateBody>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.Block)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.body_ != nullptr);
      _impl_.body_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Block::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Block& this_ = static_cast<const Block&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Block::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Block& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.Block)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.BlockHeader header = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // .tari.rpc.AggregateBody body = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.body_, this_._impl_.body_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.Block)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Block::ByteSizeLong(const MessageLite& base) {
  const Block& this_ = static_cast<const Block&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Block::ByteSizeLong() const {
  const Block& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.Block)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .tari.rpc.BlockHeader header = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
    // .tari.rpc.AggregateBody body = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.body_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Block::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Block*>(&to_msg);
  auto& from = static_cast<const Block&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.Block)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.body_ != nullptr);
      if (_this->_impl_.body_ == nullptr) {
        _this->_impl_.body_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.body_);
      } else {
        _this->_impl_.body_->MergeFrom(*from._impl_.body_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Block::InternalSwap(Block* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Block, _impl_.body_)
      + sizeof(Block::_impl_.body_)
      - PROTOBUF_FIELD_OFFSET(Block, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata Block::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistoricalBlock::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HistoricalBlock>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HistoricalBlock, _impl_._has_bits_);
};

HistoricalBlock::HistoricalBlock(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HistoricalBlock_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.HistoricalBlock)
}
PROTOBUF_NDEBUG_INLINE HistoricalBlock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::HistoricalBlock& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HistoricalBlock::HistoricalBlock(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HistoricalBlock& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HistoricalBlock_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HistoricalBlock* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.block_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.block_)
                : nullptr;
  _impl_.confirmations_ = from._impl_.confirmations_;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.HistoricalBlock)
}
PROTOBUF_NDEBUG_INLINE HistoricalBlock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void HistoricalBlock::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, block_),
           0,
           offsetof(Impl_, confirmations_) -
               offsetof(Impl_, block_) +
               sizeof(Impl_::confirmations_));
}
HistoricalBlock::~HistoricalBlock() {
  // @@protoc_insertion_point(destructor:tari.rpc.HistoricalBlock)
  SharedDtor(*this);
}
inline void HistoricalBlock::SharedDtor(MessageLite& self) {
  HistoricalBlock& this_ = static_cast<HistoricalBlock&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.block_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HistoricalBlock::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HistoricalBlock(arena);
}
constexpr auto HistoricalBlock::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HistoricalBlock),
                                            alignof(HistoricalBlock));
}
constexpr auto HistoricalBlock::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HistoricalBlock_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HistoricalBlock::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HistoricalBlock>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HistoricalBlock::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HistoricalBlock>(), &HistoricalBlock::ByteSizeLong,
              &HistoricalBlock::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HistoricalBlock, _impl_._cached_size_),
          false,
      },
      &HistoricalBlock::kDescriptorMethods,
      &descriptor_table_block_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HistoricalBlock_class_data_ =
        HistoricalBlock::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HistoricalBlock::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HistoricalBlock_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HistoricalBlock_class_data_.tc_table);
  return HistoricalBlock_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
HistoricalBlock::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HistoricalBlock, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    HistoricalBlock_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::HistoricalBlock>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tari.rpc.Block block = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(HistoricalBlock, _impl_.block_)}},
    // uint64 confirmations = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HistoricalBlock, _impl_.confirmations_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(HistoricalBlock, _impl_.confirmations_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 confirmations = 1;
    {PROTOBUF_FIELD_OFFSET(HistoricalBlock, _impl_.confirmations_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // .tari.rpc.Block block = 2;
    {PROTOBUF_FIELD_OFFSET(HistoricalBlock, _impl_.block_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::Block>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void HistoricalBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.HistoricalBlock)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.block_ != nullptr);
    _impl_.block_->Clear();
  }
  _impl_.confirmations_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HistoricalBlock::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HistoricalBlock& this_ = static_cast<const HistoricalBlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HistoricalBlock::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HistoricalBlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.HistoricalBlock)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 confirmations = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_confirmations() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_confirmations(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.Block block = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.block_, this_._impl_.block_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.HistoricalBlock)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HistoricalBlock::ByteSizeLong(const MessageLite& base) {
  const HistoricalBlock& this_ = static_cast<const HistoricalBlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HistoricalBlock::ByteSizeLong() const {
  const HistoricalBlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.HistoricalBlock)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .tari.rpc.Block block = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.block_);
    }
    // uint64 confirmations = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_confirmations() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_confirmations());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HistoricalBlock::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistoricalBlock*>(&to_msg);
  auto& from = static_cast<const HistoricalBlock&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.HistoricalBlock)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.block_ != nullptr);
      if (_this->_impl_.block_ == nullptr) {
        _this->_impl_.block_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.block_);
      } else {
        _this->_impl_.block_->MergeFrom(*from._impl_.block_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_confirmations() != 0) {
        _this->_impl_.confirmations_ = from._impl_.confirmations_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoricalBlock::CopyFrom(const HistoricalBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.HistoricalBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistoricalBlock::InternalSwap(HistoricalBlock* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HistoricalBlock, _impl_.confirmations_)
      + sizeof(HistoricalBlock::_impl_.confirmations_)
      - PROTOBUF_FIELD_OFFSET(HistoricalBlock, _impl_.block_)>(
          reinterpret_cast<char*>(&_impl_.block_),
          reinterpret_cast<char*>(&other->_impl_.block_));
}

::google::protobuf::Metadata HistoricalBlock::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NewBlockHeaderTemplate::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NewBlockHeaderTemplate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_._has_bits_);
};

NewBlockHeaderTemplate::NewBlockHeaderTemplate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NewBlockHeaderTemplate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.NewBlockHeaderTemplate)
}
PROTOBUF_NDEBUG_INLINE NewBlockHeaderTemplate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::NewBlockHeaderTemplate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        prev_hash_(arena, from.prev_hash_),
        total_kernel_offset_(arena, from.total_kernel_offset_),
        total_script_offset_(arena, from.total_script_offset_) {}

NewBlockHeaderTemplate::NewBlockHeaderTemplate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NewBlockHeaderTemplate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NewBlockHeaderTemplate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NewBlockHeaderTemplate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pow_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pow_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, height_),
           offsetof(Impl_, version_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::version_));

  // @@protoc_insertion_point(copy_constructor:tari.rpc.NewBlockHeaderTemplate)
}
PROTOBUF_NDEBUG_INLINE NewBlockHeaderTemplate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        prev_hash_(arena),
        total_kernel_offset_(arena),
        total_script_offset_(arena) {}

inline void NewBlockHeaderTemplate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pow_),
           0,
           offsetof(Impl_, version_) -
               offsetof(Impl_, pow_) +
               sizeof(Impl_::version_));
}
NewBlockHeaderTemplate::~NewBlockHeaderTemplate() {
  // @@protoc_insertion_point(destructor:tari.rpc.NewBlockHeaderTemplate)
  SharedDtor(*this);
}
inline void NewBlockHeaderTemplate::SharedDtor(MessageLite& self) {
  NewBlockHeaderTemplate& this_ = static_cast<NewBlockHeaderTemplate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.prev_hash_.Destroy();
  this_._impl_.total_kernel_offset_.Destroy();
  this_._impl_.total_script_offset_.Destroy();
  delete this_._impl_.pow_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NewBlockHeaderTemplate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NewBlockHeaderTemplate(arena);
}
constexpr auto NewBlockHeaderTemplate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NewBlockHeaderTemplate),
                                            alignof(NewBlockHeaderTemplate));
}
constexpr auto NewBlockHeaderTemplate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NewBlockHeaderTemplate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NewBlockHeaderTemplate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NewBlockHeaderTemplate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NewBlockHeaderTemplate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NewBlockHeaderTemplate>(), &NewBlockHeaderTemplate::ByteSizeLong,
              &NewBlockHeaderTemplate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_._cached_size_),
          false,
      },
      &NewBlockHeaderTemplate::kDescriptorMethods,
      &descriptor_table_block_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NewBlockHeaderTemplate_class_data_ =
        NewBlockHeaderTemplate::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NewBlockHeaderTemplate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NewBlockHeaderTemplate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NewBlockHeaderTemplate_class_data_.tc_table);
  return NewBlockHeaderTemplate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2>
NewBlockHeaderTemplate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NewBlockHeaderTemplate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::NewBlockHeaderTemplate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NewBlockHeaderTemplate, _impl_.version_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_.version_)}},
    // uint64 height = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NewBlockHeaderTemplate, _impl_.height_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_.height_)}},
    // bytes prev_hash = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_.prev_hash_)}},
    // bytes total_kernel_offset = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_.total_kernel_offset_)}},
    // .tari.rpc.ProofOfWork pow = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_.pow_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bytes total_script_offset = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_.total_script_offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 version = 1;
    {PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_.version_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint64 height = 2;
    {PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_.height_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // bytes prev_hash = 3;
    {PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_.prev_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes total_kernel_offset = 4;
    {PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_.total_kernel_offset_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // .tari.rpc.ProofOfWork pow = 5;
    {PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_.pow_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes total_script_offset = 7;
    {PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_.total_script_offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::ProofOfWork>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void NewBlockHeaderTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.NewBlockHeaderTemplate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.prev_hash_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.total_kernel_offset_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.total_script_offset_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.pow_ != nullptr);
      _impl_.pow_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000030u) != 0) {
    ::memset(&_impl_.height_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.version_) -
        reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.version_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NewBlockHeaderTemplate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NewBlockHeaderTemplate& this_ = static_cast<const NewBlockHeaderTemplate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NewBlockHeaderTemplate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NewBlockHeaderTemplate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.NewBlockHeaderTemplate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 version = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_version(), target);
    }
  }

  // uint64 height = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_height() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_height(), target);
    }
  }

  // bytes prev_hash = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_prev_hash().empty()) {
      const ::std::string& _s = this_._internal_prev_hash();
      target = stream->WriteBytesMaybeAliased(3, _s, target);
    }
  }

  // bytes total_kernel_offset = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_total_kernel_offset().empty()) {
      const ::std::string& _s = this_._internal_total_kernel_offset();
      target = stream->WriteBytesMaybeAliased(4, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.ProofOfWork pow = 5;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.pow_, this_._impl_.pow_->GetCachedSize(), target,
        stream);
  }

  // bytes total_script_offset = 7;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_total_script_offset().empty()) {
      const ::std::string& _s = this_._internal_total_script_offset();
      target = stream->WriteBytesMaybeAliased(7, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.NewBlockHeaderTemplate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NewBlockHeaderTemplate::ByteSizeLong(const MessageLite& base) {
  const NewBlockHeaderTemplate& this_ = static_cast<const NewBlockHeaderTemplate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NewBlockHeaderTemplate::ByteSizeLong() const {
  const NewBlockHeaderTemplate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.NewBlockHeaderTemplate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // bytes prev_hash = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_prev_hash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_prev_hash());
      }
    }
    // bytes total_kernel_offset = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_total_kernel_offset().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_total_kernel_offset());
      }
    }
    // bytes total_script_offset = 7;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_total_script_offset().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_total_script_offset());
      }
    }
    // .tari.rpc.ProofOfWork pow = 5;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pow_);
    }
    // uint64 height = 2;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_height() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_height());
      }
    }
    // uint32 version = 1;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_version());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NewBlockHeaderTemplate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NewBlockHeaderTemplate*>(&to_msg);
  auto& from = static_cast<const NewBlockHeaderTemplate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.NewBlockHeaderTemplate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_prev_hash().empty()) {
        _this->_internal_set_prev_hash(from._internal_prev_hash());
      } else {
        if (_this->_impl_.prev_hash_.IsDefault()) {
          _this->_internal_set_prev_hash("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_total_kernel_offset().empty()) {
        _this->_internal_set_total_kernel_offset(from._internal_total_kernel_offset());
      } else {
        if (_this->_impl_.total_kernel_offset_.IsDefault()) {
          _this->_internal_set_total_kernel_offset("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_total_script_offset().empty()) {
        _this->_internal_set_total_script_offset(from._internal_total_script_offset());
      } else {
        if (_this->_impl_.total_script_offset_.IsDefault()) {
          _this->_internal_set_total_script_offset("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.pow_ != nullptr);
      if (_this->_impl_.pow_ == nullptr) {
        _this->_impl_.pow_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pow_);
      } else {
        _this->_impl_.pow_->MergeFrom(*from._impl_.pow_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_height() != 0) {
        _this->_impl_.height_ = from._impl_.height_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_version() != 0) {
        _this->_impl_.version_ = from._impl_.version_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NewBlockHeaderTemplate::CopyFrom(const NewBlockHeaderTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.NewBlockHeaderTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NewBlockHeaderTemplate::InternalSwap(NewBlockHeaderTemplate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prev_hash_, &other->_impl_.prev_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.total_kernel_offset_, &other->_impl_.total_kernel_offset_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.total_script_offset_, &other->_impl_.total_script_offset_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_.version_)
      + sizeof(NewBlockHeaderTemplate::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(NewBlockHeaderTemplate, _impl_.pow_)>(
          reinterpret_cast<char*>(&_impl_.pow_),
          reinterpret_cast<char*>(&other->_impl_.pow_));
}

::google::protobuf::Metadata NewBlockHeaderTemplate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NewBlockTemplate::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NewBlockTemplate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NewBlockTemplate, _impl_._has_bits_);
};

void NewBlockTemplate::clear_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.body_ != nullptr) _impl_.body_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
NewBlockTemplate::NewBlockTemplate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NewBlockTemplate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.NewBlockTemplate)
}
PROTOBUF_NDEBUG_INLINE NewBlockTemplate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::NewBlockTemplate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NewBlockTemplate::NewBlockTemplate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NewBlockTemplate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NewBlockTemplate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NewBlockTemplate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;
  _impl_.body_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.body_)
                : nullptr;
  _impl_.is_mempool_in_sync_ = from._impl_.is_mempool_in_sync_;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.NewBlockTemplate)
}
PROTOBUF_NDEBUG_INLINE NewBlockTemplate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void NewBlockTemplate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, is_mempool_in_sync_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::is_mempool_in_sync_));
}
NewBlockTemplate::~NewBlockTemplate() {
  // @@protoc_insertion_point(destructor:tari.rpc.NewBlockTemplate)
  SharedDtor(*this);
}
inline void NewBlockTemplate::SharedDtor(MessageLite& self) {
  NewBlockTemplate& this_ = static_cast<NewBlockTemplate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  delete this_._impl_.body_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NewBlockTemplate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NewBlockTemplate(arena);
}
constexpr auto NewBlockTemplate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NewBlockTemplate),
                                            alignof(NewBlockTemplate));
}
constexpr auto NewBlockTemplate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NewBlockTemplate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NewBlockTemplate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NewBlockTemplate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NewBlockTemplate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NewBlockTemplate>(), &NewBlockTemplate::ByteSizeLong,
              &NewBlockTemplate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NewBlockTemplate, _impl_._cached_size_),
          false,
      },
      &NewBlockTemplate::kDescriptorMethods,
      &descriptor_table_block_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NewBlockTemplate_class_data_ =
        NewBlockTemplate::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NewBlockTemplate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NewBlockTemplate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NewBlockTemplate_class_data_.tc_table);
  return NewBlockTemplate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
NewBlockTemplate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NewBlockTemplate, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NewBlockTemplate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::NewBlockTemplate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tari.rpc.NewBlockHeaderTemplate header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NewBlockTemplate, _impl_.header_)}},
    // .tari.rpc.AggregateBody body = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(NewBlockTemplate, _impl_.body_)}},
    // bool is_mempool_in_sync = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NewBlockTemplate, _impl_.is_mempool_in_sync_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(NewBlockTemplate, _impl_.is_mempool_in_sync_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tari.rpc.NewBlockHeaderTemplate header = 1;
    {PROTOBUF_FIELD_OFFSET(NewBlockTemplate, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.AggregateBody body = 2;
    {PROTOBUF_FIELD_OFFSET(NewBlockTemplate, _impl_.body_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_mempool_in_sync = 3;
    {PROTOBUF_FIELD_OFFSET(NewBlockTemplate, _impl_.is_mempool_in_sync_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::NewBlockHeaderTemplate>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::AggregateBody>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void NewBlockTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.NewBlockTemplate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.body_ != nullptr);
      _impl_.body_->Clear();
    }
  }
  _impl_.is_mempool_in_sync_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NewBlockTemplate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NewBlockTemplate& this_ = static_cast<const NewBlockTemplate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NewBlockTemplate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NewBlockTemplate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.NewBlockTemplate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.NewBlockHeaderTemplate header = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // .tari.rpc.AggregateBody body = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.body_, this_._impl_.body_->GetCachedSize(), target,
        stream);
  }

  // bool is_mempool_in_sync = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_is_mempool_in_sync() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_is_mempool_in_sync(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.NewBlockTemplate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NewBlockTemplate::ByteSizeLong(const MessageLite& base) {
  const NewBlockTemplate& this_ = static_cast<const NewBlockTemplate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NewBlockTemplate::ByteSizeLong() const {
  const NewBlockTemplate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.NewBlockTemplate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .tari.rpc.NewBlockHeaderTemplate header = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
    // .tari.rpc.AggregateBody body = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.body_);
    }
    // bool is_mempool_in_sync = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_is_mempool_in_sync() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NewBlockTemplate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NewBlockTemplate*>(&to_msg);
  auto& from = static_cast<const NewBlockTemplate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.NewBlockTemplate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.body_ != nullptr);
      if (_this->_impl_.body_ == nullptr) {
        _this->_impl_.body_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.body_);
      } else {
        _this->_impl_.body_->MergeFrom(*from._impl_.body_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_is_mempool_in_sync() != 0) {
        _this->_impl_.is_mempool_in_sync_ = from._impl_.is_mempool_in_sync_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NewBlockTemplate::CopyFrom(const NewBlockTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.NewBlockTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NewBlockTemplate::InternalSwap(NewBlockTemplate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NewBlockTemplate, _impl_.is_mempool_in_sync_)
      + sizeof(NewBlockTemplate::_impl_.is_mempool_in_sync_)
      - PROTOBUF_FIELD_OFFSET(NewBlockTemplate, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata NewBlockTemplate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
}  // namespace tari
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_block_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
