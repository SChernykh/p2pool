// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: network.proto
// Protobuf C++ Version: 6.31.1

#include "network.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tari {
namespace rpc {

inline constexpr SoftwareUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sha_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        download_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        has_update_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SoftwareUpdate::SoftwareUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SoftwareUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SoftwareUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SoftwareUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SoftwareUpdateDefaultTypeInternal() {}
  union {
    SoftwareUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SoftwareUpdateDefaultTypeInternal _SoftwareUpdate_default_instance_;

inline constexpr NodeIdentity::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        public_addresses_{},
        public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR NodeIdentity::NodeIdentity(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NodeIdentity_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeIdentityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeIdentityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeIdentityDefaultTypeInternal() {}
  union {
    NodeIdentity _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeIdentityDefaultTypeInternal _NodeIdentity_default_instance_;

inline constexpr NetworkStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{static_cast< ::tari::rpc::ConnectivityStatus >(0)},
        avg_latency_ms_{0u},
        num_node_connections_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkStatusResponse::NetworkStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NetworkStatusResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetworkStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkStatusResponseDefaultTypeInternal() {}
  union {
    NetworkStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkStatusResponseDefaultTypeInternal _NetworkStatusResponse_default_instance_;

inline constexpr GetIdentityResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        public_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetIdentityResponse::GetIdentityResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetIdentityResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetIdentityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetIdentityResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetIdentityResponseDefaultTypeInternal() {}
  union {
    GetIdentityResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetIdentityResponseDefaultTypeInternal _GetIdentityResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetIdentityRequest::GetIdentityRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(GetIdentityRequest_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GetIdentityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetIdentityRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetIdentityRequestDefaultTypeInternal() {}
  union {
    GetIdentityRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetIdentityRequestDefaultTypeInternal _GetIdentityRequest_default_instance_;

inline constexpr AverageLatency::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        latency_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR AverageLatency::AverageLatency(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AverageLatency_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AverageLatencyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AverageLatencyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AverageLatencyDefaultTypeInternal() {}
  union {
    AverageLatency _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AverageLatencyDefaultTypeInternal _AverageLatency_default_instance_;

inline constexpr Address::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_seen_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        avg_latency_{nullptr},
        connection_attempts_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Address::Address(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Address_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddressDefaultTypeInternal() {}
  union {
    Address _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddressDefaultTypeInternal _Address_default_instance_;

inline constexpr Peer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        addresses_{},
        supported_protocols_{},
        public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        banned_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_agent_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_connection_{::uint64_t{0u}},
        banned_until_{::uint64_t{0u}},
        flags_{0u},
        features_{0u},
        offline_at_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Peer::Peer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Peer_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PeerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerDefaultTypeInternal() {}
  union {
    Peer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerDefaultTypeInternal _Peer_default_instance_;

inline constexpr ListConnectedPeersResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : connected_peers_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListConnectedPeersResponse::ListConnectedPeersResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListConnectedPeersResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListConnectedPeersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListConnectedPeersResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListConnectedPeersResponseDefaultTypeInternal() {}
  union {
    ListConnectedPeersResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListConnectedPeersResponseDefaultTypeInternal _ListConnectedPeersResponse_default_instance_;
}  // namespace rpc
}  // namespace tari
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_network_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_network_2eproto = nullptr;
const ::uint32_t
    TableStruct_network_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NodeIdentity, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NodeIdentity, _impl_.public_key_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NodeIdentity, _impl_.public_addresses_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NodeIdentity, _impl_.node_id_),
        0,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Peer, _impl_._has_bits_),
        14, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Peer, _impl_.public_key_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Peer, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Peer, _impl_.addresses_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Peer, _impl_.last_connection_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Peer, _impl_.flags_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Peer, _impl_.banned_until_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Peer, _impl_.banned_reason_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Peer, _impl_.offline_at_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Peer, _impl_.features_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Peer, _impl_.supported_protocols_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Peer, _impl_.user_agent_),
        0,
        1,
        ~0u,
        4,
        6,
        5,
        2,
        8,
        7,
        ~0u,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NetworkStatusResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NetworkStatusResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NetworkStatusResponse, _impl_.avg_latency_ms_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::NetworkStatusResponse, _impl_.num_node_connections_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Address, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Address, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Address, _impl_.last_seen_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Address, _impl_.connection_attempts_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Address, _impl_.avg_latency_),
        0,
        1,
        3,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::AverageLatency, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::AverageLatency, _impl_.latency_),
        0,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ListConnectedPeersResponse, _impl_.connected_peers_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SoftwareUpdate, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SoftwareUpdate, _impl_.has_update_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SoftwareUpdate, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SoftwareUpdate, _impl_.sha_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SoftwareUpdate, _impl_.download_url_),
        3,
        0,
        1,
        2,
        0x000, // bitmap
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::GetIdentityResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::GetIdentityResponse, _impl_.public_key_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::GetIdentityResponse, _impl_.public_address_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::GetIdentityResponse, _impl_.node_id_),
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::tari::rpc::NodeIdentity)},
        {9, sizeof(::tari::rpc::Peer)},
        {34, sizeof(::tari::rpc::NetworkStatusResponse)},
        {43, sizeof(::tari::rpc::Address)},
        {54, sizeof(::tari::rpc::AverageLatency)},
        {59, sizeof(::tari::rpc::ListConnectedPeersResponse)},
        {61, sizeof(::tari::rpc::SoftwareUpdate)},
        {72, sizeof(::tari::rpc::GetIdentityRequest)},
        {73, sizeof(::tari::rpc::GetIdentityResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::tari::rpc::_NodeIdentity_default_instance_._instance,
    &::tari::rpc::_Peer_default_instance_._instance,
    &::tari::rpc::_NetworkStatusResponse_default_instance_._instance,
    &::tari::rpc::_Address_default_instance_._instance,
    &::tari::rpc::_AverageLatency_default_instance_._instance,
    &::tari::rpc::_ListConnectedPeersResponse_default_instance_._instance,
    &::tari::rpc::_SoftwareUpdate_default_instance_._instance,
    &::tari::rpc::_GetIdentityRequest_default_instance_._instance,
    &::tari::rpc::_GetIdentityResponse_default_instance_._instance,
};
const char descriptor_table_protodef_network_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rnetwork.proto\022\010tari.rpc\032\037google/protob"
    "uf/timestamp.proto\"M\n\014NodeIdentity\022\022\n\npu"
    "blic_key\030\001 \001(\014\022\030\n\020public_addresses\030\002 \003(\t"
    "\022\017\n\007node_id\030\003 \001(\014\"\375\001\n\004Peer\022\022\n\npublic_key"
    "\030\001 \001(\014\022\017\n\007node_id\030\002 \001(\014\022$\n\taddresses\030\003 \003"
    "(\0132\021.tari.rpc.Address\022\027\n\017last_connection"
    "\030\004 \001(\004\022\r\n\005flags\030\005 \001(\r\022\024\n\014banned_until\030\006 "
    "\001(\004\022\025\n\rbanned_reason\030\007 \001(\t\022\022\n\noffline_at"
    "\030\010 \001(\004\022\020\n\010features\030\t \001(\r\022\033\n\023supported_pr"
    "otocols\030\013 \003(\014\022\022\n\nuser_agent\030\014 \001(\t\"{\n\025Net"
    "workStatusResponse\022,\n\006status\030\001 \001(\0162\034.tar"
    "i.rpc.ConnectivityStatus\022\026\n\016avg_latency_"
    "ms\030\002 \001(\r\022\034\n\024num_node_connections\030\003 \001(\r\"y"
    "\n\007Address\022\017\n\007address\030\001 \001(\014\022\021\n\tlast_seen\030"
    "\002 \001(\t\022\033\n\023connection_attempts\030\003 \001(\r\022-\n\013av"
    "g_latency\030\005 \001(\0132\030.tari.rpc.AverageLatenc"
    "y\"!\n\016AverageLatency\022\017\n\007latency\030\001 \001(\004\"E\n\032"
    "ListConnectedPeersResponse\022\'\n\017connected_"
    "peers\030\001 \003(\0132\016.tari.rpc.Peer\"X\n\016SoftwareU"
    "pdate\022\022\n\nhas_update\030\001 \001(\010\022\017\n\007version\030\002 \001"
    "(\t\022\013\n\003sha\030\003 \001(\t\022\024\n\014download_url\030\004 \001(\t\"\024\n"
    "\022GetIdentityRequest\"R\n\023GetIdentityRespon"
    "se\022\022\n\npublic_key\030\001 \001(\014\022\026\n\016public_address"
    "\030\002 \001(\t\022\017\n\007node_id\030\003 \001(\014*M\n\022ConnectivityS"
    "tatus\022\020\n\014Initializing\020\000\022\n\n\006Online\020\001\022\014\n\010D"
    "egraded\020\002\022\013\n\007Offline\020\003b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_network_2eproto_deps[1] = {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_network_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_network_2eproto = {
    false,
    false,
    1030,
    descriptor_table_protodef_network_2eproto,
    "network.proto",
    &descriptor_table_network_2eproto_once,
    descriptor_table_network_2eproto_deps,
    1,
    9,
    schemas,
    file_default_instances,
    TableStruct_network_2eproto::offsets,
    file_level_enum_descriptors_network_2eproto,
    file_level_service_descriptors_network_2eproto,
};
namespace tari {
namespace rpc {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ConnectivityStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_network_2eproto);
  return file_level_enum_descriptors_network_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ConnectivityStatus_internal_data_[] = {
    262144u, 0u, };
// ===================================================================

class NodeIdentity::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NodeIdentity>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NodeIdentity, _impl_._has_bits_);
};

NodeIdentity::NodeIdentity(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NodeIdentity_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.NodeIdentity)
}
PROTOBUF_NDEBUG_INLINE NodeIdentity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::NodeIdentity& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        public_addresses_{visibility, arena, from.public_addresses_},
        public_key_(arena, from.public_key_),
        node_id_(arena, from.node_id_) {}

NodeIdentity::NodeIdentity(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NodeIdentity& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NodeIdentity_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeIdentity* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.NodeIdentity)
}
PROTOBUF_NDEBUG_INLINE NodeIdentity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        public_addresses_{visibility, arena},
        public_key_(arena),
        node_id_(arena) {}

inline void NodeIdentity::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeIdentity::~NodeIdentity() {
  // @@protoc_insertion_point(destructor:tari.rpc.NodeIdentity)
  SharedDtor(*this);
}
inline void NodeIdentity::SharedDtor(MessageLite& self) {
  NodeIdentity& this_ = static_cast<NodeIdentity&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.public_key_.Destroy();
  this_._impl_.node_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NodeIdentity::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NodeIdentity(arena);
}
constexpr auto NodeIdentity::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NodeIdentity, _impl_.public_addresses_) +
          decltype(NodeIdentity::_impl_.public_addresses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NodeIdentity), alignof(NodeIdentity), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NodeIdentity::PlacementNew_,
                                 sizeof(NodeIdentity),
                                 alignof(NodeIdentity));
  }
}
constexpr auto NodeIdentity::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NodeIdentity_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NodeIdentity::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NodeIdentity>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NodeIdentity::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NodeIdentity>(), &NodeIdentity::ByteSizeLong,
              &NodeIdentity::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NodeIdentity, _impl_._cached_size_),
          false,
      },
      &NodeIdentity::kDescriptorMethods,
      &descriptor_table_network_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NodeIdentity_class_data_ =
        NodeIdentity::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NodeIdentity::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NodeIdentity_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NodeIdentity_class_data_.tc_table);
  return NodeIdentity_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 46, 2>
NodeIdentity::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeIdentity, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    NodeIdentity_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::NodeIdentity>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes public_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NodeIdentity, _impl_.public_key_)}},
    // repeated string public_addresses = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeIdentity, _impl_.public_addresses_)}},
    // bytes node_id = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(NodeIdentity, _impl_.node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes public_key = 1;
    {PROTOBUF_FIELD_OFFSET(NodeIdentity, _impl_.public_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated string public_addresses = 2;
    {PROTOBUF_FIELD_OFFSET(NodeIdentity, _impl_.public_addresses_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bytes node_id = 3;
    {PROTOBUF_FIELD_OFFSET(NodeIdentity, _impl_.node_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\0\20\0\0\0\0\0"
    "tari.rpc.NodeIdentity"
    "public_addresses"
  }},
};
PROTOBUF_NOINLINE void NodeIdentity::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.NodeIdentity)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.public_addresses_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.public_key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.node_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NodeIdentity::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NodeIdentity& this_ = static_cast<const NodeIdentity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NodeIdentity::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NodeIdentity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.NodeIdentity)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes public_key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_public_key().empty()) {
      const ::std::string& _s = this_._internal_public_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // repeated string public_addresses = 2;
  for (int i = 0, n = this_._internal_public_addresses_size(); i < n; ++i) {
    const auto& s = this_._internal_public_addresses().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tari.rpc.NodeIdentity.public_addresses");
    target = stream->WriteString(2, s, target);
  }

  // bytes node_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_node_id().empty()) {
      const ::std::string& _s = this_._internal_node_id();
      target = stream->WriteBytesMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.NodeIdentity)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NodeIdentity::ByteSizeLong(const MessageLite& base) {
  const NodeIdentity& this_ = static_cast<const NodeIdentity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NodeIdentity::ByteSizeLong() const {
  const NodeIdentity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.NodeIdentity)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string public_addresses = 2;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_public_addresses().size());
      for (int i = 0, n = this_._internal_public_addresses().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_public_addresses().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // bytes public_key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_public_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_public_key());
      }
    }
    // bytes node_id = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_node_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_node_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NodeIdentity::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeIdentity*>(&to_msg);
  auto& from = static_cast<const NodeIdentity&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.NodeIdentity)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_public_addresses()->MergeFrom(from._internal_public_addresses());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_public_key().empty()) {
        _this->_internal_set_public_key(from._internal_public_key());
      } else {
        if (_this->_impl_.public_key_.IsDefault()) {
          _this->_internal_set_public_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_node_id().empty()) {
        _this->_internal_set_node_id(from._internal_node_id());
      } else {
        if (_this->_impl_.node_id_.IsDefault()) {
          _this->_internal_set_node_id("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeIdentity::CopyFrom(const NodeIdentity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.NodeIdentity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeIdentity::InternalSwap(NodeIdentity* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.public_addresses_.InternalSwap(&other->_impl_.public_addresses_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.public_key_, &other->_impl_.public_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
}

::google::protobuf::Metadata NodeIdentity::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Peer::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Peer>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Peer, _impl_._has_bits_);
};

Peer::Peer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Peer_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.Peer)
}
PROTOBUF_NDEBUG_INLINE Peer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::Peer& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        addresses_{visibility, arena, from.addresses_},
        supported_protocols_{visibility, arena, from.supported_protocols_},
        public_key_(arena, from.public_key_),
        node_id_(arena, from.node_id_),
        banned_reason_(arena, from.banned_reason_),
        user_agent_(arena, from.user_agent_) {}

Peer::Peer(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Peer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Peer_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Peer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, last_connection_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, last_connection_),
           offsetof(Impl_, offline_at_) -
               offsetof(Impl_, last_connection_) +
               sizeof(Impl_::offline_at_));

  // @@protoc_insertion_point(copy_constructor:tari.rpc.Peer)
}
PROTOBUF_NDEBUG_INLINE Peer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        addresses_{visibility, arena},
        supported_protocols_{visibility, arena},
        public_key_(arena),
        node_id_(arena),
        banned_reason_(arena),
        user_agent_(arena) {}

inline void Peer::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, last_connection_),
           0,
           offsetof(Impl_, offline_at_) -
               offsetof(Impl_, last_connection_) +
               sizeof(Impl_::offline_at_));
}
Peer::~Peer() {
  // @@protoc_insertion_point(destructor:tari.rpc.Peer)
  SharedDtor(*this);
}
inline void Peer::SharedDtor(MessageLite& self) {
  Peer& this_ = static_cast<Peer&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.public_key_.Destroy();
  this_._impl_.node_id_.Destroy();
  this_._impl_.banned_reason_.Destroy();
  this_._impl_.user_agent_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Peer::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Peer(arena);
}
constexpr auto Peer::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Peer, _impl_.addresses_) +
          decltype(Peer::_impl_.addresses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Peer, _impl_.supported_protocols_) +
          decltype(Peer::_impl_.supported_protocols_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Peer), alignof(Peer), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Peer::PlacementNew_,
                                 sizeof(Peer),
                                 alignof(Peer));
  }
}
constexpr auto Peer::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Peer_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Peer::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Peer>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Peer::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Peer>(), &Peer::ByteSizeLong,
              &Peer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Peer, _impl_._cached_size_),
          false,
      },
      &Peer::kDescriptorMethods,
      &descriptor_table_network_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Peer_class_data_ =
        Peer::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Peer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Peer_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Peer_class_data_.tc_table);
  return Peer_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 53, 2>
Peer::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Peer, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963712,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Peer_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::Peer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes public_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Peer, _impl_.public_key_)}},
    // bytes node_id = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Peer, _impl_.node_id_)}},
    // repeated .tari.rpc.Address addresses = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Peer, _impl_.addresses_)}},
    // uint64 last_connection = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Peer, _impl_.last_connection_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(Peer, _impl_.last_connection_)}},
    // uint32 flags = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Peer, _impl_.flags_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(Peer, _impl_.flags_)}},
    // uint64 banned_until = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Peer, _impl_.banned_until_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(Peer, _impl_.banned_until_)}},
    // string banned_reason = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(Peer, _impl_.banned_reason_)}},
    // uint64 offline_at = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Peer, _impl_.offline_at_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(Peer, _impl_.offline_at_)}},
    // uint32 features = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Peer, _impl_.features_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(Peer, _impl_.features_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated bytes supported_protocols = 11;
    {::_pbi::TcParser::FastBR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Peer, _impl_.supported_protocols_)}},
    // string user_agent = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 3, 0, PROTOBUF_FIELD_OFFSET(Peer, _impl_.user_agent_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes public_key = 1;
    {PROTOBUF_FIELD_OFFSET(Peer, _impl_.public_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes node_id = 2;
    {PROTOBUF_FIELD_OFFSET(Peer, _impl_.node_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .tari.rpc.Address addresses = 3;
    {PROTOBUF_FIELD_OFFSET(Peer, _impl_.addresses_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 last_connection = 4;
    {PROTOBUF_FIELD_OFFSET(Peer, _impl_.last_connection_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint32 flags = 5;
    {PROTOBUF_FIELD_OFFSET(Peer, _impl_.flags_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint64 banned_until = 6;
    {PROTOBUF_FIELD_OFFSET(Peer, _impl_.banned_until_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // string banned_reason = 7;
    {PROTOBUF_FIELD_OFFSET(Peer, _impl_.banned_reason_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 offline_at = 8;
    {PROTOBUF_FIELD_OFFSET(Peer, _impl_.offline_at_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint32 features = 9;
    {PROTOBUF_FIELD_OFFSET(Peer, _impl_.features_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated bytes supported_protocols = 11;
    {PROTOBUF_FIELD_OFFSET(Peer, _impl_.supported_protocols_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // string user_agent = 12;
    {PROTOBUF_FIELD_OFFSET(Peer, _impl_.user_agent_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::Address>()},
  }},
  {{
    "\15\0\0\0\0\0\0\15\0\0\0\12\0\0\0\0"
    "tari.rpc.Peer"
    "banned_reason"
    "user_agent"
  }},
};
PROTOBUF_NOINLINE void Peer::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.Peer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.addresses_.Clear();
  _impl_.supported_protocols_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.public_key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.node_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.banned_reason_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.user_agent_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000f0u) != 0) {
    ::memset(&_impl_.last_connection_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.features_) -
        reinterpret_cast<char*>(&_impl_.last_connection_)) + sizeof(_impl_.features_));
  }
  _impl_.offline_at_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Peer::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Peer& this_ = static_cast<const Peer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Peer::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Peer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.Peer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes public_key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_public_key().empty()) {
      const ::std::string& _s = this_._internal_public_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // bytes node_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_node_id().empty()) {
      const ::std::string& _s = this_._internal_node_id();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // repeated .tari.rpc.Address addresses = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_addresses_size());
       i < n; i++) {
    const auto& repfield = this_._internal_addresses().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // uint64 last_connection = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_last_connection() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          4, this_._internal_last_connection(), target);
    }
  }

  // uint32 flags = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_flags() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          5, this_._internal_flags(), target);
    }
  }

  // uint64 banned_until = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_banned_until() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          6, this_._internal_banned_until(), target);
    }
  }

  // string banned_reason = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_banned_reason().empty()) {
      const ::std::string& _s = this_._internal_banned_reason();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tari.rpc.Peer.banned_reason");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  // uint64 offline_at = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_offline_at() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          8, this_._internal_offline_at(), target);
    }
  }

  // uint32 features = 9;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_features() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          9, this_._internal_features(), target);
    }
  }

  // repeated bytes supported_protocols = 11;
  for (int i = 0, n = this_._internal_supported_protocols_size(); i < n; ++i) {
    const auto& s = this_._internal_supported_protocols().Get(i);
    target = stream->WriteBytes(11, s, target);
  }

  // string user_agent = 12;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_user_agent().empty()) {
      const ::std::string& _s = this_._internal_user_agent();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tari.rpc.Peer.user_agent");
      target = stream->WriteStringMaybeAliased(12, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.Peer)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Peer::ByteSizeLong(const MessageLite& base) {
  const Peer& this_ = static_cast<const Peer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Peer::ByteSizeLong() const {
  const Peer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.Peer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .tari.rpc.Address addresses = 3;
    {
      total_size += 1UL * this_._internal_addresses_size();
      for (const auto& msg : this_._internal_addresses()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated bytes supported_protocols = 11;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_supported_protocols().size());
      for (int i = 0, n = this_._internal_supported_protocols().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
            this_._internal_supported_protocols().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // bytes public_key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_public_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_public_key());
      }
    }
    // bytes node_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_node_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_node_id());
      }
    }
    // string banned_reason = 7;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_banned_reason().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_banned_reason());
      }
    }
    // string user_agent = 12;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_user_agent().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_user_agent());
      }
    }
    // uint64 last_connection = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_last_connection() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_last_connection());
      }
    }
    // uint64 banned_until = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_banned_until() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_banned_until());
      }
    }
    // uint32 flags = 5;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_flags() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_flags());
      }
    }
    // uint32 features = 9;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_features() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_features());
      }
    }
  }
   {
    // uint64 offline_at = 8;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_offline_at() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_offline_at());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Peer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Peer*>(&to_msg);
  auto& from = static_cast<const Peer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.Peer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_addresses()->MergeFrom(
      from._internal_addresses());
  _this->_internal_mutable_supported_protocols()->MergeFrom(from._internal_supported_protocols());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_public_key().empty()) {
        _this->_internal_set_public_key(from._internal_public_key());
      } else {
        if (_this->_impl_.public_key_.IsDefault()) {
          _this->_internal_set_public_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_node_id().empty()) {
        _this->_internal_set_node_id(from._internal_node_id());
      } else {
        if (_this->_impl_.node_id_.IsDefault()) {
          _this->_internal_set_node_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_banned_reason().empty()) {
        _this->_internal_set_banned_reason(from._internal_banned_reason());
      } else {
        if (_this->_impl_.banned_reason_.IsDefault()) {
          _this->_internal_set_banned_reason("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_user_agent().empty()) {
        _this->_internal_set_user_agent(from._internal_user_agent());
      } else {
        if (_this->_impl_.user_agent_.IsDefault()) {
          _this->_internal_set_user_agent("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_last_connection() != 0) {
        _this->_impl_.last_connection_ = from._impl_.last_connection_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_banned_until() != 0) {
        _this->_impl_.banned_until_ = from._impl_.banned_until_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_flags() != 0) {
        _this->_impl_.flags_ = from._impl_.flags_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_features() != 0) {
        _this->_impl_.features_ = from._impl_.features_;
      }
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (from._internal_offline_at() != 0) {
      _this->_impl_.offline_at_ = from._impl_.offline_at_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Peer::CopyFrom(const Peer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.Peer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Peer::InternalSwap(Peer* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.addresses_.InternalSwap(&other->_impl_.addresses_);
  _impl_.supported_protocols_.InternalSwap(&other->_impl_.supported_protocols_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.public_key_, &other->_impl_.public_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.banned_reason_, &other->_impl_.banned_reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_agent_, &other->_impl_.user_agent_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Peer, _impl_.offline_at_)
      + sizeof(Peer::_impl_.offline_at_)
      - PROTOBUF_FIELD_OFFSET(Peer, _impl_.last_connection_)>(
          reinterpret_cast<char*>(&_impl_.last_connection_),
          reinterpret_cast<char*>(&other->_impl_.last_connection_));
}

::google::protobuf::Metadata Peer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NetworkStatusResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NetworkStatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_._has_bits_);
};

NetworkStatusResponse::NetworkStatusResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NetworkStatusResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.NetworkStatusResponse)
}
NetworkStatusResponse::NetworkStatusResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NetworkStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NetworkStatusResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE NetworkStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void NetworkStatusResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, num_node_connections_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::num_node_connections_));
}
NetworkStatusResponse::~NetworkStatusResponse() {
  // @@protoc_insertion_point(destructor:tari.rpc.NetworkStatusResponse)
  SharedDtor(*this);
}
inline void NetworkStatusResponse::SharedDtor(MessageLite& self) {
  NetworkStatusResponse& this_ = static_cast<NetworkStatusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NetworkStatusResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NetworkStatusResponse(arena);
}
constexpr auto NetworkStatusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NetworkStatusResponse),
                                            alignof(NetworkStatusResponse));
}
constexpr auto NetworkStatusResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NetworkStatusResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NetworkStatusResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NetworkStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NetworkStatusResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NetworkStatusResponse>(), &NetworkStatusResponse::ByteSizeLong,
              &NetworkStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_._cached_size_),
          false,
      },
      &NetworkStatusResponse::kDescriptorMethods,
      &descriptor_table_network_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NetworkStatusResponse_class_data_ =
        NetworkStatusResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NetworkStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NetworkStatusResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NetworkStatusResponse_class_data_.tc_table);
  return NetworkStatusResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
NetworkStatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    NetworkStatusResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::NetworkStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tari.rpc.ConnectivityStatus status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkStatusResponse, _impl_.status_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.status_)}},
    // uint32 avg_latency_ms = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkStatusResponse, _impl_.avg_latency_ms_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.avg_latency_ms_)}},
    // uint32 num_node_connections = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetworkStatusResponse, _impl_.num_node_connections_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.num_node_connections_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tari.rpc.ConnectivityStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // uint32 avg_latency_ms = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.avg_latency_ms_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 num_node_connections = 3;
    {PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.num_node_connections_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void NetworkStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.NetworkStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.status_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.num_node_connections_) -
        reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.num_node_connections_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NetworkStatusResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NetworkStatusResponse& this_ = static_cast<const NetworkStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NetworkStatusResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NetworkStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.NetworkStatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .tari.rpc.ConnectivityStatus status = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_status(), target);
    }
  }

  // uint32 avg_latency_ms = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_avg_latency_ms() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_avg_latency_ms(), target);
    }
  }

  // uint32 num_node_connections = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_num_node_connections() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_num_node_connections(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.NetworkStatusResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NetworkStatusResponse::ByteSizeLong(const MessageLite& base) {
  const NetworkStatusResponse& this_ = static_cast<const NetworkStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NetworkStatusResponse::ByteSizeLong() const {
  const NetworkStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.NetworkStatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .tari.rpc.ConnectivityStatus status = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
    // uint32 avg_latency_ms = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_avg_latency_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_avg_latency_ms());
      }
    }
    // uint32 num_node_connections = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_num_node_connections() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_num_node_connections());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NetworkStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetworkStatusResponse*>(&to_msg);
  auto& from = static_cast<const NetworkStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.NetworkStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_avg_latency_ms() != 0) {
        _this->_impl_.avg_latency_ms_ = from._impl_.avg_latency_ms_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_num_node_connections() != 0) {
        _this->_impl_.num_node_connections_ = from._impl_.num_node_connections_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkStatusResponse::CopyFrom(const NetworkStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.NetworkStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetworkStatusResponse::InternalSwap(NetworkStatusResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.num_node_connections_)
      + sizeof(NetworkStatusResponse::_impl_.num_node_connections_)
      - PROTOBUF_FIELD_OFFSET(NetworkStatusResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata NetworkStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Address::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Address>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Address, _impl_._has_bits_);
};

Address::Address(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Address_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.Address)
}
PROTOBUF_NDEBUG_INLINE Address::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::Address& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        address_(arena, from.address_),
        last_seen_(arena, from.last_seen_) {}

Address::Address(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Address& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Address_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Address* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.avg_latency_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.avg_latency_)
                : nullptr;
  _impl_.connection_attempts_ = from._impl_.connection_attempts_;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.Address)
}
PROTOBUF_NDEBUG_INLINE Address::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        address_(arena),
        last_seen_(arena) {}

inline void Address::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, avg_latency_),
           0,
           offsetof(Impl_, connection_attempts_) -
               offsetof(Impl_, avg_latency_) +
               sizeof(Impl_::connection_attempts_));
}
Address::~Address() {
  // @@protoc_insertion_point(destructor:tari.rpc.Address)
  SharedDtor(*this);
}
inline void Address::SharedDtor(MessageLite& self) {
  Address& this_ = static_cast<Address&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  this_._impl_.last_seen_.Destroy();
  delete this_._impl_.avg_latency_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Address::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Address(arena);
}
constexpr auto Address::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Address),
                                            alignof(Address));
}
constexpr auto Address::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Address_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Address::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Address>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Address::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Address>(), &Address::ByteSizeLong,
              &Address::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Address, _impl_._cached_size_),
          false,
      },
      &Address::kDescriptorMethods,
      &descriptor_table_network_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Address_class_data_ =
        Address::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Address::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Address_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Address_class_data_.tc_table);
  return Address_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 1, 34, 2>
Address::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Address, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Address_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::Address>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes address = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Address, _impl_.address_)}},
    // string last_seen = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Address, _impl_.last_seen_)}},
    // uint32 connection_attempts = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Address, _impl_.connection_attempts_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(Address, _impl_.connection_attempts_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tari.rpc.AverageLatency avg_latency = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(Address, _impl_.avg_latency_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes address = 1;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.address_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // string last_seen = 2;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.last_seen_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 connection_attempts = 3;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.connection_attempts_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .tari.rpc.AverageLatency avg_latency = 5;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.avg_latency_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::AverageLatency>()},
  }},
  {{
    "\20\0\11\0\0\0\0\0"
    "tari.rpc.Address"
    "last_seen"
  }},
};
PROTOBUF_NOINLINE void Address::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.Address)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.address_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.last_seen_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.avg_latency_ != nullptr);
      _impl_.avg_latency_->Clear();
    }
  }
  _impl_.connection_attempts_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Address::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Address& this_ = static_cast<const Address&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Address::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Address& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.Address)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes address = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_address().empty()) {
      const ::std::string& _s = this_._internal_address();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // string last_seen = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_last_seen().empty()) {
      const ::std::string& _s = this_._internal_last_seen();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tari.rpc.Address.last_seen");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // uint32 connection_attempts = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_connection_attempts() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_connection_attempts(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.AverageLatency avg_latency = 5;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.avg_latency_, this_._impl_.avg_latency_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.Address)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Address::ByteSizeLong(const MessageLite& base) {
  const Address& this_ = static_cast<const Address&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Address::ByteSizeLong() const {
  const Address& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.Address)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // bytes address = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_address().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_address());
      }
    }
    // string last_seen = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_last_seen().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_last_seen());
      }
    }
    // .tari.rpc.AverageLatency avg_latency = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.avg_latency_);
    }
    // uint32 connection_attempts = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_connection_attempts() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_connection_attempts());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Address::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Address*>(&to_msg);
  auto& from = static_cast<const Address&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.Address)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_address().empty()) {
        _this->_internal_set_address(from._internal_address());
      } else {
        if (_this->_impl_.address_.IsDefault()) {
          _this->_internal_set_address("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_last_seen().empty()) {
        _this->_internal_set_last_seen(from._internal_last_seen());
      } else {
        if (_this->_impl_.last_seen_.IsDefault()) {
          _this->_internal_set_last_seen("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.avg_latency_ != nullptr);
      if (_this->_impl_.avg_latency_ == nullptr) {
        _this->_impl_.avg_latency_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.avg_latency_);
      } else {
        _this->_impl_.avg_latency_->MergeFrom(*from._impl_.avg_latency_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_connection_attempts() != 0) {
        _this->_impl_.connection_attempts_ = from._impl_.connection_attempts_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Address::CopyFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Address::InternalSwap(Address* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_seen_, &other->_impl_.last_seen_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Address, _impl_.connection_attempts_)
      + sizeof(Address::_impl_.connection_attempts_)
      - PROTOBUF_FIELD_OFFSET(Address, _impl_.avg_latency_)>(
          reinterpret_cast<char*>(&_impl_.avg_latency_),
          reinterpret_cast<char*>(&other->_impl_.avg_latency_));
}

::google::protobuf::Metadata Address::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AverageLatency::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AverageLatency>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AverageLatency, _impl_._has_bits_);
};

AverageLatency::AverageLatency(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AverageLatency_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.AverageLatency)
}
AverageLatency::AverageLatency(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AverageLatency& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AverageLatency_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE AverageLatency::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void AverageLatency::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.latency_ = {};
}
AverageLatency::~AverageLatency() {
  // @@protoc_insertion_point(destructor:tari.rpc.AverageLatency)
  SharedDtor(*this);
}
inline void AverageLatency::SharedDtor(MessageLite& self) {
  AverageLatency& this_ = static_cast<AverageLatency&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AverageLatency::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AverageLatency(arena);
}
constexpr auto AverageLatency::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AverageLatency),
                                            alignof(AverageLatency));
}
constexpr auto AverageLatency::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AverageLatency_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AverageLatency::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AverageLatency>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AverageLatency::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AverageLatency>(), &AverageLatency::ByteSizeLong,
              &AverageLatency::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AverageLatency, _impl_._cached_size_),
          false,
      },
      &AverageLatency::kDescriptorMethods,
      &descriptor_table_network_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AverageLatency_class_data_ =
        AverageLatency::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AverageLatency::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AverageLatency_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AverageLatency_class_data_.tc_table);
  return AverageLatency_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
AverageLatency::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AverageLatency, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AverageLatency_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::AverageLatency>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 latency = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AverageLatency, _impl_.latency_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AverageLatency, _impl_.latency_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 latency = 1;
    {PROTOBUF_FIELD_OFFSET(AverageLatency, _impl_.latency_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void AverageLatency::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.AverageLatency)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.latency_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AverageLatency::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AverageLatency& this_ = static_cast<const AverageLatency&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AverageLatency::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AverageLatency& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.AverageLatency)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 latency = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_latency() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_latency(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.AverageLatency)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AverageLatency::ByteSizeLong(const MessageLite& base) {
  const AverageLatency& this_ = static_cast<const AverageLatency&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AverageLatency::ByteSizeLong() const {
  const AverageLatency& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.AverageLatency)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // uint64 latency = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_latency() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_latency());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AverageLatency::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AverageLatency*>(&to_msg);
  auto& from = static_cast<const AverageLatency&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.AverageLatency)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_latency() != 0) {
      _this->_impl_.latency_ = from._impl_.latency_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AverageLatency::CopyFrom(const AverageLatency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.AverageLatency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AverageLatency::InternalSwap(AverageLatency* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.latency_, other->_impl_.latency_);
}

::google::protobuf::Metadata AverageLatency::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListConnectedPeersResponse::_Internal {
 public:
};

ListConnectedPeersResponse::ListConnectedPeersResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListConnectedPeersResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.ListConnectedPeersResponse)
}
PROTOBUF_NDEBUG_INLINE ListConnectedPeersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::ListConnectedPeersResponse& from_msg)
      : connected_peers_{visibility, arena, from.connected_peers_},
        _cached_size_{0} {}

ListConnectedPeersResponse::ListConnectedPeersResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListConnectedPeersResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListConnectedPeersResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListConnectedPeersResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.ListConnectedPeersResponse)
}
PROTOBUF_NDEBUG_INLINE ListConnectedPeersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : connected_peers_{visibility, arena},
        _cached_size_{0} {}

inline void ListConnectedPeersResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ListConnectedPeersResponse::~ListConnectedPeersResponse() {
  // @@protoc_insertion_point(destructor:tari.rpc.ListConnectedPeersResponse)
  SharedDtor(*this);
}
inline void ListConnectedPeersResponse::SharedDtor(MessageLite& self) {
  ListConnectedPeersResponse& this_ = static_cast<ListConnectedPeersResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListConnectedPeersResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListConnectedPeersResponse(arena);
}
constexpr auto ListConnectedPeersResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListConnectedPeersResponse, _impl_.connected_peers_) +
          decltype(ListConnectedPeersResponse::_impl_.connected_peers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ListConnectedPeersResponse), alignof(ListConnectedPeersResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListConnectedPeersResponse::PlacementNew_,
                                 sizeof(ListConnectedPeersResponse),
                                 alignof(ListConnectedPeersResponse));
  }
}
constexpr auto ListConnectedPeersResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListConnectedPeersResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListConnectedPeersResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListConnectedPeersResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListConnectedPeersResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListConnectedPeersResponse>(), &ListConnectedPeersResponse::ByteSizeLong,
              &ListConnectedPeersResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListConnectedPeersResponse, _impl_._cached_size_),
          false,
      },
      &ListConnectedPeersResponse::kDescriptorMethods,
      &descriptor_table_network_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListConnectedPeersResponse_class_data_ =
        ListConnectedPeersResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListConnectedPeersResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListConnectedPeersResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListConnectedPeersResponse_class_data_.tc_table);
  return ListConnectedPeersResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
ListConnectedPeersResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ListConnectedPeersResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::ListConnectedPeersResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tari.rpc.Peer connected_peers = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListConnectedPeersResponse, _impl_.connected_peers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tari.rpc.Peer connected_peers = 1;
    {PROTOBUF_FIELD_OFFSET(ListConnectedPeersResponse, _impl_.connected_peers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::Peer>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ListConnectedPeersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.ListConnectedPeersResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connected_peers_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListConnectedPeersResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListConnectedPeersResponse& this_ = static_cast<const ListConnectedPeersResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListConnectedPeersResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListConnectedPeersResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.ListConnectedPeersResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tari.rpc.Peer connected_peers = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_connected_peers_size());
       i < n; i++) {
    const auto& repfield = this_._internal_connected_peers().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.ListConnectedPeersResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListConnectedPeersResponse::ByteSizeLong(const MessageLite& base) {
  const ListConnectedPeersResponse& this_ = static_cast<const ListConnectedPeersResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListConnectedPeersResponse::ByteSizeLong() const {
  const ListConnectedPeersResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.ListConnectedPeersResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .tari.rpc.Peer connected_peers = 1;
    {
      total_size += 1UL * this_._internal_connected_peers_size();
      for (const auto& msg : this_._internal_connected_peers()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListConnectedPeersResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListConnectedPeersResponse*>(&to_msg);
  auto& from = static_cast<const ListConnectedPeersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.ListConnectedPeersResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_connected_peers()->MergeFrom(
      from._internal_connected_peers());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListConnectedPeersResponse::CopyFrom(const ListConnectedPeersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.ListConnectedPeersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListConnectedPeersResponse::InternalSwap(ListConnectedPeersResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.connected_peers_.InternalSwap(&other->_impl_.connected_peers_);
}

::google::protobuf::Metadata ListConnectedPeersResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SoftwareUpdate::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SoftwareUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SoftwareUpdate, _impl_._has_bits_);
};

SoftwareUpdate::SoftwareUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SoftwareUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.SoftwareUpdate)
}
PROTOBUF_NDEBUG_INLINE SoftwareUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::SoftwareUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        version_(arena, from.version_),
        sha_(arena, from.sha_),
        download_url_(arena, from.download_url_) {}

SoftwareUpdate::SoftwareUpdate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SoftwareUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SoftwareUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SoftwareUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.has_update_ = from._impl_.has_update_;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.SoftwareUpdate)
}
PROTOBUF_NDEBUG_INLINE SoftwareUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        version_(arena),
        sha_(arena),
        download_url_(arena) {}

inline void SoftwareUpdate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.has_update_ = {};
}
SoftwareUpdate::~SoftwareUpdate() {
  // @@protoc_insertion_point(destructor:tari.rpc.SoftwareUpdate)
  SharedDtor(*this);
}
inline void SoftwareUpdate::SharedDtor(MessageLite& self) {
  SoftwareUpdate& this_ = static_cast<SoftwareUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.version_.Destroy();
  this_._impl_.sha_.Destroy();
  this_._impl_.download_url_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SoftwareUpdate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SoftwareUpdate(arena);
}
constexpr auto SoftwareUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SoftwareUpdate),
                                            alignof(SoftwareUpdate));
}
constexpr auto SoftwareUpdate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SoftwareUpdate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SoftwareUpdate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SoftwareUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SoftwareUpdate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SoftwareUpdate>(), &SoftwareUpdate::ByteSizeLong,
              &SoftwareUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SoftwareUpdate, _impl_._cached_size_),
          false,
      },
      &SoftwareUpdate::kDescriptorMethods,
      &descriptor_table_network_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SoftwareUpdate_class_data_ =
        SoftwareUpdate::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SoftwareUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SoftwareUpdate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SoftwareUpdate_class_data_.tc_table);
  return SoftwareUpdate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 54, 2>
SoftwareUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SoftwareUpdate, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SoftwareUpdate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::SoftwareUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string download_url = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(SoftwareUpdate, _impl_.download_url_)}},
    // bool has_update = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SoftwareUpdate, _impl_.has_update_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(SoftwareUpdate, _impl_.has_update_)}},
    // string version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SoftwareUpdate, _impl_.version_)}},
    // string sha = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(SoftwareUpdate, _impl_.sha_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool has_update = 1;
    {PROTOBUF_FIELD_OFFSET(SoftwareUpdate, _impl_.has_update_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string version = 2;
    {PROTOBUF_FIELD_OFFSET(SoftwareUpdate, _impl_.version_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sha = 3;
    {PROTOBUF_FIELD_OFFSET(SoftwareUpdate, _impl_.sha_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string download_url = 4;
    {PROTOBUF_FIELD_OFFSET(SoftwareUpdate, _impl_.download_url_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\0\7\3\14\0\0\0"
    "tari.rpc.SoftwareUpdate"
    "version"
    "sha"
    "download_url"
  }},
};
PROTOBUF_NOINLINE void SoftwareUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.SoftwareUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.version_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.sha_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.download_url_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.has_update_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SoftwareUpdate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SoftwareUpdate& this_ = static_cast<const SoftwareUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SoftwareUpdate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SoftwareUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.SoftwareUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool has_update = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_has_update() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_has_update(), target);
    }
  }

  // string version = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_version().empty()) {
      const ::std::string& _s = this_._internal_version();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tari.rpc.SoftwareUpdate.version");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string sha = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_sha().empty()) {
      const ::std::string& _s = this_._internal_sha();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tari.rpc.SoftwareUpdate.sha");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string download_url = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_download_url().empty()) {
      const ::std::string& _s = this_._internal_download_url();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tari.rpc.SoftwareUpdate.download_url");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.SoftwareUpdate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SoftwareUpdate::ByteSizeLong(const MessageLite& base) {
  const SoftwareUpdate& this_ = static_cast<const SoftwareUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SoftwareUpdate::ByteSizeLong() const {
  const SoftwareUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.SoftwareUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string version = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_version().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_version());
      }
    }
    // string sha = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_sha().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_sha());
      }
    }
    // string download_url = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_download_url().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_download_url());
      }
    }
    // bool has_update = 1;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_has_update() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SoftwareUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SoftwareUpdate*>(&to_msg);
  auto& from = static_cast<const SoftwareUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.SoftwareUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_version().empty()) {
        _this->_internal_set_version(from._internal_version());
      } else {
        if (_this->_impl_.version_.IsDefault()) {
          _this->_internal_set_version("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_sha().empty()) {
        _this->_internal_set_sha(from._internal_sha());
      } else {
        if (_this->_impl_.sha_.IsDefault()) {
          _this->_internal_set_sha("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_download_url().empty()) {
        _this->_internal_set_download_url(from._internal_download_url());
      } else {
        if (_this->_impl_.download_url_.IsDefault()) {
          _this->_internal_set_download_url("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_has_update() != 0) {
        _this->_impl_.has_update_ = from._impl_.has_update_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SoftwareUpdate::CopyFrom(const SoftwareUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.SoftwareUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SoftwareUpdate::InternalSwap(SoftwareUpdate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sha_, &other->_impl_.sha_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.download_url_, &other->_impl_.download_url_, arena);
  swap(_impl_.has_update_, other->_impl_.has_update_);
}

::google::protobuf::Metadata SoftwareUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetIdentityRequest::_Internal {
 public:
};

GetIdentityRequest::GetIdentityRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, GetIdentityRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:tari.rpc.GetIdentityRequest)
}
GetIdentityRequest::GetIdentityRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetIdentityRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, GetIdentityRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetIdentityRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.GetIdentityRequest)
}

inline void* PROTOBUF_NONNULL GetIdentityRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetIdentityRequest(arena);
}
constexpr auto GetIdentityRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetIdentityRequest),
                                            alignof(GetIdentityRequest));
}
constexpr auto GetIdentityRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetIdentityRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetIdentityRequest::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<GetIdentityRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetIdentityRequest::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<GetIdentityRequest>(), &GetIdentityRequest::ByteSizeLong,
              &GetIdentityRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetIdentityRequest, _impl_._cached_size_),
          false,
      },
      &GetIdentityRequest::kDescriptorMethods,
      &descriptor_table_network_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetIdentityRequest_class_data_ =
        GetIdentityRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetIdentityRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetIdentityRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetIdentityRequest_class_data_.tc_table);
  return GetIdentityRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
GetIdentityRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetIdentityRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::GetIdentityRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata GetIdentityRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetIdentityResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetIdentityResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetIdentityResponse, _impl_._has_bits_);
};

GetIdentityResponse::GetIdentityResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetIdentityResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.GetIdentityResponse)
}
PROTOBUF_NDEBUG_INLINE GetIdentityResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::GetIdentityResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        public_key_(arena, from.public_key_),
        public_address_(arena, from.public_address_),
        node_id_(arena, from.node_id_) {}

GetIdentityResponse::GetIdentityResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetIdentityResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetIdentityResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetIdentityResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.GetIdentityResponse)
}
PROTOBUF_NDEBUG_INLINE GetIdentityResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        public_key_(arena),
        public_address_(arena),
        node_id_(arena) {}

inline void GetIdentityResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetIdentityResponse::~GetIdentityResponse() {
  // @@protoc_insertion_point(destructor:tari.rpc.GetIdentityResponse)
  SharedDtor(*this);
}
inline void GetIdentityResponse::SharedDtor(MessageLite& self) {
  GetIdentityResponse& this_ = static_cast<GetIdentityResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.public_key_.Destroy();
  this_._impl_.public_address_.Destroy();
  this_._impl_.node_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetIdentityResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetIdentityResponse(arena);
}
constexpr auto GetIdentityResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetIdentityResponse),
                                            alignof(GetIdentityResponse));
}
constexpr auto GetIdentityResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetIdentityResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetIdentityResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetIdentityResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetIdentityResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetIdentityResponse>(), &GetIdentityResponse::ByteSizeLong,
              &GetIdentityResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetIdentityResponse, _impl_._cached_size_),
          false,
      },
      &GetIdentityResponse::kDescriptorMethods,
      &descriptor_table_network_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetIdentityResponse_class_data_ =
        GetIdentityResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetIdentityResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetIdentityResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetIdentityResponse_class_data_.tc_table);
  return GetIdentityResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 51, 2>
GetIdentityResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetIdentityResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetIdentityResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::GetIdentityResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes public_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetIdentityResponse, _impl_.public_key_)}},
    // string public_address = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GetIdentityResponse, _impl_.public_address_)}},
    // bytes node_id = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(GetIdentityResponse, _impl_.node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes public_key = 1;
    {PROTOBUF_FIELD_OFFSET(GetIdentityResponse, _impl_.public_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // string public_address = 2;
    {PROTOBUF_FIELD_OFFSET(GetIdentityResponse, _impl_.public_address_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes node_id = 3;
    {PROTOBUF_FIELD_OFFSET(GetIdentityResponse, _impl_.node_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\0\16\0\0\0\0\0"
    "tari.rpc.GetIdentityResponse"
    "public_address"
  }},
};
PROTOBUF_NOINLINE void GetIdentityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.GetIdentityResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.public_key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.public_address_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.node_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetIdentityResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetIdentityResponse& this_ = static_cast<const GetIdentityResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetIdentityResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetIdentityResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.GetIdentityResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes public_key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_public_key().empty()) {
      const ::std::string& _s = this_._internal_public_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // string public_address = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_public_address().empty()) {
      const ::std::string& _s = this_._internal_public_address();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tari.rpc.GetIdentityResponse.public_address");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // bytes node_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_node_id().empty()) {
      const ::std::string& _s = this_._internal_node_id();
      target = stream->WriteBytesMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.GetIdentityResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetIdentityResponse::ByteSizeLong(const MessageLite& base) {
  const GetIdentityResponse& this_ = static_cast<const GetIdentityResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetIdentityResponse::ByteSizeLong() const {
  const GetIdentityResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.GetIdentityResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // bytes public_key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_public_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_public_key());
      }
    }
    // string public_address = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_public_address().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_public_address());
      }
    }
    // bytes node_id = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_node_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_node_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetIdentityResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetIdentityResponse*>(&to_msg);
  auto& from = static_cast<const GetIdentityResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.GetIdentityResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_public_key().empty()) {
        _this->_internal_set_public_key(from._internal_public_key());
      } else {
        if (_this->_impl_.public_key_.IsDefault()) {
          _this->_internal_set_public_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_public_address().empty()) {
        _this->_internal_set_public_address(from._internal_public_address());
      } else {
        if (_this->_impl_.public_address_.IsDefault()) {
          _this->_internal_set_public_address("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_node_id().empty()) {
        _this->_internal_set_node_id(from._internal_node_id());
      } else {
        if (_this->_impl_.node_id_.IsDefault()) {
          _this->_internal_set_node_id("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetIdentityResponse::CopyFrom(const GetIdentityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.GetIdentityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetIdentityResponse::InternalSwap(GetIdentityResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.public_key_, &other->_impl_.public_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.public_address_, &other->_impl_.public_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
}

::google::protobuf::Metadata GetIdentityResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
}  // namespace tari
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_network_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
