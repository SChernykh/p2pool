// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sidechain_types.proto
// Protobuf C++ Version: 6.31.1

#include "sidechain_types.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tari {
namespace rpc {

inline constexpr WasmInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        abi_version_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR WasmInfo::WasmInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WasmInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WasmInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WasmInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WasmInfoDefaultTypeInternal() {}
  union {
    WasmInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WasmInfoDefaultTypeInternal _WasmInfo_default_instance_;

inline constexpr ShardGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        start_{0u},
        end_inclusive_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ShardGroup::ShardGroup(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ShardGroup_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ShardGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShardGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShardGroupDefaultTypeInternal() {}
  union {
    ShardGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShardGroupDefaultTypeInternal _ShardGroup_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ManifestInfo::ManifestInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(ManifestInfo_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ManifestInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ManifestInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ManifestInfoDefaultTypeInternal() {}
  union {
    ManifestInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ManifestInfoDefaultTypeInternal _ManifestInfo_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR FlowInfo::FlowInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(FlowInfo_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct FlowInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FlowInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FlowInfoDefaultTypeInternal() {}
  union {
    FlowInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FlowInfoDefaultTypeInternal _FlowInfo_default_instance_;

inline constexpr EvictAtom::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR EvictAtom::EvictAtom(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EvictAtom_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EvictAtomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvictAtomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvictAtomDefaultTypeInternal() {}
  union {
    EvictAtom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvictAtomDefaultTypeInternal _EvictAtom_default_instance_;

inline constexpr ConfidentialOutputData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        claim_public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ConfidentialOutputData::ConfidentialOutputData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ConfidentialOutputData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConfidentialOutputDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfidentialOutputDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfidentialOutputDataDefaultTypeInternal() {}
  union {
    ConfidentialOutputData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfidentialOutputDataDefaultTypeInternal _ConfidentialOutputData_default_instance_;

inline constexpr ChainLink::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ChainLink::ChainLink(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ChainLink_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChainLinkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChainLinkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChainLinkDefaultTypeInternal() {}
  union {
    ChainLink _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChainLinkDefaultTypeInternal _ChainLink_default_instance_;

inline constexpr BuildInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        repo_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        commit_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR BuildInfo::BuildInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BuildInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BuildInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuildInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuildInfoDefaultTypeInternal() {}
  union {
    BuildInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuildInfoDefaultTypeInternal _BuildInfo_default_instance_;

inline constexpr ValidatorSignature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        signature_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorSignature::ValidatorSignature(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ValidatorSignature_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorSignatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorSignatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorSignatureDefaultTypeInternal() {}
  union {
    ValidatorSignature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorSignatureDefaultTypeInternal _ValidatorSignature_default_instance_;

inline constexpr ValidatorNodeRegistration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        claim_public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        signature_{nullptr},
        max_epoch_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorNodeRegistration::ValidatorNodeRegistration(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ValidatorNodeRegistration_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorNodeRegistrationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorNodeRegistrationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorNodeRegistrationDefaultTypeInternal() {}
  union {
    ValidatorNodeRegistration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorNodeRegistrationDefaultTypeInternal _ValidatorNodeRegistration_default_instance_;

inline constexpr ValidatorNodeExit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        signature_{nullptr},
        max_epoch_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorNodeExit::ValidatorNodeExit(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ValidatorNodeExit_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorNodeExitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorNodeExitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorNodeExitDefaultTypeInternal() {}
  union {
    ValidatorNodeExit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorNodeExitDefaultTypeInternal _ValidatorNodeExit_default_instance_;

inline constexpr TemplateType::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : template_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TemplateType::TemplateType(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TemplateType_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TemplateTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TemplateTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TemplateTypeDefaultTypeInternal() {}
  union {
    TemplateType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TemplateTypeDefaultTypeInternal _TemplateType_default_instance_;

inline constexpr SidechainBlockHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        justify_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposed_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        state_merkle_root_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        command_merkle_root_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        shard_group_{nullptr},
        signature_{nullptr},
        height_{::uint64_t{0u}},
        epoch_{::uint64_t{0u}},
        network_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SidechainBlockHeader::SidechainBlockHeader(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SidechainBlockHeader_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SidechainBlockHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SidechainBlockHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SidechainBlockHeaderDefaultTypeInternal() {}
  union {
    SidechainBlockHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SidechainBlockHeaderDefaultTypeInternal _SidechainBlockHeader_default_instance_;

inline constexpr SideChainId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        knowledge_proof_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SideChainId::SideChainId(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SideChainId_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SideChainIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SideChainIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SideChainIdDefaultTypeInternal() {}
  union {
    SideChainId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SideChainIdDefaultTypeInternal _SideChainId_default_instance_;

inline constexpr DummyChain::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : chain_links_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DummyChain::DummyChain(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DummyChain_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DummyChainDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DummyChainDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DummyChainDefaultTypeInternal() {}
  union {
    DummyChain _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DummyChainDefaultTypeInternal _DummyChain_default_instance_;

inline constexpr TemplateRegistration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        author_public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        template_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        binary_sha_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        binary_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        author_signature_{nullptr},
        template_type_{nullptr},
        build_info_{nullptr},
        template_version_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TemplateRegistration::TemplateRegistration(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TemplateRegistration_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TemplateRegistrationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TemplateRegistrationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TemplateRegistrationDefaultTypeInternal() {}
  union {
    TemplateRegistration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TemplateRegistrationDefaultTypeInternal _TemplateRegistration_default_instance_;

inline constexpr QuorumCertificate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        signatures_{},
        header_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        decision_{static_cast< ::tari::rpc::QuorumDecision >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR QuorumCertificate::QuorumCertificate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(QuorumCertificate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QuorumCertificateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuorumCertificateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuorumCertificateDefaultTypeInternal() {}
  union {
    QuorumCertificate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuorumCertificateDefaultTypeInternal _QuorumCertificate_default_instance_;

inline constexpr CommitProofElement::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : proof_element_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR CommitProofElement::CommitProofElement(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CommitProofElement_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommitProofElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommitProofElementDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommitProofElementDefaultTypeInternal() {}
  union {
    CommitProofElement _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommitProofElementDefaultTypeInternal _CommitProofElement_default_instance_;

inline constexpr SidechainBlockCommitProof::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        proof_elements_{},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SidechainBlockCommitProof::SidechainBlockCommitProof(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SidechainBlockCommitProof_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SidechainBlockCommitProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SidechainBlockCommitProofDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SidechainBlockCommitProofDefaultTypeInternal() {}
  union {
    SidechainBlockCommitProof _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SidechainBlockCommitProofDefaultTypeInternal _SidechainBlockCommitProof_default_instance_;

inline constexpr CommitProofV1::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        command_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        encoded_inclusion_proof_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        commit_proof_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CommitProofV1::CommitProofV1(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CommitProofV1_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommitProofV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommitProofV1DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommitProofV1DefaultTypeInternal() {}
  union {
    CommitProofV1 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommitProofV1DefaultTypeInternal _CommitProofV1_default_instance_;

inline constexpr CommitProof::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : version_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR CommitProof::CommitProof(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CommitProof_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommitProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommitProofDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommitProofDefaultTypeInternal() {}
  union {
    CommitProof _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommitProofDefaultTypeInternal _CommitProof_default_instance_;

inline constexpr EvictionProof::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        proof_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR EvictionProof::EvictionProof(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EvictionProof_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EvictionProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvictionProofDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvictionProofDefaultTypeInternal() {}
  union {
    EvictionProof _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvictionProofDefaultTypeInternal _EvictionProof_default_instance_;

inline constexpr SideChainFeature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sidechain_id_{nullptr},
        feature_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR SideChainFeature::SideChainFeature(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SideChainFeature_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SideChainFeatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SideChainFeatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SideChainFeatureDefaultTypeInternal() {}
  union {
    SideChainFeature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SideChainFeatureDefaultTypeInternal _SideChainFeature_default_instance_;
}  // namespace rpc
}  // namespace tari
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_sidechain_5ftypes_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_sidechain_5ftypes_2eproto = nullptr;
const ::uint32_t
    TableStruct_sidechain_5ftypes_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SideChainFeature, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SideChainFeature, _impl_._oneof_case_[0]),
        11, // hasbit index offset
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SideChainFeature, _impl_.sidechain_id_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SideChainFeature, _impl_.feature_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SideChainId, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SideChainId, _impl_.public_key_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SideChainId, _impl_.knowledge_proof_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ValidatorNodeRegistration, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ValidatorNodeRegistration, _impl_.public_key_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ValidatorNodeRegistration, _impl_.signature_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ValidatorNodeRegistration, _impl_.claim_public_key_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ValidatorNodeRegistration, _impl_.max_epoch_),
        0,
        2,
        1,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ValidatorNodeExit, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ValidatorNodeExit, _impl_.public_key_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ValidatorNodeExit, _impl_.signature_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ValidatorNodeExit, _impl_.max_epoch_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::TemplateRegistration, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::TemplateRegistration, _impl_.author_public_key_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::TemplateRegistration, _impl_.author_signature_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::TemplateRegistration, _impl_.template_name_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::TemplateRegistration, _impl_.template_version_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::TemplateRegistration, _impl_.template_type_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::TemplateRegistration, _impl_.build_info_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::TemplateRegistration, _impl_.binary_sha_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::TemplateRegistration, _impl_.binary_url_),
        0,
        4,
        1,
        7,
        5,
        6,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConfidentialOutputData, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConfidentialOutputData, _impl_.claim_public_key_),
        0,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::TemplateType, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tari::rpc::TemplateType, _impl_.template_type_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::WasmInfo, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::WasmInfo, _impl_.abi_version_),
        0,
        0x000, // bitmap
        0x000, // bitmap
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BuildInfo, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BuildInfo, _impl_.repo_url_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BuildInfo, _impl_.commit_hash_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::EvictionProof, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::EvictionProof, _impl_.proof_),
        0,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::CommitProof, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tari::rpc::CommitProof, _impl_.version_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::CommitProofV1, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::CommitProofV1, _impl_.command_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::CommitProofV1, _impl_.commit_proof_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::CommitProofV1, _impl_.encoded_inclusion_proof_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockCommitProof, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockCommitProof, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockCommitProof, _impl_.proof_elements_),
        0,
        ~0u,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::CommitProofElement, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tari::rpc::CommitProofElement, _impl_.proof_element_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::DummyChain, _impl_.chain_links_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ChainLink, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ChainLink, _impl_.header_hash_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ChainLink, _impl_.parent_id_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockHeader, _impl_._has_bits_),
        14, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockHeader, _impl_.network_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockHeader, _impl_.parent_id_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockHeader, _impl_.justify_id_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockHeader, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockHeader, _impl_.epoch_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockHeader, _impl_.shard_group_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockHeader, _impl_.proposed_by_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockHeader, _impl_.state_merkle_root_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockHeader, _impl_.command_merkle_root_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockHeader, _impl_.signature_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::SidechainBlockHeader, _impl_.metadata_hash_),
        10,
        0,
        1,
        8,
        9,
        6,
        2,
        3,
        4,
        7,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ShardGroup, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ShardGroup, _impl_.start_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ShardGroup, _impl_.end_inclusive_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::EvictAtom, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::EvictAtom, _impl_.public_key_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::QuorumCertificate, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::QuorumCertificate, _impl_.header_hash_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::QuorumCertificate, _impl_.parent_id_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::QuorumCertificate, _impl_.signatures_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::QuorumCertificate, _impl_.decision_),
        0,
        1,
        ~0u,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ValidatorSignature, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ValidatorSignature, _impl_.public_key_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ValidatorSignature, _impl_.signature_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::tari::rpc::SideChainFeature)},
        {17, sizeof(::tari::rpc::SideChainId)},
        {24, sizeof(::tari::rpc::ValidatorNodeRegistration)},
        {35, sizeof(::tari::rpc::ValidatorNodeExit)},
        {44, sizeof(::tari::rpc::TemplateRegistration)},
        {63, sizeof(::tari::rpc::ConfidentialOutputData)},
        {68, sizeof(::tari::rpc::TemplateType)},
        {74, sizeof(::tari::rpc::WasmInfo)},
        {79, sizeof(::tari::rpc::FlowInfo)},
        {80, sizeof(::tari::rpc::ManifestInfo)},
        {81, sizeof(::tari::rpc::BuildInfo)},
        {88, sizeof(::tari::rpc::EvictionProof)},
        {93, sizeof(::tari::rpc::CommitProof)},
        {97, sizeof(::tari::rpc::CommitProofV1)},
        {106, sizeof(::tari::rpc::SidechainBlockCommitProof)},
        {113, sizeof(::tari::rpc::CommitProofElement)},
        {118, sizeof(::tari::rpc::DummyChain)},
        {120, sizeof(::tari::rpc::ChainLink)},
        {127, sizeof(::tari::rpc::SidechainBlockHeader)},
        {152, sizeof(::tari::rpc::ShardGroup)},
        {159, sizeof(::tari::rpc::EvictAtom)},
        {164, sizeof(::tari::rpc::QuorumCertificate)},
        {175, sizeof(::tari::rpc::ValidatorSignature)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::tari::rpc::_SideChainFeature_default_instance_._instance,
    &::tari::rpc::_SideChainId_default_instance_._instance,
    &::tari::rpc::_ValidatorNodeRegistration_default_instance_._instance,
    &::tari::rpc::_ValidatorNodeExit_default_instance_._instance,
    &::tari::rpc::_TemplateRegistration_default_instance_._instance,
    &::tari::rpc::_ConfidentialOutputData_default_instance_._instance,
    &::tari::rpc::_TemplateType_default_instance_._instance,
    &::tari::rpc::_WasmInfo_default_instance_._instance,
    &::tari::rpc::_FlowInfo_default_instance_._instance,
    &::tari::rpc::_ManifestInfo_default_instance_._instance,
    &::tari::rpc::_BuildInfo_default_instance_._instance,
    &::tari::rpc::_EvictionProof_default_instance_._instance,
    &::tari::rpc::_CommitProof_default_instance_._instance,
    &::tari::rpc::_CommitProofV1_default_instance_._instance,
    &::tari::rpc::_SidechainBlockCommitProof_default_instance_._instance,
    &::tari::rpc::_CommitProofElement_default_instance_._instance,
    &::tari::rpc::_DummyChain_default_instance_._instance,
    &::tari::rpc::_ChainLink_default_instance_._instance,
    &::tari::rpc::_SidechainBlockHeader_default_instance_._instance,
    &::tari::rpc::_ShardGroup_default_instance_._instance,
    &::tari::rpc::_EvictAtom_default_instance_._instance,
    &::tari::rpc::_QuorumCertificate_default_instance_._instance,
    &::tari::rpc::_ValidatorSignature_default_instance_._instance,
};
const char descriptor_table_protodef_sidechain_5ftypes_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025sidechain_types.proto\022\010tari.rpc\032\013types"
    ".proto\"\207\003\n\020SideChainFeature\022J\n\033validator"
    "_node_registration\030\001 \001(\0132#.tari.rpc.Vali"
    "datorNodeRegistrationH\000\022\?\n\025template_regi"
    "stration\030\002 \001(\0132\036.tari.rpc.TemplateRegist"
    "rationH\000\022\?\n\023confidential_output\030\003 \001(\0132 ."
    "tari.rpc.ConfidentialOutputDataH\000\0221\n\016evi"
    "ction_proof\030\004 \001(\0132\027.tari.rpc.EvictionPro"
    "ofH\000\022:\n\023validator_node_exit\030\005 \001(\0132\033.tari"
    ".rpc.ValidatorNodeExitH\000\022+\n\014sidechain_id"
    "\030\006 \001(\0132\025.tari.rpc.SideChainIdB\t\n\007feature"
    "\"O\n\013SideChainId\022\022\n\npublic_key\030\001 \001(\014\022,\n\017k"
    "nowledge_proof\030\002 \001(\0132\023.tari.rpc.Signatur"
    "e\"\204\001\n\031ValidatorNodeRegistration\022\022\n\npubli"
    "c_key\030\001 \001(\014\022&\n\tsignature\030\002 \001(\0132\023.tari.rp"
    "c.Signature\022\030\n\020claim_public_key\030\003 \001(\014\022\021\n"
    "\tmax_epoch\030\004 \001(\004\"b\n\021ValidatorNodeExit\022\022\n"
    "\npublic_key\030\001 \001(\014\022&\n\tsignature\030\002 \001(\0132\023.t"
    "ari.rpc.Signature\022\021\n\tmax_epoch\030\003 \001(\004\"\221\002\n"
    "\024TemplateRegistration\022\031\n\021author_public_k"
    "ey\030\001 \001(\014\022-\n\020author_signature\030\002 \001(\0132\023.tar"
    "i.rpc.Signature\022\025\n\rtemplate_name\030\003 \001(\t\022\030"
    "\n\020template_version\030\004 \001(\r\022-\n\rtemplate_typ"
    "e\030\005 \001(\0132\026.tari.rpc.TemplateType\022\'\n\nbuild"
    "_info\030\006 \001(\0132\023.tari.rpc.BuildInfo\022\022\n\nbina"
    "ry_sha\030\007 \001(\014\022\022\n\nbinary_url\030\010 \001(\t\"2\n\026Conf"
    "identialOutputData\022\030\n\020claim_public_key\030\001"
    " \001(\014\"\223\001\n\014TemplateType\022\"\n\004wasm\030\001 \001(\0132\022.ta"
    "ri.rpc.WasmInfoH\000\022\"\n\004flow\030\002 \001(\0132\022.tari.r"
    "pc.FlowInfoH\000\022*\n\010manifest\030\003 \001(\0132\026.tari.r"
    "pc.ManifestInfoH\000B\017\n\rtemplate_type\"\037\n\010Wa"
    "smInfo\022\023\n\013abi_version\030\001 \001(\r\"\n\n\010FlowInfo\""
    "\016\n\014ManifestInfo\"2\n\tBuildInfo\022\020\n\010repo_url"
    "\030\001 \001(\t\022\023\n\013commit_hash\030\002 \001(\014\"5\n\rEvictionP"
    "roof\022$\n\005proof\030\001 \001(\0132\025.tari.rpc.CommitPro"
    "of\"\?\n\013CommitProof\022%\n\002v1\030\001 \001(\0132\027.tari.rpc"
    ".CommitProofV1H\000B\t\n\007version\"|\n\rCommitPro"
    "ofV1\022\017\n\007command\030\001 \001(\014\0229\n\014commit_proof\030\002 "
    "\001(\0132#.tari.rpc.SidechainBlockCommitProof"
    "\022\037\n\027encoded_inclusion_proof\030\003 \001(\014\"\201\001\n\031Si"
    "dechainBlockCommitProof\022.\n\006header\030\001 \001(\0132"
    "\036.tari.rpc.SidechainBlockHeader\0224\n\016proof"
    "_elements\030\002 \003(\0132\034.tari.rpc.CommitProofEl"
    "ement\"\215\001\n\022CommitProofElement\0229\n\022quorum_c"
    "ertificate\030\001 \001(\0132\033.tari.rpc.QuorumCertif"
    "icateH\000\022+\n\013dummy_chain\030\002 \001(\0132\024.tari.rpc."
    "DummyChainH\000B\017\n\rproof_element\"6\n\nDummyCh"
    "ain\022(\n\013chain_links\030\001 \003(\0132\023.tari.rpc.Chai"
    "nLink\"3\n\tChainLink\022\023\n\013header_hash\030\001 \001(\014\022"
    "\021\n\tparent_id\030\002 \001(\014\"\244\002\n\024SidechainBlockHea"
    "der\022\017\n\007network\030\001 \001(\r\022\021\n\tparent_id\030\002 \001(\014\022"
    "\022\n\njustify_id\030\003 \001(\014\022\016\n\006height\030\004 \001(\004\022\r\n\005e"
    "poch\030\005 \001(\004\022)\n\013shard_group\030\006 \001(\0132\024.tari.r"
    "pc.ShardGroup\022\023\n\013proposed_by\030\007 \001(\014\022\031\n\021st"
    "ate_merkle_root\030\010 \001(\014\022\033\n\023command_merkle_"
    "root\030\t \001(\014\022&\n\tsignature\030\013 \001(\0132\023.tari.rpc"
    ".Signature\022\025\n\rmetadata_hash\030\n \001(\014\"2\n\nSha"
    "rdGroup\022\r\n\005start\030\001 \001(\r\022\025\n\rend_inclusive\030"
    "\002 \001(\r\"\037\n\tEvictAtom\022\022\n\npublic_key\030\001 \001(\014\"\231"
    "\001\n\021QuorumCertificate\022\023\n\013header_hash\030\001 \001("
    "\014\022\021\n\tparent_id\030\002 \001(\014\0220\n\nsignatures\030\003 \003(\013"
    "2\034.tari.rpc.ValidatorSignature\022*\n\010decisi"
    "on\030\004 \001(\0162\030.tari.rpc.QuorumDecision\"P\n\022Va"
    "lidatorSignature\022\022\n\npublic_key\030\001 \001(\014\022&\n\t"
    "signature\030\002 \001(\0132\023.tari.rpc.Signature*(\n\016"
    "QuorumDecision\022\n\n\006Accept\020\000\022\n\n\006Reject\020\001b\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_sidechain_5ftypes_2eproto_deps[1] = {
        &::descriptor_table_types_2eproto,
};
static ::absl::once_flag descriptor_table_sidechain_5ftypes_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_sidechain_5ftypes_2eproto = {
    false,
    false,
    2646,
    descriptor_table_protodef_sidechain_5ftypes_2eproto,
    "sidechain_types.proto",
    &descriptor_table_sidechain_5ftypes_2eproto_once,
    descriptor_table_sidechain_5ftypes_2eproto_deps,
    1,
    23,
    schemas,
    file_default_instances,
    TableStruct_sidechain_5ftypes_2eproto::offsets,
    file_level_enum_descriptors_sidechain_5ftypes_2eproto,
    file_level_service_descriptors_sidechain_5ftypes_2eproto,
};
namespace tari {
namespace rpc {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL QuorumDecision_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sidechain_5ftypes_2eproto);
  return file_level_enum_descriptors_sidechain_5ftypes_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t QuorumDecision_internal_data_[] = {
    131072u, 0u, };
// ===================================================================

class SideChainFeature::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SideChainFeature>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SideChainFeature, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tari::rpc::SideChainFeature, _impl_._oneof_case_);
};

void SideChainFeature::set_allocated_validator_node_registration(::tari::rpc::ValidatorNodeRegistration* PROTOBUF_NULLABLE validator_node_registration) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_feature();
  if (validator_node_registration) {
    ::google::protobuf::Arena* submessage_arena = validator_node_registration->GetArena();
    if (message_arena != submessage_arena) {
      validator_node_registration = ::google::protobuf::internal::GetOwnedMessage(message_arena, validator_node_registration, submessage_arena);
    }
    set_has_validator_node_registration();
    _impl_.feature_.validator_node_registration_ = validator_node_registration;
  }
  // @@protoc_insertion_point(field_set_allocated:tari.rpc.SideChainFeature.validator_node_registration)
}
void SideChainFeature::set_allocated_template_registration(::tari::rpc::TemplateRegistration* PROTOBUF_NULLABLE template_registration) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_feature();
  if (template_registration) {
    ::google::protobuf::Arena* submessage_arena = template_registration->GetArena();
    if (message_arena != submessage_arena) {
      template_registration = ::google::protobuf::internal::GetOwnedMessage(message_arena, template_registration, submessage_arena);
    }
    set_has_template_registration();
    _impl_.feature_.template_registration_ = template_registration;
  }
  // @@protoc_insertion_point(field_set_allocated:tari.rpc.SideChainFeature.template_registration)
}
void SideChainFeature::set_allocated_confidential_output(::tari::rpc::ConfidentialOutputData* PROTOBUF_NULLABLE confidential_output) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_feature();
  if (confidential_output) {
    ::google::protobuf::Arena* submessage_arena = confidential_output->GetArena();
    if (message_arena != submessage_arena) {
      confidential_output = ::google::protobuf::internal::GetOwnedMessage(message_arena, confidential_output, submessage_arena);
    }
    set_has_confidential_output();
    _impl_.feature_.confidential_output_ = confidential_output;
  }
  // @@protoc_insertion_point(field_set_allocated:tari.rpc.SideChainFeature.confidential_output)
}
void SideChainFeature::set_allocated_eviction_proof(::tari::rpc::EvictionProof* PROTOBUF_NULLABLE eviction_proof) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_feature();
  if (eviction_proof) {
    ::google::protobuf::Arena* submessage_arena = eviction_proof->GetArena();
    if (message_arena != submessage_arena) {
      eviction_proof = ::google::protobuf::internal::GetOwnedMessage(message_arena, eviction_proof, submessage_arena);
    }
    set_has_eviction_proof();
    _impl_.feature_.eviction_proof_ = eviction_proof;
  }
  // @@protoc_insertion_point(field_set_allocated:tari.rpc.SideChainFeature.eviction_proof)
}
void SideChainFeature::set_allocated_validator_node_exit(::tari::rpc::ValidatorNodeExit* PROTOBUF_NULLABLE validator_node_exit) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_feature();
  if (validator_node_exit) {
    ::google::protobuf::Arena* submessage_arena = validator_node_exit->GetArena();
    if (message_arena != submessage_arena) {
      validator_node_exit = ::google::protobuf::internal::GetOwnedMessage(message_arena, validator_node_exit, submessage_arena);
    }
    set_has_validator_node_exit();
    _impl_.feature_.validator_node_exit_ = validator_node_exit;
  }
  // @@protoc_insertion_point(field_set_allocated:tari.rpc.SideChainFeature.validator_node_exit)
}
SideChainFeature::SideChainFeature(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SideChainFeature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.SideChainFeature)
}
PROTOBUF_NDEBUG_INLINE SideChainFeature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::SideChainFeature& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        feature_{},
        _oneof_case_{from._oneof_case_[0]} {}

SideChainFeature::SideChainFeature(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SideChainFeature& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SideChainFeature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SideChainFeature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.sidechain_id_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.sidechain_id_)
                : nullptr;
  switch (feature_case()) {
    case FEATURE_NOT_SET:
      break;
      case kValidatorNodeRegistration:
        _impl_.feature_.validator_node_registration_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.feature_.validator_node_registration_);
        break;
      case kTemplateRegistration:
        _impl_.feature_.template_registration_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.feature_.template_registration_);
        break;
      case kConfidentialOutput:
        _impl_.feature_.confidential_output_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.feature_.confidential_output_);
        break;
      case kEvictionProof:
        _impl_.feature_.eviction_proof_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.feature_.eviction_proof_);
        break;
      case kValidatorNodeExit:
        _impl_.feature_.validator_node_exit_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.feature_.validator_node_exit_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tari.rpc.SideChainFeature)
}
PROTOBUF_NDEBUG_INLINE SideChainFeature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        feature_{},
        _oneof_case_{} {}

inline void SideChainFeature::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.sidechain_id_ = {};
}
SideChainFeature::~SideChainFeature() {
  // @@protoc_insertion_point(destructor:tari.rpc.SideChainFeature)
  SharedDtor(*this);
}
inline void SideChainFeature::SharedDtor(MessageLite& self) {
  SideChainFeature& this_ = static_cast<SideChainFeature&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.sidechain_id_;
  if (this_.has_feature()) {
    this_.clear_feature();
  }
  this_._impl_.~Impl_();
}

void SideChainFeature::clear_feature() {
// @@protoc_insertion_point(one_of_clear_start:tari.rpc.SideChainFeature)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (feature_case()) {
    case kValidatorNodeRegistration: {
      if (GetArena() == nullptr) {
        delete _impl_.feature_.validator_node_registration_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.feature_.validator_node_registration_);
      }
      break;
    }
    case kTemplateRegistration: {
      if (GetArena() == nullptr) {
        delete _impl_.feature_.template_registration_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.feature_.template_registration_);
      }
      break;
    }
    case kConfidentialOutput: {
      if (GetArena() == nullptr) {
        delete _impl_.feature_.confidential_output_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.feature_.confidential_output_);
      }
      break;
    }
    case kEvictionProof: {
      if (GetArena() == nullptr) {
        delete _impl_.feature_.eviction_proof_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.feature_.eviction_proof_);
      }
      break;
    }
    case kValidatorNodeExit: {
      if (GetArena() == nullptr) {
        delete _impl_.feature_.validator_node_exit_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.feature_.validator_node_exit_);
      }
      break;
    }
    case FEATURE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FEATURE_NOT_SET;
}


inline void* PROTOBUF_NONNULL SideChainFeature::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SideChainFeature(arena);
}
constexpr auto SideChainFeature::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SideChainFeature),
                                            alignof(SideChainFeature));
}
constexpr auto SideChainFeature::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SideChainFeature_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SideChainFeature::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SideChainFeature>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SideChainFeature::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SideChainFeature>(), &SideChainFeature::ByteSizeLong,
              &SideChainFeature::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SideChainFeature, _impl_._cached_size_),
          false,
      },
      &SideChainFeature::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SideChainFeature_class_data_ =
        SideChainFeature::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SideChainFeature::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SideChainFeature_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SideChainFeature_class_data_.tc_table);
  return SideChainFeature_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 6, 6, 0, 2>
SideChainFeature::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SideChainFeature, _impl_._has_bits_),
    0, // no _extensions_
    6, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SideChainFeature_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::SideChainFeature>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tari.rpc.SideChainId sidechain_id = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 5, PROTOBUF_FIELD_OFFSET(SideChainFeature, _impl_.sidechain_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tari.rpc.ValidatorNodeRegistration validator_node_registration = 1;
    {PROTOBUF_FIELD_OFFSET(SideChainFeature, _impl_.feature_.validator_node_registration_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.TemplateRegistration template_registration = 2;
    {PROTOBUF_FIELD_OFFSET(SideChainFeature, _impl_.feature_.template_registration_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.ConfidentialOutputData confidential_output = 3;
    {PROTOBUF_FIELD_OFFSET(SideChainFeature, _impl_.feature_.confidential_output_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.EvictionProof eviction_proof = 4;
    {PROTOBUF_FIELD_OFFSET(SideChainFeature, _impl_.feature_.eviction_proof_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.ValidatorNodeExit validator_node_exit = 5;
    {PROTOBUF_FIELD_OFFSET(SideChainFeature, _impl_.feature_.validator_node_exit_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.SideChainId sidechain_id = 6;
    {PROTOBUF_FIELD_OFFSET(SideChainFeature, _impl_.sidechain_id_), _Internal::kHasBitsOffset + 0, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::ValidatorNodeRegistration>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::TemplateRegistration>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::ConfidentialOutputData>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::EvictionProof>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::ValidatorNodeExit>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::SideChainId>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SideChainFeature::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.SideChainFeature)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.sidechain_id_ != nullptr);
    _impl_.sidechain_id_->Clear();
  }
  clear_feature();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SideChainFeature::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SideChainFeature& this_ = static_cast<const SideChainFeature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SideChainFeature::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SideChainFeature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.SideChainFeature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.feature_case()) {
    case kValidatorNodeRegistration: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.feature_.validator_node_registration_, this_._impl_.feature_.validator_node_registration_->GetCachedSize(), target,
          stream);
      break;
    }
    case kTemplateRegistration: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.feature_.template_registration_, this_._impl_.feature_.template_registration_->GetCachedSize(), target,
          stream);
      break;
    }
    case kConfidentialOutput: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.feature_.confidential_output_, this_._impl_.feature_.confidential_output_->GetCachedSize(), target,
          stream);
      break;
    }
    case kEvictionProof: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.feature_.eviction_proof_, this_._impl_.feature_.eviction_proof_->GetCachedSize(), target,
          stream);
      break;
    }
    case kValidatorNodeExit: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.feature_.validator_node_exit_, this_._impl_.feature_.validator_node_exit_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.SideChainId sidechain_id = 6;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.sidechain_id_, this_._impl_.sidechain_id_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.SideChainFeature)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SideChainFeature::ByteSizeLong(const MessageLite& base) {
  const SideChainFeature& this_ = static_cast<const SideChainFeature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SideChainFeature::ByteSizeLong() const {
  const SideChainFeature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.SideChainFeature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .tari.rpc.SideChainId sidechain_id = 6;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sidechain_id_);
    }
  }
  switch (this_.feature_case()) {
    // .tari.rpc.ValidatorNodeRegistration validator_node_registration = 1;
    case kValidatorNodeRegistration: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.feature_.validator_node_registration_);
      break;
    }
    // .tari.rpc.TemplateRegistration template_registration = 2;
    case kTemplateRegistration: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.feature_.template_registration_);
      break;
    }
    // .tari.rpc.ConfidentialOutputData confidential_output = 3;
    case kConfidentialOutput: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.feature_.confidential_output_);
      break;
    }
    // .tari.rpc.EvictionProof eviction_proof = 4;
    case kEvictionProof: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.feature_.eviction_proof_);
      break;
    }
    // .tari.rpc.ValidatorNodeExit validator_node_exit = 5;
    case kValidatorNodeExit: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.feature_.validator_node_exit_);
      break;
    }
    case FEATURE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SideChainFeature::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SideChainFeature*>(&to_msg);
  auto& from = static_cast<const SideChainFeature&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.SideChainFeature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.sidechain_id_ != nullptr);
    if (_this->_impl_.sidechain_id_ == nullptr) {
      _this->_impl_.sidechain_id_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.sidechain_id_);
    } else {
      _this->_impl_.sidechain_id_->MergeFrom(*from._impl_.sidechain_id_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_feature();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kValidatorNodeRegistration: {
        if (oneof_needs_init) {
          _this->_impl_.feature_.validator_node_registration_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.feature_.validator_node_registration_);
        } else {
          _this->_impl_.feature_.validator_node_registration_->MergeFrom(*from._impl_.feature_.validator_node_registration_);
        }
        break;
      }
      case kTemplateRegistration: {
        if (oneof_needs_init) {
          _this->_impl_.feature_.template_registration_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.feature_.template_registration_);
        } else {
          _this->_impl_.feature_.template_registration_->MergeFrom(*from._impl_.feature_.template_registration_);
        }
        break;
      }
      case kConfidentialOutput: {
        if (oneof_needs_init) {
          _this->_impl_.feature_.confidential_output_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.feature_.confidential_output_);
        } else {
          _this->_impl_.feature_.confidential_output_->MergeFrom(*from._impl_.feature_.confidential_output_);
        }
        break;
      }
      case kEvictionProof: {
        if (oneof_needs_init) {
          _this->_impl_.feature_.eviction_proof_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.feature_.eviction_proof_);
        } else {
          _this->_impl_.feature_.eviction_proof_->MergeFrom(*from._impl_.feature_.eviction_proof_);
        }
        break;
      }
      case kValidatorNodeExit: {
        if (oneof_needs_init) {
          _this->_impl_.feature_.validator_node_exit_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.feature_.validator_node_exit_);
        } else {
          _this->_impl_.feature_.validator_node_exit_->MergeFrom(*from._impl_.feature_.validator_node_exit_);
        }
        break;
      }
      case FEATURE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SideChainFeature::CopyFrom(const SideChainFeature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.SideChainFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SideChainFeature::InternalSwap(SideChainFeature* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.sidechain_id_, other->_impl_.sidechain_id_);
  swap(_impl_.feature_, other->_impl_.feature_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata SideChainFeature::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SideChainId::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SideChainId>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SideChainId, _impl_._has_bits_);
};

void SideChainId::clear_knowledge_proof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.knowledge_proof_ != nullptr) _impl_.knowledge_proof_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SideChainId::SideChainId(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SideChainId_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.SideChainId)
}
PROTOBUF_NDEBUG_INLINE SideChainId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::SideChainId& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        public_key_(arena, from.public_key_) {}

SideChainId::SideChainId(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SideChainId& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SideChainId_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SideChainId* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.knowledge_proof_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.knowledge_proof_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.SideChainId)
}
PROTOBUF_NDEBUG_INLINE SideChainId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        public_key_(arena) {}

inline void SideChainId::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.knowledge_proof_ = {};
}
SideChainId::~SideChainId() {
  // @@protoc_insertion_point(destructor:tari.rpc.SideChainId)
  SharedDtor(*this);
}
inline void SideChainId::SharedDtor(MessageLite& self) {
  SideChainId& this_ = static_cast<SideChainId&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.public_key_.Destroy();
  delete this_._impl_.knowledge_proof_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SideChainId::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SideChainId(arena);
}
constexpr auto SideChainId::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SideChainId),
                                            alignof(SideChainId));
}
constexpr auto SideChainId::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SideChainId_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SideChainId::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SideChainId>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SideChainId::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SideChainId>(), &SideChainId::ByteSizeLong,
              &SideChainId::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SideChainId, _impl_._cached_size_),
          false,
      },
      &SideChainId::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SideChainId_class_data_ =
        SideChainId::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SideChainId::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SideChainId_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SideChainId_class_data_.tc_table);
  return SideChainId_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
SideChainId::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SideChainId, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SideChainId_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::SideChainId>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tari.rpc.Signature knowledge_proof = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SideChainId, _impl_.knowledge_proof_)}},
    // bytes public_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SideChainId, _impl_.public_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes public_key = 1;
    {PROTOBUF_FIELD_OFFSET(SideChainId, _impl_.public_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // .tari.rpc.Signature knowledge_proof = 2;
    {PROTOBUF_FIELD_OFFSET(SideChainId, _impl_.knowledge_proof_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::Signature>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SideChainId::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.SideChainId)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.public_key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.knowledge_proof_ != nullptr);
      _impl_.knowledge_proof_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SideChainId::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SideChainId& this_ = static_cast<const SideChainId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SideChainId::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SideChainId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.SideChainId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes public_key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_public_key().empty()) {
      const ::std::string& _s = this_._internal_public_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.Signature knowledge_proof = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.knowledge_proof_, this_._impl_.knowledge_proof_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.SideChainId)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SideChainId::ByteSizeLong(const MessageLite& base) {
  const SideChainId& this_ = static_cast<const SideChainId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SideChainId::ByteSizeLong() const {
  const SideChainId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.SideChainId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // bytes public_key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_public_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_public_key());
      }
    }
    // .tari.rpc.Signature knowledge_proof = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.knowledge_proof_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SideChainId::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SideChainId*>(&to_msg);
  auto& from = static_cast<const SideChainId&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.SideChainId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_public_key().empty()) {
        _this->_internal_set_public_key(from._internal_public_key());
      } else {
        if (_this->_impl_.public_key_.IsDefault()) {
          _this->_internal_set_public_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.knowledge_proof_ != nullptr);
      if (_this->_impl_.knowledge_proof_ == nullptr) {
        _this->_impl_.knowledge_proof_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.knowledge_proof_);
      } else {
        _this->_impl_.knowledge_proof_->MergeFrom(*from._impl_.knowledge_proof_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SideChainId::CopyFrom(const SideChainId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.SideChainId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SideChainId::InternalSwap(SideChainId* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.public_key_, &other->_impl_.public_key_, arena);
  swap(_impl_.knowledge_proof_, other->_impl_.knowledge_proof_);
}

::google::protobuf::Metadata SideChainId::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorNodeRegistration::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValidatorNodeRegistration>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidatorNodeRegistration, _impl_._has_bits_);
};

void ValidatorNodeRegistration::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.signature_ != nullptr) _impl_.signature_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
ValidatorNodeRegistration::ValidatorNodeRegistration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidatorNodeRegistration_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.ValidatorNodeRegistration)
}
PROTOBUF_NDEBUG_INLINE ValidatorNodeRegistration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::ValidatorNodeRegistration& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        public_key_(arena, from.public_key_),
        claim_public_key_(arena, from.claim_public_key_) {}

ValidatorNodeRegistration::ValidatorNodeRegistration(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValidatorNodeRegistration& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidatorNodeRegistration_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorNodeRegistration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.signature_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.signature_)
                : nullptr;
  _impl_.max_epoch_ = from._impl_.max_epoch_;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.ValidatorNodeRegistration)
}
PROTOBUF_NDEBUG_INLINE ValidatorNodeRegistration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        public_key_(arena),
        claim_public_key_(arena) {}

inline void ValidatorNodeRegistration::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, signature_),
           0,
           offsetof(Impl_, max_epoch_) -
               offsetof(Impl_, signature_) +
               sizeof(Impl_::max_epoch_));
}
ValidatorNodeRegistration::~ValidatorNodeRegistration() {
  // @@protoc_insertion_point(destructor:tari.rpc.ValidatorNodeRegistration)
  SharedDtor(*this);
}
inline void ValidatorNodeRegistration::SharedDtor(MessageLite& self) {
  ValidatorNodeRegistration& this_ = static_cast<ValidatorNodeRegistration&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.public_key_.Destroy();
  this_._impl_.claim_public_key_.Destroy();
  delete this_._impl_.signature_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValidatorNodeRegistration::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValidatorNodeRegistration(arena);
}
constexpr auto ValidatorNodeRegistration::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidatorNodeRegistration),
                                            alignof(ValidatorNodeRegistration));
}
constexpr auto ValidatorNodeRegistration::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ValidatorNodeRegistration_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValidatorNodeRegistration::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ValidatorNodeRegistration>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValidatorNodeRegistration::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ValidatorNodeRegistration>(), &ValidatorNodeRegistration::ByteSizeLong,
              &ValidatorNodeRegistration::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValidatorNodeRegistration, _impl_._cached_size_),
          false,
      },
      &ValidatorNodeRegistration::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ValidatorNodeRegistration_class_data_ =
        ValidatorNodeRegistration::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValidatorNodeRegistration::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ValidatorNodeRegistration_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ValidatorNodeRegistration_class_data_.tc_table);
  return ValidatorNodeRegistration_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2>
ValidatorNodeRegistration::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidatorNodeRegistration, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ValidatorNodeRegistration_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::ValidatorNodeRegistration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 max_epoch = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ValidatorNodeRegistration, _impl_.max_epoch_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ValidatorNodeRegistration, _impl_.max_epoch_)}},
    // bytes public_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ValidatorNodeRegistration, _impl_.public_key_)}},
    // .tari.rpc.Signature signature = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(ValidatorNodeRegistration, _impl_.signature_)}},
    // bytes claim_public_key = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ValidatorNodeRegistration, _impl_.claim_public_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes public_key = 1;
    {PROTOBUF_FIELD_OFFSET(ValidatorNodeRegistration, _impl_.public_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // .tari.rpc.Signature signature = 2;
    {PROTOBUF_FIELD_OFFSET(ValidatorNodeRegistration, _impl_.signature_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes claim_public_key = 3;
    {PROTOBUF_FIELD_OFFSET(ValidatorNodeRegistration, _impl_.claim_public_key_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 max_epoch = 4;
    {PROTOBUF_FIELD_OFFSET(ValidatorNodeRegistration, _impl_.max_epoch_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::Signature>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ValidatorNodeRegistration::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.ValidatorNodeRegistration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.public_key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.claim_public_key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.signature_ != nullptr);
      _impl_.signature_->Clear();
    }
  }
  _impl_.max_epoch_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValidatorNodeRegistration::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValidatorNodeRegistration& this_ = static_cast<const ValidatorNodeRegistration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValidatorNodeRegistration::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValidatorNodeRegistration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.ValidatorNodeRegistration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes public_key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_public_key().empty()) {
      const ::std::string& _s = this_._internal_public_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.Signature signature = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.signature_, this_._impl_.signature_->GetCachedSize(), target,
        stream);
  }

  // bytes claim_public_key = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_claim_public_key().empty()) {
      const ::std::string& _s = this_._internal_claim_public_key();
      target = stream->WriteBytesMaybeAliased(3, _s, target);
    }
  }

  // uint64 max_epoch = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_max_epoch() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          4, this_._internal_max_epoch(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.ValidatorNodeRegistration)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValidatorNodeRegistration::ByteSizeLong(const MessageLite& base) {
  const ValidatorNodeRegistration& this_ = static_cast<const ValidatorNodeRegistration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValidatorNodeRegistration::ByteSizeLong() const {
  const ValidatorNodeRegistration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.ValidatorNodeRegistration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // bytes public_key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_public_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_public_key());
      }
    }
    // bytes claim_public_key = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_claim_public_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_claim_public_key());
      }
    }
    // .tari.rpc.Signature signature = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.signature_);
    }
    // uint64 max_epoch = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_max_epoch() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_max_epoch());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ValidatorNodeRegistration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorNodeRegistration*>(&to_msg);
  auto& from = static_cast<const ValidatorNodeRegistration&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.ValidatorNodeRegistration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_public_key().empty()) {
        _this->_internal_set_public_key(from._internal_public_key());
      } else {
        if (_this->_impl_.public_key_.IsDefault()) {
          _this->_internal_set_public_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_claim_public_key().empty()) {
        _this->_internal_set_claim_public_key(from._internal_claim_public_key());
      } else {
        if (_this->_impl_.claim_public_key_.IsDefault()) {
          _this->_internal_set_claim_public_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.signature_ != nullptr);
      if (_this->_impl_.signature_ == nullptr) {
        _this->_impl_.signature_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.signature_);
      } else {
        _this->_impl_.signature_->MergeFrom(*from._impl_.signature_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_max_epoch() != 0) {
        _this->_impl_.max_epoch_ = from._impl_.max_epoch_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorNodeRegistration::CopyFrom(const ValidatorNodeRegistration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.ValidatorNodeRegistration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorNodeRegistration::InternalSwap(ValidatorNodeRegistration* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.public_key_, &other->_impl_.public_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.claim_public_key_, &other->_impl_.claim_public_key_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ValidatorNodeRegistration, _impl_.max_epoch_)
      + sizeof(ValidatorNodeRegistration::_impl_.max_epoch_)
      - PROTOBUF_FIELD_OFFSET(ValidatorNodeRegistration, _impl_.signature_)>(
          reinterpret_cast<char*>(&_impl_.signature_),
          reinterpret_cast<char*>(&other->_impl_.signature_));
}

::google::protobuf::Metadata ValidatorNodeRegistration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorNodeExit::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValidatorNodeExit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidatorNodeExit, _impl_._has_bits_);
};

void ValidatorNodeExit::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.signature_ != nullptr) _impl_.signature_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ValidatorNodeExit::ValidatorNodeExit(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidatorNodeExit_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.ValidatorNodeExit)
}
PROTOBUF_NDEBUG_INLINE ValidatorNodeExit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::ValidatorNodeExit& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        public_key_(arena, from.public_key_) {}

ValidatorNodeExit::ValidatorNodeExit(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValidatorNodeExit& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidatorNodeExit_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorNodeExit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.signature_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.signature_)
                : nullptr;
  _impl_.max_epoch_ = from._impl_.max_epoch_;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.ValidatorNodeExit)
}
PROTOBUF_NDEBUG_INLINE ValidatorNodeExit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        public_key_(arena) {}

inline void ValidatorNodeExit::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, signature_),
           0,
           offsetof(Impl_, max_epoch_) -
               offsetof(Impl_, signature_) +
               sizeof(Impl_::max_epoch_));
}
ValidatorNodeExit::~ValidatorNodeExit() {
  // @@protoc_insertion_point(destructor:tari.rpc.ValidatorNodeExit)
  SharedDtor(*this);
}
inline void ValidatorNodeExit::SharedDtor(MessageLite& self) {
  ValidatorNodeExit& this_ = static_cast<ValidatorNodeExit&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.public_key_.Destroy();
  delete this_._impl_.signature_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValidatorNodeExit::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValidatorNodeExit(arena);
}
constexpr auto ValidatorNodeExit::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidatorNodeExit),
                                            alignof(ValidatorNodeExit));
}
constexpr auto ValidatorNodeExit::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ValidatorNodeExit_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValidatorNodeExit::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ValidatorNodeExit>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValidatorNodeExit::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ValidatorNodeExit>(), &ValidatorNodeExit::ByteSizeLong,
              &ValidatorNodeExit::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValidatorNodeExit, _impl_._cached_size_),
          false,
      },
      &ValidatorNodeExit::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ValidatorNodeExit_class_data_ =
        ValidatorNodeExit::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValidatorNodeExit::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ValidatorNodeExit_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ValidatorNodeExit_class_data_.tc_table);
  return ValidatorNodeExit_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
ValidatorNodeExit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidatorNodeExit, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ValidatorNodeExit_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::ValidatorNodeExit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes public_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ValidatorNodeExit, _impl_.public_key_)}},
    // .tari.rpc.Signature signature = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ValidatorNodeExit, _impl_.signature_)}},
    // uint64 max_epoch = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ValidatorNodeExit, _impl_.max_epoch_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ValidatorNodeExit, _impl_.max_epoch_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes public_key = 1;
    {PROTOBUF_FIELD_OFFSET(ValidatorNodeExit, _impl_.public_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // .tari.rpc.Signature signature = 2;
    {PROTOBUF_FIELD_OFFSET(ValidatorNodeExit, _impl_.signature_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 max_epoch = 3;
    {PROTOBUF_FIELD_OFFSET(ValidatorNodeExit, _impl_.max_epoch_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::Signature>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ValidatorNodeExit::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.ValidatorNodeExit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.public_key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.signature_ != nullptr);
      _impl_.signature_->Clear();
    }
  }
  _impl_.max_epoch_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValidatorNodeExit::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValidatorNodeExit& this_ = static_cast<const ValidatorNodeExit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValidatorNodeExit::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValidatorNodeExit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.ValidatorNodeExit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes public_key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_public_key().empty()) {
      const ::std::string& _s = this_._internal_public_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.Signature signature = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.signature_, this_._impl_.signature_->GetCachedSize(), target,
        stream);
  }

  // uint64 max_epoch = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_max_epoch() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          3, this_._internal_max_epoch(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.ValidatorNodeExit)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValidatorNodeExit::ByteSizeLong(const MessageLite& base) {
  const ValidatorNodeExit& this_ = static_cast<const ValidatorNodeExit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValidatorNodeExit::ByteSizeLong() const {
  const ValidatorNodeExit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.ValidatorNodeExit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // bytes public_key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_public_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_public_key());
      }
    }
    // .tari.rpc.Signature signature = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.signature_);
    }
    // uint64 max_epoch = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_max_epoch() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_max_epoch());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ValidatorNodeExit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorNodeExit*>(&to_msg);
  auto& from = static_cast<const ValidatorNodeExit&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.ValidatorNodeExit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_public_key().empty()) {
        _this->_internal_set_public_key(from._internal_public_key());
      } else {
        if (_this->_impl_.public_key_.IsDefault()) {
          _this->_internal_set_public_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.signature_ != nullptr);
      if (_this->_impl_.signature_ == nullptr) {
        _this->_impl_.signature_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.signature_);
      } else {
        _this->_impl_.signature_->MergeFrom(*from._impl_.signature_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_max_epoch() != 0) {
        _this->_impl_.max_epoch_ = from._impl_.max_epoch_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorNodeExit::CopyFrom(const ValidatorNodeExit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.ValidatorNodeExit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorNodeExit::InternalSwap(ValidatorNodeExit* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.public_key_, &other->_impl_.public_key_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ValidatorNodeExit, _impl_.max_epoch_)
      + sizeof(ValidatorNodeExit::_impl_.max_epoch_)
      - PROTOBUF_FIELD_OFFSET(ValidatorNodeExit, _impl_.signature_)>(
          reinterpret_cast<char*>(&_impl_.signature_),
          reinterpret_cast<char*>(&other->_impl_.signature_));
}

::google::protobuf::Metadata ValidatorNodeExit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TemplateRegistration::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TemplateRegistration>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_._has_bits_);
};

void TemplateRegistration::clear_author_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.author_signature_ != nullptr) _impl_.author_signature_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
TemplateRegistration::TemplateRegistration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TemplateRegistration_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.TemplateRegistration)
}
PROTOBUF_NDEBUG_INLINE TemplateRegistration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::TemplateRegistration& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        author_public_key_(arena, from.author_public_key_),
        template_name_(arena, from.template_name_),
        binary_sha_(arena, from.binary_sha_),
        binary_url_(arena, from.binary_url_) {}

TemplateRegistration::TemplateRegistration(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TemplateRegistration& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TemplateRegistration_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TemplateRegistration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.author_signature_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.author_signature_)
                : nullptr;
  _impl_.template_type_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.template_type_)
                : nullptr;
  _impl_.build_info_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.build_info_)
                : nullptr;
  _impl_.template_version_ = from._impl_.template_version_;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.TemplateRegistration)
}
PROTOBUF_NDEBUG_INLINE TemplateRegistration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        author_public_key_(arena),
        template_name_(arena),
        binary_sha_(arena),
        binary_url_(arena) {}

inline void TemplateRegistration::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, author_signature_),
           0,
           offsetof(Impl_, template_version_) -
               offsetof(Impl_, author_signature_) +
               sizeof(Impl_::template_version_));
}
TemplateRegistration::~TemplateRegistration() {
  // @@protoc_insertion_point(destructor:tari.rpc.TemplateRegistration)
  SharedDtor(*this);
}
inline void TemplateRegistration::SharedDtor(MessageLite& self) {
  TemplateRegistration& this_ = static_cast<TemplateRegistration&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.author_public_key_.Destroy();
  this_._impl_.template_name_.Destroy();
  this_._impl_.binary_sha_.Destroy();
  this_._impl_.binary_url_.Destroy();
  delete this_._impl_.author_signature_;
  delete this_._impl_.template_type_;
  delete this_._impl_.build_info_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TemplateRegistration::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TemplateRegistration(arena);
}
constexpr auto TemplateRegistration::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TemplateRegistration),
                                            alignof(TemplateRegistration));
}
constexpr auto TemplateRegistration::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TemplateRegistration_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TemplateRegistration::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TemplateRegistration>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TemplateRegistration::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TemplateRegistration>(), &TemplateRegistration::ByteSizeLong,
              &TemplateRegistration::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_._cached_size_),
          false,
      },
      &TemplateRegistration::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TemplateRegistration_class_data_ =
        TemplateRegistration::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TemplateRegistration::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TemplateRegistration_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TemplateRegistration_class_data_.tc_table);
  return TemplateRegistration_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 69, 2>
TemplateRegistration::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TemplateRegistration_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::TemplateRegistration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string binary_url = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.binary_url_)}},
    // bytes author_public_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.author_public_key_)}},
    // .tari.rpc.Signature author_signature = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 4, 0, PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.author_signature_)}},
    // string template_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.template_name_)}},
    // uint32 template_version = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TemplateRegistration, _impl_.template_version_), 7>(),
     {32, 7, 0, PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.template_version_)}},
    // .tari.rpc.TemplateType template_type = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 5, 1, PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.template_type_)}},
    // .tari.rpc.BuildInfo build_info = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 6, 2, PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.build_info_)}},
    // bytes binary_sha = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.binary_sha_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes author_public_key = 1;
    {PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.author_public_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // .tari.rpc.Signature author_signature = 2;
    {PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.author_signature_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string template_name = 3;
    {PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.template_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 template_version = 4;
    {PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.template_version_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .tari.rpc.TemplateType template_type = 5;
    {PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.template_type_), _Internal::kHasBitsOffset + 5, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.BuildInfo build_info = 6;
    {PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.build_info_), _Internal::kHasBitsOffset + 6, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes binary_sha = 7;
    {PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.binary_sha_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // string binary_url = 8;
    {PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.binary_url_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::Signature>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::TemplateType>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::BuildInfo>()},
  }},
  {{
    "\35\0\0\15\0\0\0\0\12\0\0\0\0\0\0\0"
    "tari.rpc.TemplateRegistration"
    "template_name"
    "binary_url"
  }},
};
PROTOBUF_NOINLINE void TemplateRegistration::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.TemplateRegistration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.author_public_key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.template_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.binary_sha_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.binary_url_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.author_signature_ != nullptr);
      _impl_.author_signature_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.template_type_ != nullptr);
      _impl_.template_type_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.build_info_ != nullptr);
      _impl_.build_info_->Clear();
    }
  }
  _impl_.template_version_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TemplateRegistration::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TemplateRegistration& this_ = static_cast<const TemplateRegistration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TemplateRegistration::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TemplateRegistration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.TemplateRegistration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes author_public_key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_author_public_key().empty()) {
      const ::std::string& _s = this_._internal_author_public_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.Signature author_signature = 2;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.author_signature_, this_._impl_.author_signature_->GetCachedSize(), target,
        stream);
  }

  // string template_name = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_template_name().empty()) {
      const ::std::string& _s = this_._internal_template_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tari.rpc.TemplateRegistration.template_name");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // uint32 template_version = 4;
  if ((cached_has_bits & 0x00000080u) != 0) {
    if (this_._internal_template_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_template_version(), target);
    }
  }

  // .tari.rpc.TemplateType template_type = 5;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.template_type_, this_._impl_.template_type_->GetCachedSize(), target,
        stream);
  }

  // .tari.rpc.BuildInfo build_info = 6;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.build_info_, this_._impl_.build_info_->GetCachedSize(), target,
        stream);
  }

  // bytes binary_sha = 7;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_binary_sha().empty()) {
      const ::std::string& _s = this_._internal_binary_sha();
      target = stream->WriteBytesMaybeAliased(7, _s, target);
    }
  }

  // string binary_url = 8;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (!this_._internal_binary_url().empty()) {
      const ::std::string& _s = this_._internal_binary_url();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tari.rpc.TemplateRegistration.binary_url");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.TemplateRegistration)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TemplateRegistration::ByteSizeLong(const MessageLite& base) {
  const TemplateRegistration& this_ = static_cast<const TemplateRegistration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TemplateRegistration::ByteSizeLong() const {
  const TemplateRegistration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.TemplateRegistration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // bytes author_public_key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_author_public_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_author_public_key());
      }
    }
    // string template_name = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_template_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_template_name());
      }
    }
    // bytes binary_sha = 7;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_binary_sha().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_binary_sha());
      }
    }
    // string binary_url = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_binary_url().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_binary_url());
      }
    }
    // .tari.rpc.Signature author_signature = 2;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.author_signature_);
    }
    // .tari.rpc.TemplateType template_type = 5;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.template_type_);
    }
    // .tari.rpc.BuildInfo build_info = 6;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.build_info_);
    }
    // uint32 template_version = 4;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_template_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_template_version());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TemplateRegistration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TemplateRegistration*>(&to_msg);
  auto& from = static_cast<const TemplateRegistration&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.TemplateRegistration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_author_public_key().empty()) {
        _this->_internal_set_author_public_key(from._internal_author_public_key());
      } else {
        if (_this->_impl_.author_public_key_.IsDefault()) {
          _this->_internal_set_author_public_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_template_name().empty()) {
        _this->_internal_set_template_name(from._internal_template_name());
      } else {
        if (_this->_impl_.template_name_.IsDefault()) {
          _this->_internal_set_template_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_binary_sha().empty()) {
        _this->_internal_set_binary_sha(from._internal_binary_sha());
      } else {
        if (_this->_impl_.binary_sha_.IsDefault()) {
          _this->_internal_set_binary_sha("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_binary_url().empty()) {
        _this->_internal_set_binary_url(from._internal_binary_url());
      } else {
        if (_this->_impl_.binary_url_.IsDefault()) {
          _this->_internal_set_binary_url("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.author_signature_ != nullptr);
      if (_this->_impl_.author_signature_ == nullptr) {
        _this->_impl_.author_signature_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.author_signature_);
      } else {
        _this->_impl_.author_signature_->MergeFrom(*from._impl_.author_signature_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.template_type_ != nullptr);
      if (_this->_impl_.template_type_ == nullptr) {
        _this->_impl_.template_type_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.template_type_);
      } else {
        _this->_impl_.template_type_->MergeFrom(*from._impl_.template_type_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.build_info_ != nullptr);
      if (_this->_impl_.build_info_ == nullptr) {
        _this->_impl_.build_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.build_info_);
      } else {
        _this->_impl_.build_info_->MergeFrom(*from._impl_.build_info_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_template_version() != 0) {
        _this->_impl_.template_version_ = from._impl_.template_version_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TemplateRegistration::CopyFrom(const TemplateRegistration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.TemplateRegistration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TemplateRegistration::InternalSwap(TemplateRegistration* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.author_public_key_, &other->_impl_.author_public_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.template_name_, &other->_impl_.template_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.binary_sha_, &other->_impl_.binary_sha_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.binary_url_, &other->_impl_.binary_url_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.template_version_)
      + sizeof(TemplateRegistration::_impl_.template_version_)
      - PROTOBUF_FIELD_OFFSET(TemplateRegistration, _impl_.author_signature_)>(
          reinterpret_cast<char*>(&_impl_.author_signature_),
          reinterpret_cast<char*>(&other->_impl_.author_signature_));
}

::google::protobuf::Metadata TemplateRegistration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConfidentialOutputData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ConfidentialOutputData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConfidentialOutputData, _impl_._has_bits_);
};

ConfidentialOutputData::ConfidentialOutputData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConfidentialOutputData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.ConfidentialOutputData)
}
PROTOBUF_NDEBUG_INLINE ConfidentialOutputData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::ConfidentialOutputData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        claim_public_key_(arena, from.claim_public_key_) {}

ConfidentialOutputData::ConfidentialOutputData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ConfidentialOutputData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConfidentialOutputData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConfidentialOutputData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.ConfidentialOutputData)
}
PROTOBUF_NDEBUG_INLINE ConfidentialOutputData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        claim_public_key_(arena) {}

inline void ConfidentialOutputData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ConfidentialOutputData::~ConfidentialOutputData() {
  // @@protoc_insertion_point(destructor:tari.rpc.ConfidentialOutputData)
  SharedDtor(*this);
}
inline void ConfidentialOutputData::SharedDtor(MessageLite& self) {
  ConfidentialOutputData& this_ = static_cast<ConfidentialOutputData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.claim_public_key_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ConfidentialOutputData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConfidentialOutputData(arena);
}
constexpr auto ConfidentialOutputData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConfidentialOutputData),
                                            alignof(ConfidentialOutputData));
}
constexpr auto ConfidentialOutputData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConfidentialOutputData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConfidentialOutputData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConfidentialOutputData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConfidentialOutputData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ConfidentialOutputData>(), &ConfidentialOutputData::ByteSizeLong,
              &ConfidentialOutputData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConfidentialOutputData, _impl_._cached_size_),
          false,
      },
      &ConfidentialOutputData::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConfidentialOutputData_class_data_ =
        ConfidentialOutputData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConfidentialOutputData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConfidentialOutputData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConfidentialOutputData_class_data_.tc_table);
  return ConfidentialOutputData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
ConfidentialOutputData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConfidentialOutputData, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ConfidentialOutputData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::ConfidentialOutputData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes claim_public_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ConfidentialOutputData, _impl_.claim_public_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes claim_public_key = 1;
    {PROTOBUF_FIELD_OFFSET(ConfidentialOutputData, _impl_.claim_public_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ConfidentialOutputData::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.ConfidentialOutputData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.claim_public_key_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ConfidentialOutputData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ConfidentialOutputData& this_ = static_cast<const ConfidentialOutputData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ConfidentialOutputData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ConfidentialOutputData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.ConfidentialOutputData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes claim_public_key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_claim_public_key().empty()) {
      const ::std::string& _s = this_._internal_claim_public_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.ConfidentialOutputData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ConfidentialOutputData::ByteSizeLong(const MessageLite& base) {
  const ConfidentialOutputData& this_ = static_cast<const ConfidentialOutputData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ConfidentialOutputData::ByteSizeLong() const {
  const ConfidentialOutputData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.ConfidentialOutputData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // bytes claim_public_key = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_claim_public_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_claim_public_key());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ConfidentialOutputData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConfidentialOutputData*>(&to_msg);
  auto& from = static_cast<const ConfidentialOutputData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.ConfidentialOutputData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_claim_public_key().empty()) {
      _this->_internal_set_claim_public_key(from._internal_claim_public_key());
    } else {
      if (_this->_impl_.claim_public_key_.IsDefault()) {
        _this->_internal_set_claim_public_key("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConfidentialOutputData::CopyFrom(const ConfidentialOutputData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.ConfidentialOutputData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConfidentialOutputData::InternalSwap(ConfidentialOutputData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.claim_public_key_, &other->_impl_.claim_public_key_, arena);
}

::google::protobuf::Metadata ConfidentialOutputData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TemplateType::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tari::rpc::TemplateType, _impl_._oneof_case_);
};

void TemplateType::set_allocated_wasm(::tari::rpc::WasmInfo* PROTOBUF_NULLABLE wasm) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_template_type();
  if (wasm) {
    ::google::protobuf::Arena* submessage_arena = wasm->GetArena();
    if (message_arena != submessage_arena) {
      wasm = ::google::protobuf::internal::GetOwnedMessage(message_arena, wasm, submessage_arena);
    }
    set_has_wasm();
    _impl_.template_type_.wasm_ = wasm;
  }
  // @@protoc_insertion_point(field_set_allocated:tari.rpc.TemplateType.wasm)
}
void TemplateType::set_allocated_flow(::tari::rpc::FlowInfo* PROTOBUF_NULLABLE flow) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_template_type();
  if (flow) {
    ::google::protobuf::Arena* submessage_arena = flow->GetArena();
    if (message_arena != submessage_arena) {
      flow = ::google::protobuf::internal::GetOwnedMessage(message_arena, flow, submessage_arena);
    }
    set_has_flow();
    _impl_.template_type_.flow_ = flow;
  }
  // @@protoc_insertion_point(field_set_allocated:tari.rpc.TemplateType.flow)
}
void TemplateType::set_allocated_manifest(::tari::rpc::ManifestInfo* PROTOBUF_NULLABLE manifest) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_template_type();
  if (manifest) {
    ::google::protobuf::Arena* submessage_arena = manifest->GetArena();
    if (message_arena != submessage_arena) {
      manifest = ::google::protobuf::internal::GetOwnedMessage(message_arena, manifest, submessage_arena);
    }
    set_has_manifest();
    _impl_.template_type_.manifest_ = manifest;
  }
  // @@protoc_insertion_point(field_set_allocated:tari.rpc.TemplateType.manifest)
}
TemplateType::TemplateType(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TemplateType_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.TemplateType)
}
PROTOBUF_NDEBUG_INLINE TemplateType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::TemplateType& from_msg)
      : template_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

TemplateType::TemplateType(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TemplateType& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TemplateType_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TemplateType* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (template_type_case()) {
    case TEMPLATE_TYPE_NOT_SET:
      break;
      case kWasm:
        _impl_.template_type_.wasm_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.template_type_.wasm_);
        break;
      case kFlow:
        _impl_.template_type_.flow_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.template_type_.flow_);
        break;
      case kManifest:
        _impl_.template_type_.manifest_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.template_type_.manifest_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tari.rpc.TemplateType)
}
PROTOBUF_NDEBUG_INLINE TemplateType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : template_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void TemplateType::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TemplateType::~TemplateType() {
  // @@protoc_insertion_point(destructor:tari.rpc.TemplateType)
  SharedDtor(*this);
}
inline void TemplateType::SharedDtor(MessageLite& self) {
  TemplateType& this_ = static_cast<TemplateType&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_template_type()) {
    this_.clear_template_type();
  }
  this_._impl_.~Impl_();
}

void TemplateType::clear_template_type() {
// @@protoc_insertion_point(one_of_clear_start:tari.rpc.TemplateType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (template_type_case()) {
    case kWasm: {
      if (GetArena() == nullptr) {
        delete _impl_.template_type_.wasm_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.template_type_.wasm_);
      }
      break;
    }
    case kFlow: {
      if (GetArena() == nullptr) {
        delete _impl_.template_type_.flow_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.template_type_.flow_);
      }
      break;
    }
    case kManifest: {
      if (GetArena() == nullptr) {
        delete _impl_.template_type_.manifest_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.template_type_.manifest_);
      }
      break;
    }
    case TEMPLATE_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TEMPLATE_TYPE_NOT_SET;
}


inline void* PROTOBUF_NONNULL TemplateType::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TemplateType(arena);
}
constexpr auto TemplateType::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TemplateType),
                                            alignof(TemplateType));
}
constexpr auto TemplateType::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TemplateType_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TemplateType::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TemplateType>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TemplateType::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TemplateType>(), &TemplateType::ByteSizeLong,
              &TemplateType::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TemplateType, _impl_._cached_size_),
          false,
      },
      &TemplateType::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TemplateType_class_data_ =
        TemplateType::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TemplateType::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TemplateType_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TemplateType_class_data_.tc_table);
  return TemplateType_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2>
TemplateType::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TemplateType_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::TemplateType>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tari.rpc.WasmInfo wasm = 1;
    {PROTOBUF_FIELD_OFFSET(TemplateType, _impl_.template_type_.wasm_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.FlowInfo flow = 2;
    {PROTOBUF_FIELD_OFFSET(TemplateType, _impl_.template_type_.flow_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.ManifestInfo manifest = 3;
    {PROTOBUF_FIELD_OFFSET(TemplateType, _impl_.template_type_.manifest_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::WasmInfo>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::FlowInfo>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::ManifestInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TemplateType::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.TemplateType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_template_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TemplateType::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TemplateType& this_ = static_cast<const TemplateType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TemplateType::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TemplateType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.TemplateType)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.template_type_case()) {
    case kWasm: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.template_type_.wasm_, this_._impl_.template_type_.wasm_->GetCachedSize(), target,
          stream);
      break;
    }
    case kFlow: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.template_type_.flow_, this_._impl_.template_type_.flow_->GetCachedSize(), target,
          stream);
      break;
    }
    case kManifest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.template_type_.manifest_, this_._impl_.template_type_.manifest_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.TemplateType)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TemplateType::ByteSizeLong(const MessageLite& base) {
  const TemplateType& this_ = static_cast<const TemplateType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TemplateType::ByteSizeLong() const {
  const TemplateType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.TemplateType)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.template_type_case()) {
    // .tari.rpc.WasmInfo wasm = 1;
    case kWasm: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.template_type_.wasm_);
      break;
    }
    // .tari.rpc.FlowInfo flow = 2;
    case kFlow: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.template_type_.flow_);
      break;
    }
    // .tari.rpc.ManifestInfo manifest = 3;
    case kManifest: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.template_type_.manifest_);
      break;
    }
    case TEMPLATE_TYPE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TemplateType::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TemplateType*>(&to_msg);
  auto& from = static_cast<const TemplateType&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.TemplateType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_template_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kWasm: {
        if (oneof_needs_init) {
          _this->_impl_.template_type_.wasm_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.template_type_.wasm_);
        } else {
          _this->_impl_.template_type_.wasm_->MergeFrom(*from._impl_.template_type_.wasm_);
        }
        break;
      }
      case kFlow: {
        if (oneof_needs_init) {
          _this->_impl_.template_type_.flow_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.template_type_.flow_);
        } else {
          _this->_impl_.template_type_.flow_->MergeFrom(*from._impl_.template_type_.flow_);
        }
        break;
      }
      case kManifest: {
        if (oneof_needs_init) {
          _this->_impl_.template_type_.manifest_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.template_type_.manifest_);
        } else {
          _this->_impl_.template_type_.manifest_->MergeFrom(*from._impl_.template_type_.manifest_);
        }
        break;
      }
      case TEMPLATE_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TemplateType::CopyFrom(const TemplateType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.TemplateType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TemplateType::InternalSwap(TemplateType* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.template_type_, other->_impl_.template_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TemplateType::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WasmInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<WasmInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WasmInfo, _impl_._has_bits_);
};

WasmInfo::WasmInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WasmInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.WasmInfo)
}
WasmInfo::WasmInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WasmInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WasmInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE WasmInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void WasmInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.abi_version_ = {};
}
WasmInfo::~WasmInfo() {
  // @@protoc_insertion_point(destructor:tari.rpc.WasmInfo)
  SharedDtor(*this);
}
inline void WasmInfo::SharedDtor(MessageLite& self) {
  WasmInfo& this_ = static_cast<WasmInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WasmInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WasmInfo(arena);
}
constexpr auto WasmInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WasmInfo),
                                            alignof(WasmInfo));
}
constexpr auto WasmInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WasmInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WasmInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WasmInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WasmInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WasmInfo>(), &WasmInfo::ByteSizeLong,
              &WasmInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WasmInfo, _impl_._cached_size_),
          false,
      },
      &WasmInfo::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WasmInfo_class_data_ =
        WasmInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WasmInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WasmInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WasmInfo_class_data_.tc_table);
  return WasmInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
WasmInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WasmInfo, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    WasmInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::WasmInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 abi_version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WasmInfo, _impl_.abi_version_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(WasmInfo, _impl_.abi_version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 abi_version = 1;
    {PROTOBUF_FIELD_OFFSET(WasmInfo, _impl_.abi_version_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void WasmInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.WasmInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.abi_version_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WasmInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WasmInfo& this_ = static_cast<const WasmInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WasmInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WasmInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.WasmInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 abi_version = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_abi_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_abi_version(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.WasmInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WasmInfo::ByteSizeLong(const MessageLite& base) {
  const WasmInfo& this_ = static_cast<const WasmInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WasmInfo::ByteSizeLong() const {
  const WasmInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.WasmInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // uint32 abi_version = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_abi_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_abi_version());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WasmInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WasmInfo*>(&to_msg);
  auto& from = static_cast<const WasmInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.WasmInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_abi_version() != 0) {
      _this->_impl_.abi_version_ = from._impl_.abi_version_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WasmInfo::CopyFrom(const WasmInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.WasmInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WasmInfo::InternalSwap(WasmInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.abi_version_, other->_impl_.abi_version_);
}

::google::protobuf::Metadata WasmInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FlowInfo::_Internal {
 public:
};

FlowInfo::FlowInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, FlowInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:tari.rpc.FlowInfo)
}
FlowInfo::FlowInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FlowInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, FlowInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FlowInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.FlowInfo)
}

inline void* PROTOBUF_NONNULL FlowInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FlowInfo(arena);
}
constexpr auto FlowInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FlowInfo),
                                            alignof(FlowInfo));
}
constexpr auto FlowInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FlowInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FlowInfo::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<FlowInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FlowInfo::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<FlowInfo>(), &FlowInfo::ByteSizeLong,
              &FlowInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FlowInfo, _impl_._cached_size_),
          false,
      },
      &FlowInfo::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FlowInfo_class_data_ =
        FlowInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FlowInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FlowInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FlowInfo_class_data_.tc_table);
  return FlowInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
FlowInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    FlowInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::FlowInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata FlowInfo::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ManifestInfo::_Internal {
 public:
};

ManifestInfo::ManifestInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, ManifestInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:tari.rpc.ManifestInfo)
}
ManifestInfo::ManifestInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ManifestInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, ManifestInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ManifestInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.ManifestInfo)
}

inline void* PROTOBUF_NONNULL ManifestInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ManifestInfo(arena);
}
constexpr auto ManifestInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ManifestInfo),
                                            alignof(ManifestInfo));
}
constexpr auto ManifestInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ManifestInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ManifestInfo::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ManifestInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ManifestInfo::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ManifestInfo>(), &ManifestInfo::ByteSizeLong,
              &ManifestInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ManifestInfo, _impl_._cached_size_),
          false,
      },
      &ManifestInfo::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ManifestInfo_class_data_ =
        ManifestInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ManifestInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ManifestInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ManifestInfo_class_data_.tc_table);
  return ManifestInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
ManifestInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ManifestInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::ManifestInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata ManifestInfo::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BuildInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BuildInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BuildInfo, _impl_._has_bits_);
};

BuildInfo::BuildInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BuildInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.BuildInfo)
}
PROTOBUF_NDEBUG_INLINE BuildInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::BuildInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        repo_url_(arena, from.repo_url_),
        commit_hash_(arena, from.commit_hash_) {}

BuildInfo::BuildInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BuildInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BuildInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BuildInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.BuildInfo)
}
PROTOBUF_NDEBUG_INLINE BuildInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        repo_url_(arena),
        commit_hash_(arena) {}

inline void BuildInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BuildInfo::~BuildInfo() {
  // @@protoc_insertion_point(destructor:tari.rpc.BuildInfo)
  SharedDtor(*this);
}
inline void BuildInfo::SharedDtor(MessageLite& self) {
  BuildInfo& this_ = static_cast<BuildInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.repo_url_.Destroy();
  this_._impl_.commit_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BuildInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BuildInfo(arena);
}
constexpr auto BuildInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BuildInfo),
                                            alignof(BuildInfo));
}
constexpr auto BuildInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BuildInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BuildInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BuildInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BuildInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BuildInfo>(), &BuildInfo::ByteSizeLong,
              &BuildInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BuildInfo, _impl_._cached_size_),
          false,
      },
      &BuildInfo::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BuildInfo_class_data_ =
        BuildInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BuildInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BuildInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BuildInfo_class_data_.tc_table);
  return BuildInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 35, 2>
BuildInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BuildInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BuildInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::BuildInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes commit_hash = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(BuildInfo, _impl_.commit_hash_)}},
    // string repo_url = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BuildInfo, _impl_.repo_url_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string repo_url = 1;
    {PROTOBUF_FIELD_OFFSET(BuildInfo, _impl_.repo_url_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes commit_hash = 2;
    {PROTOBUF_FIELD_OFFSET(BuildInfo, _impl_.commit_hash_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\10\0\0\0\0\0\0"
    "tari.rpc.BuildInfo"
    "repo_url"
  }},
};
PROTOBUF_NOINLINE void BuildInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.BuildInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.repo_url_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.commit_hash_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BuildInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BuildInfo& this_ = static_cast<const BuildInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BuildInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BuildInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.BuildInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string repo_url = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_repo_url().empty()) {
      const ::std::string& _s = this_._internal_repo_url();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tari.rpc.BuildInfo.repo_url");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bytes commit_hash = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_commit_hash().empty()) {
      const ::std::string& _s = this_._internal_commit_hash();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.BuildInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BuildInfo::ByteSizeLong(const MessageLite& base) {
  const BuildInfo& this_ = static_cast<const BuildInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BuildInfo::ByteSizeLong() const {
  const BuildInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.BuildInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string repo_url = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_repo_url().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_repo_url());
      }
    }
    // bytes commit_hash = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_commit_hash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_commit_hash());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BuildInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BuildInfo*>(&to_msg);
  auto& from = static_cast<const BuildInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.BuildInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_repo_url().empty()) {
        _this->_internal_set_repo_url(from._internal_repo_url());
      } else {
        if (_this->_impl_.repo_url_.IsDefault()) {
          _this->_internal_set_repo_url("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_commit_hash().empty()) {
        _this->_internal_set_commit_hash(from._internal_commit_hash());
      } else {
        if (_this->_impl_.commit_hash_.IsDefault()) {
          _this->_internal_set_commit_hash("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BuildInfo::CopyFrom(const BuildInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.BuildInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BuildInfo::InternalSwap(BuildInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.repo_url_, &other->_impl_.repo_url_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.commit_hash_, &other->_impl_.commit_hash_, arena);
}

::google::protobuf::Metadata BuildInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EvictionProof::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EvictionProof>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EvictionProof, _impl_._has_bits_);
};

EvictionProof::EvictionProof(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EvictionProof_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.EvictionProof)
}
PROTOBUF_NDEBUG_INLINE EvictionProof::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::EvictionProof& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

EvictionProof::EvictionProof(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EvictionProof& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EvictionProof_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EvictionProof* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.proof_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.proof_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.EvictionProof)
}
PROTOBUF_NDEBUG_INLINE EvictionProof::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void EvictionProof::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proof_ = {};
}
EvictionProof::~EvictionProof() {
  // @@protoc_insertion_point(destructor:tari.rpc.EvictionProof)
  SharedDtor(*this);
}
inline void EvictionProof::SharedDtor(MessageLite& self) {
  EvictionProof& this_ = static_cast<EvictionProof&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.proof_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EvictionProof::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EvictionProof(arena);
}
constexpr auto EvictionProof::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EvictionProof),
                                            alignof(EvictionProof));
}
constexpr auto EvictionProof::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EvictionProof_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EvictionProof::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EvictionProof>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EvictionProof::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EvictionProof>(), &EvictionProof::ByteSizeLong,
              &EvictionProof::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EvictionProof, _impl_._cached_size_),
          false,
      },
      &EvictionProof::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EvictionProof_class_data_ =
        EvictionProof::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EvictionProof::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EvictionProof_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EvictionProof_class_data_.tc_table);
  return EvictionProof_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
EvictionProof::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EvictionProof, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EvictionProof_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::EvictionProof>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tari.rpc.CommitProof proof = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EvictionProof, _impl_.proof_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tari.rpc.CommitProof proof = 1;
    {PROTOBUF_FIELD_OFFSET(EvictionProof, _impl_.proof_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::CommitProof>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void EvictionProof::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.EvictionProof)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.proof_ != nullptr);
    _impl_.proof_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EvictionProof::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EvictionProof& this_ = static_cast<const EvictionProof&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EvictionProof::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EvictionProof& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.EvictionProof)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.CommitProof proof = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.proof_, this_._impl_.proof_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.EvictionProof)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EvictionProof::ByteSizeLong(const MessageLite& base) {
  const EvictionProof& this_ = static_cast<const EvictionProof&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EvictionProof::ByteSizeLong() const {
  const EvictionProof& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.EvictionProof)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .tari.rpc.CommitProof proof = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.proof_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EvictionProof::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EvictionProof*>(&to_msg);
  auto& from = static_cast<const EvictionProof&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.EvictionProof)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.proof_ != nullptr);
    if (_this->_impl_.proof_ == nullptr) {
      _this->_impl_.proof_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.proof_);
    } else {
      _this->_impl_.proof_->MergeFrom(*from._impl_.proof_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EvictionProof::CopyFrom(const EvictionProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.EvictionProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EvictionProof::InternalSwap(EvictionProof* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.proof_, other->_impl_.proof_);
}

::google::protobuf::Metadata EvictionProof::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommitProof::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tari::rpc::CommitProof, _impl_._oneof_case_);
};

void CommitProof::set_allocated_v1(::tari::rpc::CommitProofV1* PROTOBUF_NULLABLE v1) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_version();
  if (v1) {
    ::google::protobuf::Arena* submessage_arena = v1->GetArena();
    if (message_arena != submessage_arena) {
      v1 = ::google::protobuf::internal::GetOwnedMessage(message_arena, v1, submessage_arena);
    }
    set_has_v1();
    _impl_.version_.v1_ = v1;
  }
  // @@protoc_insertion_point(field_set_allocated:tari.rpc.CommitProof.v1)
}
CommitProof::CommitProof(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CommitProof_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.CommitProof)
}
PROTOBUF_NDEBUG_INLINE CommitProof::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::CommitProof& from_msg)
      : version_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

CommitProof::CommitProof(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CommitProof& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CommitProof_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CommitProof* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (version_case()) {
    case VERSION_NOT_SET:
      break;
      case kV1:
        _impl_.version_.v1_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.version_.v1_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tari.rpc.CommitProof)
}
PROTOBUF_NDEBUG_INLINE CommitProof::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : version_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void CommitProof::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CommitProof::~CommitProof() {
  // @@protoc_insertion_point(destructor:tari.rpc.CommitProof)
  SharedDtor(*this);
}
inline void CommitProof::SharedDtor(MessageLite& self) {
  CommitProof& this_ = static_cast<CommitProof&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_version()) {
    this_.clear_version();
  }
  this_._impl_.~Impl_();
}

void CommitProof::clear_version() {
// @@protoc_insertion_point(one_of_clear_start:tari.rpc.CommitProof)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (version_case()) {
    case kV1: {
      if (GetArena() == nullptr) {
        delete _impl_.version_.v1_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.version_.v1_);
      }
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VERSION_NOT_SET;
}


inline void* PROTOBUF_NONNULL CommitProof::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CommitProof(arena);
}
constexpr auto CommitProof::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CommitProof),
                                            alignof(CommitProof));
}
constexpr auto CommitProof::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CommitProof_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CommitProof::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CommitProof>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CommitProof::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CommitProof>(), &CommitProof::ByteSizeLong,
              &CommitProof::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CommitProof, _impl_._cached_size_),
          false,
      },
      &CommitProof::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CommitProof_class_data_ =
        CommitProof::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CommitProof::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CommitProof_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CommitProof_class_data_.tc_table);
  return CommitProof_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CommitProof::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CommitProof_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::CommitProof>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tari.rpc.CommitProofV1 v1 = 1;
    {PROTOBUF_FIELD_OFFSET(CommitProof, _impl_.version_.v1_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::CommitProofV1>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CommitProof::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.CommitProof)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_version();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CommitProof::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CommitProof& this_ = static_cast<const CommitProof&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CommitProof::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CommitProof& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.CommitProof)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .tari.rpc.CommitProofV1 v1 = 1;
  if (this_.version_case() == kV1) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.version_.v1_, this_._impl_.version_.v1_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.CommitProof)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CommitProof::ByteSizeLong(const MessageLite& base) {
  const CommitProof& this_ = static_cast<const CommitProof&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CommitProof::ByteSizeLong() const {
  const CommitProof& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.CommitProof)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.version_case()) {
    // .tari.rpc.CommitProofV1 v1 = 1;
    case kV1: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.version_.v1_);
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CommitProof::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommitProof*>(&to_msg);
  auto& from = static_cast<const CommitProof&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.CommitProof)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_version();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kV1: {
        if (oneof_needs_init) {
          _this->_impl_.version_.v1_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.version_.v1_);
        } else {
          _this->_impl_.version_.v1_->MergeFrom(*from._impl_.version_.v1_);
        }
        break;
      }
      case VERSION_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommitProof::CopyFrom(const CommitProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.CommitProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommitProof::InternalSwap(CommitProof* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.version_, other->_impl_.version_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata CommitProof::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommitProofV1::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CommitProofV1>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CommitProofV1, _impl_._has_bits_);
};

CommitProofV1::CommitProofV1(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CommitProofV1_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.CommitProofV1)
}
PROTOBUF_NDEBUG_INLINE CommitProofV1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::CommitProofV1& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        command_(arena, from.command_),
        encoded_inclusion_proof_(arena, from.encoded_inclusion_proof_) {}

CommitProofV1::CommitProofV1(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CommitProofV1& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CommitProofV1_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CommitProofV1* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.commit_proof_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.commit_proof_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.CommitProofV1)
}
PROTOBUF_NDEBUG_INLINE CommitProofV1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        command_(arena),
        encoded_inclusion_proof_(arena) {}

inline void CommitProofV1::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.commit_proof_ = {};
}
CommitProofV1::~CommitProofV1() {
  // @@protoc_insertion_point(destructor:tari.rpc.CommitProofV1)
  SharedDtor(*this);
}
inline void CommitProofV1::SharedDtor(MessageLite& self) {
  CommitProofV1& this_ = static_cast<CommitProofV1&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.command_.Destroy();
  this_._impl_.encoded_inclusion_proof_.Destroy();
  delete this_._impl_.commit_proof_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CommitProofV1::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CommitProofV1(arena);
}
constexpr auto CommitProofV1::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CommitProofV1),
                                            alignof(CommitProofV1));
}
constexpr auto CommitProofV1::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CommitProofV1_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CommitProofV1::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CommitProofV1>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CommitProofV1::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CommitProofV1>(), &CommitProofV1::ByteSizeLong,
              &CommitProofV1::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CommitProofV1, _impl_._cached_size_),
          false,
      },
      &CommitProofV1::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CommitProofV1_class_data_ =
        CommitProofV1::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CommitProofV1::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CommitProofV1_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CommitProofV1_class_data_.tc_table);
  return CommitProofV1_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
CommitProofV1::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CommitProofV1, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CommitProofV1_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::CommitProofV1>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes command = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CommitProofV1, _impl_.command_)}},
    // .tari.rpc.SidechainBlockCommitProof commit_proof = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(CommitProofV1, _impl_.commit_proof_)}},
    // bytes encoded_inclusion_proof = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CommitProofV1, _impl_.encoded_inclusion_proof_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes command = 1;
    {PROTOBUF_FIELD_OFFSET(CommitProofV1, _impl_.command_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // .tari.rpc.SidechainBlockCommitProof commit_proof = 2;
    {PROTOBUF_FIELD_OFFSET(CommitProofV1, _impl_.commit_proof_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes encoded_inclusion_proof = 3;
    {PROTOBUF_FIELD_OFFSET(CommitProofV1, _impl_.encoded_inclusion_proof_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::SidechainBlockCommitProof>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CommitProofV1::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.CommitProofV1)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.command_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.encoded_inclusion_proof_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.commit_proof_ != nullptr);
      _impl_.commit_proof_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CommitProofV1::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CommitProofV1& this_ = static_cast<const CommitProofV1&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CommitProofV1::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CommitProofV1& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.CommitProofV1)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes command = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_command().empty()) {
      const ::std::string& _s = this_._internal_command();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.SidechainBlockCommitProof commit_proof = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.commit_proof_, this_._impl_.commit_proof_->GetCachedSize(), target,
        stream);
  }

  // bytes encoded_inclusion_proof = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_encoded_inclusion_proof().empty()) {
      const ::std::string& _s = this_._internal_encoded_inclusion_proof();
      target = stream->WriteBytesMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.CommitProofV1)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CommitProofV1::ByteSizeLong(const MessageLite& base) {
  const CommitProofV1& this_ = static_cast<const CommitProofV1&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CommitProofV1::ByteSizeLong() const {
  const CommitProofV1& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.CommitProofV1)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // bytes command = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_command().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_command());
      }
    }
    // bytes encoded_inclusion_proof = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_encoded_inclusion_proof().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_encoded_inclusion_proof());
      }
    }
    // .tari.rpc.SidechainBlockCommitProof commit_proof = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.commit_proof_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CommitProofV1::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommitProofV1*>(&to_msg);
  auto& from = static_cast<const CommitProofV1&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.CommitProofV1)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_command().empty()) {
        _this->_internal_set_command(from._internal_command());
      } else {
        if (_this->_impl_.command_.IsDefault()) {
          _this->_internal_set_command("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_encoded_inclusion_proof().empty()) {
        _this->_internal_set_encoded_inclusion_proof(from._internal_encoded_inclusion_proof());
      } else {
        if (_this->_impl_.encoded_inclusion_proof_.IsDefault()) {
          _this->_internal_set_encoded_inclusion_proof("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.commit_proof_ != nullptr);
      if (_this->_impl_.commit_proof_ == nullptr) {
        _this->_impl_.commit_proof_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.commit_proof_);
      } else {
        _this->_impl_.commit_proof_->MergeFrom(*from._impl_.commit_proof_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommitProofV1::CopyFrom(const CommitProofV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.CommitProofV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommitProofV1::InternalSwap(CommitProofV1* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.command_, &other->_impl_.command_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encoded_inclusion_proof_, &other->_impl_.encoded_inclusion_proof_, arena);
  swap(_impl_.commit_proof_, other->_impl_.commit_proof_);
}

::google::protobuf::Metadata CommitProofV1::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SidechainBlockCommitProof::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SidechainBlockCommitProof>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SidechainBlockCommitProof, _impl_._has_bits_);
};

SidechainBlockCommitProof::SidechainBlockCommitProof(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SidechainBlockCommitProof_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.SidechainBlockCommitProof)
}
PROTOBUF_NDEBUG_INLINE SidechainBlockCommitProof::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::SidechainBlockCommitProof& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        proof_elements_{visibility, arena, from.proof_elements_} {}

SidechainBlockCommitProof::SidechainBlockCommitProof(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SidechainBlockCommitProof& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SidechainBlockCommitProof_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SidechainBlockCommitProof* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.SidechainBlockCommitProof)
}
PROTOBUF_NDEBUG_INLINE SidechainBlockCommitProof::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        proof_elements_{visibility, arena} {}

inline void SidechainBlockCommitProof::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
SidechainBlockCommitProof::~SidechainBlockCommitProof() {
  // @@protoc_insertion_point(destructor:tari.rpc.SidechainBlockCommitProof)
  SharedDtor(*this);
}
inline void SidechainBlockCommitProof::SharedDtor(MessageLite& self) {
  SidechainBlockCommitProof& this_ = static_cast<SidechainBlockCommitProof&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SidechainBlockCommitProof::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SidechainBlockCommitProof(arena);
}
constexpr auto SidechainBlockCommitProof::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SidechainBlockCommitProof, _impl_.proof_elements_) +
          decltype(SidechainBlockCommitProof::_impl_.proof_elements_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SidechainBlockCommitProof), alignof(SidechainBlockCommitProof), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SidechainBlockCommitProof::PlacementNew_,
                                 sizeof(SidechainBlockCommitProof),
                                 alignof(SidechainBlockCommitProof));
  }
}
constexpr auto SidechainBlockCommitProof::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SidechainBlockCommitProof_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SidechainBlockCommitProof::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SidechainBlockCommitProof>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SidechainBlockCommitProof::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SidechainBlockCommitProof>(), &SidechainBlockCommitProof::ByteSizeLong,
              &SidechainBlockCommitProof::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SidechainBlockCommitProof, _impl_._cached_size_),
          false,
      },
      &SidechainBlockCommitProof::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SidechainBlockCommitProof_class_data_ =
        SidechainBlockCommitProof::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SidechainBlockCommitProof::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SidechainBlockCommitProof_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SidechainBlockCommitProof_class_data_.tc_table);
  return SidechainBlockCommitProof_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
SidechainBlockCommitProof::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SidechainBlockCommitProof, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SidechainBlockCommitProof_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::SidechainBlockCommitProof>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tari.rpc.CommitProofElement proof_elements = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(SidechainBlockCommitProof, _impl_.proof_elements_)}},
    // .tari.rpc.SidechainBlockHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SidechainBlockCommitProof, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tari.rpc.SidechainBlockHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(SidechainBlockCommitProof, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tari.rpc.CommitProofElement proof_elements = 2;
    {PROTOBUF_FIELD_OFFSET(SidechainBlockCommitProof, _impl_.proof_elements_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::SidechainBlockHeader>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::CommitProofElement>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SidechainBlockCommitProof::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.SidechainBlockCommitProof)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proof_elements_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SidechainBlockCommitProof::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SidechainBlockCommitProof& this_ = static_cast<const SidechainBlockCommitProof&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SidechainBlockCommitProof::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SidechainBlockCommitProof& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.SidechainBlockCommitProof)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.SidechainBlockHeader header = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
        stream);
  }

  // repeated .tari.rpc.CommitProofElement proof_elements = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_proof_elements_size());
       i < n; i++) {
    const auto& repfield = this_._internal_proof_elements().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.SidechainBlockCommitProof)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SidechainBlockCommitProof::ByteSizeLong(const MessageLite& base) {
  const SidechainBlockCommitProof& this_ = static_cast<const SidechainBlockCommitProof&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SidechainBlockCommitProof::ByteSizeLong() const {
  const SidechainBlockCommitProof& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.SidechainBlockCommitProof)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .tari.rpc.CommitProofElement proof_elements = 2;
    {
      total_size += 1UL * this_._internal_proof_elements_size();
      for (const auto& msg : this_._internal_proof_elements()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .tari.rpc.SidechainBlockHeader header = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SidechainBlockCommitProof::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SidechainBlockCommitProof*>(&to_msg);
  auto& from = static_cast<const SidechainBlockCommitProof&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.SidechainBlockCommitProof)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_proof_elements()->MergeFrom(
      from._internal_proof_elements());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SidechainBlockCommitProof::CopyFrom(const SidechainBlockCommitProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.SidechainBlockCommitProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SidechainBlockCommitProof::InternalSwap(SidechainBlockCommitProof* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.proof_elements_.InternalSwap(&other->_impl_.proof_elements_);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata SidechainBlockCommitProof::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommitProofElement::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tari::rpc::CommitProofElement, _impl_._oneof_case_);
};

void CommitProofElement::set_allocated_quorum_certificate(::tari::rpc::QuorumCertificate* PROTOBUF_NULLABLE quorum_certificate) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_proof_element();
  if (quorum_certificate) {
    ::google::protobuf::Arena* submessage_arena = quorum_certificate->GetArena();
    if (message_arena != submessage_arena) {
      quorum_certificate = ::google::protobuf::internal::GetOwnedMessage(message_arena, quorum_certificate, submessage_arena);
    }
    set_has_quorum_certificate();
    _impl_.proof_element_.quorum_certificate_ = quorum_certificate;
  }
  // @@protoc_insertion_point(field_set_allocated:tari.rpc.CommitProofElement.quorum_certificate)
}
void CommitProofElement::set_allocated_dummy_chain(::tari::rpc::DummyChain* PROTOBUF_NULLABLE dummy_chain) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_proof_element();
  if (dummy_chain) {
    ::google::protobuf::Arena* submessage_arena = dummy_chain->GetArena();
    if (message_arena != submessage_arena) {
      dummy_chain = ::google::protobuf::internal::GetOwnedMessage(message_arena, dummy_chain, submessage_arena);
    }
    set_has_dummy_chain();
    _impl_.proof_element_.dummy_chain_ = dummy_chain;
  }
  // @@protoc_insertion_point(field_set_allocated:tari.rpc.CommitProofElement.dummy_chain)
}
CommitProofElement::CommitProofElement(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CommitProofElement_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.CommitProofElement)
}
PROTOBUF_NDEBUG_INLINE CommitProofElement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::CommitProofElement& from_msg)
      : proof_element_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

CommitProofElement::CommitProofElement(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CommitProofElement& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CommitProofElement_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CommitProofElement* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (proof_element_case()) {
    case PROOF_ELEMENT_NOT_SET:
      break;
      case kQuorumCertificate:
        _impl_.proof_element_.quorum_certificate_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.proof_element_.quorum_certificate_);
        break;
      case kDummyChain:
        _impl_.proof_element_.dummy_chain_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.proof_element_.dummy_chain_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tari.rpc.CommitProofElement)
}
PROTOBUF_NDEBUG_INLINE CommitProofElement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : proof_element_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void CommitProofElement::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CommitProofElement::~CommitProofElement() {
  // @@protoc_insertion_point(destructor:tari.rpc.CommitProofElement)
  SharedDtor(*this);
}
inline void CommitProofElement::SharedDtor(MessageLite& self) {
  CommitProofElement& this_ = static_cast<CommitProofElement&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_proof_element()) {
    this_.clear_proof_element();
  }
  this_._impl_.~Impl_();
}

void CommitProofElement::clear_proof_element() {
// @@protoc_insertion_point(one_of_clear_start:tari.rpc.CommitProofElement)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (proof_element_case()) {
    case kQuorumCertificate: {
      if (GetArena() == nullptr) {
        delete _impl_.proof_element_.quorum_certificate_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.proof_element_.quorum_certificate_);
      }
      break;
    }
    case kDummyChain: {
      if (GetArena() == nullptr) {
        delete _impl_.proof_element_.dummy_chain_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.proof_element_.dummy_chain_);
      }
      break;
    }
    case PROOF_ELEMENT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PROOF_ELEMENT_NOT_SET;
}


inline void* PROTOBUF_NONNULL CommitProofElement::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CommitProofElement(arena);
}
constexpr auto CommitProofElement::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CommitProofElement),
                                            alignof(CommitProofElement));
}
constexpr auto CommitProofElement::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CommitProofElement_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CommitProofElement::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CommitProofElement>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CommitProofElement::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CommitProofElement>(), &CommitProofElement::ByteSizeLong,
              &CommitProofElement::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CommitProofElement, _impl_._cached_size_),
          false,
      },
      &CommitProofElement::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CommitProofElement_class_data_ =
        CommitProofElement::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CommitProofElement::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CommitProofElement_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CommitProofElement_class_data_.tc_table);
  return CommitProofElement_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2>
CommitProofElement::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CommitProofElement_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::CommitProofElement>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tari.rpc.QuorumCertificate quorum_certificate = 1;
    {PROTOBUF_FIELD_OFFSET(CommitProofElement, _impl_.proof_element_.quorum_certificate_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.DummyChain dummy_chain = 2;
    {PROTOBUF_FIELD_OFFSET(CommitProofElement, _impl_.proof_element_.dummy_chain_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::QuorumCertificate>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::DummyChain>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CommitProofElement::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.CommitProofElement)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_proof_element();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CommitProofElement::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CommitProofElement& this_ = static_cast<const CommitProofElement&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CommitProofElement::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CommitProofElement& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.CommitProofElement)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.proof_element_case()) {
    case kQuorumCertificate: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.proof_element_.quorum_certificate_, this_._impl_.proof_element_.quorum_certificate_->GetCachedSize(), target,
          stream);
      break;
    }
    case kDummyChain: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.proof_element_.dummy_chain_, this_._impl_.proof_element_.dummy_chain_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.CommitProofElement)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CommitProofElement::ByteSizeLong(const MessageLite& base) {
  const CommitProofElement& this_ = static_cast<const CommitProofElement&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CommitProofElement::ByteSizeLong() const {
  const CommitProofElement& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.CommitProofElement)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.proof_element_case()) {
    // .tari.rpc.QuorumCertificate quorum_certificate = 1;
    case kQuorumCertificate: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.proof_element_.quorum_certificate_);
      break;
    }
    // .tari.rpc.DummyChain dummy_chain = 2;
    case kDummyChain: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.proof_element_.dummy_chain_);
      break;
    }
    case PROOF_ELEMENT_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CommitProofElement::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommitProofElement*>(&to_msg);
  auto& from = static_cast<const CommitProofElement&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.CommitProofElement)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_proof_element();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kQuorumCertificate: {
        if (oneof_needs_init) {
          _this->_impl_.proof_element_.quorum_certificate_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.proof_element_.quorum_certificate_);
        } else {
          _this->_impl_.proof_element_.quorum_certificate_->MergeFrom(*from._impl_.proof_element_.quorum_certificate_);
        }
        break;
      }
      case kDummyChain: {
        if (oneof_needs_init) {
          _this->_impl_.proof_element_.dummy_chain_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.proof_element_.dummy_chain_);
        } else {
          _this->_impl_.proof_element_.dummy_chain_->MergeFrom(*from._impl_.proof_element_.dummy_chain_);
        }
        break;
      }
      case PROOF_ELEMENT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommitProofElement::CopyFrom(const CommitProofElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.CommitProofElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommitProofElement::InternalSwap(CommitProofElement* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.proof_element_, other->_impl_.proof_element_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata CommitProofElement::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DummyChain::_Internal {
 public:
};

DummyChain::DummyChain(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DummyChain_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.DummyChain)
}
PROTOBUF_NDEBUG_INLINE DummyChain::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::DummyChain& from_msg)
      : chain_links_{visibility, arena, from.chain_links_},
        _cached_size_{0} {}

DummyChain::DummyChain(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DummyChain& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DummyChain_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DummyChain* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.DummyChain)
}
PROTOBUF_NDEBUG_INLINE DummyChain::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : chain_links_{visibility, arena},
        _cached_size_{0} {}

inline void DummyChain::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DummyChain::~DummyChain() {
  // @@protoc_insertion_point(destructor:tari.rpc.DummyChain)
  SharedDtor(*this);
}
inline void DummyChain::SharedDtor(MessageLite& self) {
  DummyChain& this_ = static_cast<DummyChain&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DummyChain::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DummyChain(arena);
}
constexpr auto DummyChain::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DummyChain, _impl_.chain_links_) +
          decltype(DummyChain::_impl_.chain_links_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DummyChain), alignof(DummyChain), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DummyChain::PlacementNew_,
                                 sizeof(DummyChain),
                                 alignof(DummyChain));
  }
}
constexpr auto DummyChain::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DummyChain_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DummyChain::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DummyChain>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DummyChain::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DummyChain>(), &DummyChain::ByteSizeLong,
              &DummyChain::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DummyChain, _impl_._cached_size_),
          false,
      },
      &DummyChain::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DummyChain_class_data_ =
        DummyChain::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DummyChain::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DummyChain_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DummyChain_class_data_.tc_table);
  return DummyChain_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
DummyChain::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DummyChain_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::DummyChain>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tari.rpc.ChainLink chain_links = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DummyChain, _impl_.chain_links_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tari.rpc.ChainLink chain_links = 1;
    {PROTOBUF_FIELD_OFFSET(DummyChain, _impl_.chain_links_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::ChainLink>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void DummyChain::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.DummyChain)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.chain_links_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DummyChain::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DummyChain& this_ = static_cast<const DummyChain&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DummyChain::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DummyChain& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.DummyChain)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tari.rpc.ChainLink chain_links = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_chain_links_size());
       i < n; i++) {
    const auto& repfield = this_._internal_chain_links().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.DummyChain)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DummyChain::ByteSizeLong(const MessageLite& base) {
  const DummyChain& this_ = static_cast<const DummyChain&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DummyChain::ByteSizeLong() const {
  const DummyChain& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.DummyChain)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .tari.rpc.ChainLink chain_links = 1;
    {
      total_size += 1UL * this_._internal_chain_links_size();
      for (const auto& msg : this_._internal_chain_links()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DummyChain::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DummyChain*>(&to_msg);
  auto& from = static_cast<const DummyChain&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.DummyChain)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_chain_links()->MergeFrom(
      from._internal_chain_links());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DummyChain::CopyFrom(const DummyChain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.DummyChain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DummyChain::InternalSwap(DummyChain* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.chain_links_.InternalSwap(&other->_impl_.chain_links_);
}

::google::protobuf::Metadata DummyChain::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChainLink::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ChainLink>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ChainLink, _impl_._has_bits_);
};

ChainLink::ChainLink(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChainLink_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.ChainLink)
}
PROTOBUF_NDEBUG_INLINE ChainLink::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::ChainLink& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        header_hash_(arena, from.header_hash_),
        parent_id_(arena, from.parent_id_) {}

ChainLink::ChainLink(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ChainLink& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChainLink_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChainLink* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.ChainLink)
}
PROTOBUF_NDEBUG_INLINE ChainLink::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        header_hash_(arena),
        parent_id_(arena) {}

inline void ChainLink::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ChainLink::~ChainLink() {
  // @@protoc_insertion_point(destructor:tari.rpc.ChainLink)
  SharedDtor(*this);
}
inline void ChainLink::SharedDtor(MessageLite& self) {
  ChainLink& this_ = static_cast<ChainLink&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.header_hash_.Destroy();
  this_._impl_.parent_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ChainLink::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ChainLink(arena);
}
constexpr auto ChainLink::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ChainLink),
                                            alignof(ChainLink));
}
constexpr auto ChainLink::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ChainLink_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ChainLink::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ChainLink>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ChainLink::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ChainLink>(), &ChainLink::ByteSizeLong,
              &ChainLink::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ChainLink, _impl_._cached_size_),
          false,
      },
      &ChainLink::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ChainLink_class_data_ =
        ChainLink::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ChainLink::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ChainLink_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ChainLink_class_data_.tc_table);
  return ChainLink_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
ChainLink::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChainLink, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ChainLink_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::ChainLink>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes parent_id = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ChainLink, _impl_.parent_id_)}},
    // bytes header_hash = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ChainLink, _impl_.header_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes header_hash = 1;
    {PROTOBUF_FIELD_OFFSET(ChainLink, _impl_.header_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes parent_id = 2;
    {PROTOBUF_FIELD_OFFSET(ChainLink, _impl_.parent_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ChainLink::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.ChainLink)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.header_hash_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.parent_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ChainLink::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ChainLink& this_ = static_cast<const ChainLink&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ChainLink::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ChainLink& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.ChainLink)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes header_hash = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_header_hash().empty()) {
      const ::std::string& _s = this_._internal_header_hash();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // bytes parent_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_parent_id().empty()) {
      const ::std::string& _s = this_._internal_parent_id();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.ChainLink)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ChainLink::ByteSizeLong(const MessageLite& base) {
  const ChainLink& this_ = static_cast<const ChainLink&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ChainLink::ByteSizeLong() const {
  const ChainLink& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.ChainLink)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // bytes header_hash = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_header_hash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_header_hash());
      }
    }
    // bytes parent_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_parent_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_parent_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ChainLink::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChainLink*>(&to_msg);
  auto& from = static_cast<const ChainLink&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.ChainLink)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_header_hash().empty()) {
        _this->_internal_set_header_hash(from._internal_header_hash());
      } else {
        if (_this->_impl_.header_hash_.IsDefault()) {
          _this->_internal_set_header_hash("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_parent_id().empty()) {
        _this->_internal_set_parent_id(from._internal_parent_id());
      } else {
        if (_this->_impl_.parent_id_.IsDefault()) {
          _this->_internal_set_parent_id("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChainLink::CopyFrom(const ChainLink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.ChainLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChainLink::InternalSwap(ChainLink* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.header_hash_, &other->_impl_.header_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_id_, &other->_impl_.parent_id_, arena);
}

::google::protobuf::Metadata ChainLink::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SidechainBlockHeader::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SidechainBlockHeader>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_._has_bits_);
};

void SidechainBlockHeader::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.signature_ != nullptr) _impl_.signature_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
SidechainBlockHeader::SidechainBlockHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SidechainBlockHeader_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.SidechainBlockHeader)
}
PROTOBUF_NDEBUG_INLINE SidechainBlockHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::SidechainBlockHeader& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parent_id_(arena, from.parent_id_),
        justify_id_(arena, from.justify_id_),
        proposed_by_(arena, from.proposed_by_),
        state_merkle_root_(arena, from.state_merkle_root_),
        command_merkle_root_(arena, from.command_merkle_root_),
        metadata_hash_(arena, from.metadata_hash_) {}

SidechainBlockHeader::SidechainBlockHeader(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SidechainBlockHeader& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SidechainBlockHeader_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SidechainBlockHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.shard_group_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.shard_group_)
                : nullptr;
  _impl_.signature_ = ((cached_has_bits & 0x00000080u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.signature_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, height_),
           offsetof(Impl_, network_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::network_));

  // @@protoc_insertion_point(copy_constructor:tari.rpc.SidechainBlockHeader)
}
PROTOBUF_NDEBUG_INLINE SidechainBlockHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        parent_id_(arena),
        justify_id_(arena),
        proposed_by_(arena),
        state_merkle_root_(arena),
        command_merkle_root_(arena),
        metadata_hash_(arena) {}

inline void SidechainBlockHeader::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, shard_group_),
           0,
           offsetof(Impl_, network_) -
               offsetof(Impl_, shard_group_) +
               sizeof(Impl_::network_));
}
SidechainBlockHeader::~SidechainBlockHeader() {
  // @@protoc_insertion_point(destructor:tari.rpc.SidechainBlockHeader)
  SharedDtor(*this);
}
inline void SidechainBlockHeader::SharedDtor(MessageLite& self) {
  SidechainBlockHeader& this_ = static_cast<SidechainBlockHeader&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.parent_id_.Destroy();
  this_._impl_.justify_id_.Destroy();
  this_._impl_.proposed_by_.Destroy();
  this_._impl_.state_merkle_root_.Destroy();
  this_._impl_.command_merkle_root_.Destroy();
  this_._impl_.metadata_hash_.Destroy();
  delete this_._impl_.shard_group_;
  delete this_._impl_.signature_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SidechainBlockHeader::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SidechainBlockHeader(arena);
}
constexpr auto SidechainBlockHeader::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SidechainBlockHeader),
                                            alignof(SidechainBlockHeader));
}
constexpr auto SidechainBlockHeader::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SidechainBlockHeader_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SidechainBlockHeader::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SidechainBlockHeader>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SidechainBlockHeader::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SidechainBlockHeader>(), &SidechainBlockHeader::ByteSizeLong,
              &SidechainBlockHeader::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_._cached_size_),
          false,
      },
      &SidechainBlockHeader::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SidechainBlockHeader_class_data_ =
        SidechainBlockHeader::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SidechainBlockHeader::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SidechainBlockHeader_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SidechainBlockHeader_class_data_.tc_table);
  return SidechainBlockHeader_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 2, 0, 2>
SidechainBlockHeader::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SidechainBlockHeader_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::SidechainBlockHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 network = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SidechainBlockHeader, _impl_.network_), 10>(),
     {8, 10, 0, PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.network_)}},
    // bytes parent_id = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.parent_id_)}},
    // bytes justify_id = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.justify_id_)}},
    // uint64 height = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SidechainBlockHeader, _impl_.height_), 8>(),
     {32, 8, 0, PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.height_)}},
    // uint64 epoch = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SidechainBlockHeader, _impl_.epoch_), 9>(),
     {40, 9, 0, PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.epoch_)}},
    // .tari.rpc.ShardGroup shard_group = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 6, 0, PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.shard_group_)}},
    // bytes proposed_by = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.proposed_by_)}},
    // bytes state_merkle_root = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.state_merkle_root_)}},
    // bytes command_merkle_root = 9;
    {::_pbi::TcParser::FastBS1,
     {74, 4, 0, PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.command_merkle_root_)}},
    // bytes metadata_hash = 10;
    {::_pbi::TcParser::FastBS1,
     {82, 5, 0, PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.metadata_hash_)}},
    // .tari.rpc.Signature signature = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 7, 1, PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.signature_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 network = 1;
    {PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.network_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bytes parent_id = 2;
    {PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.parent_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes justify_id = 3;
    {PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.justify_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 height = 4;
    {PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.height_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 epoch = 5;
    {PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.epoch_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // .tari.rpc.ShardGroup shard_group = 6;
    {PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.shard_group_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes proposed_by = 7;
    {PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.proposed_by_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes state_merkle_root = 8;
    {PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.state_merkle_root_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes command_merkle_root = 9;
    {PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.command_merkle_root_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes metadata_hash = 10;
    {PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.metadata_hash_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // .tari.rpc.Signature signature = 11;
    {PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.signature_), _Internal::kHasBitsOffset + 7, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::ShardGroup>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::Signature>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SidechainBlockHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.SidechainBlockHeader)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.parent_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.justify_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.proposed_by_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.state_merkle_root_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.command_merkle_root_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _impl_.metadata_hash_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.shard_group_ != nullptr);
      _impl_.shard_group_->Clear();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(_impl_.signature_ != nullptr);
      _impl_.signature_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    ::memset(&_impl_.height_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.network_) -
        reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.network_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SidechainBlockHeader::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SidechainBlockHeader& this_ = static_cast<const SidechainBlockHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SidechainBlockHeader::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SidechainBlockHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.SidechainBlockHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 network = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (this_._internal_network() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_network(), target);
    }
  }

  // bytes parent_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_parent_id().empty()) {
      const ::std::string& _s = this_._internal_parent_id();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // bytes justify_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_justify_id().empty()) {
      const ::std::string& _s = this_._internal_justify_id();
      target = stream->WriteBytesMaybeAliased(3, _s, target);
    }
  }

  // uint64 height = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_height() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          4, this_._internal_height(), target);
    }
  }

  // uint64 epoch = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (this_._internal_epoch() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          5, this_._internal_epoch(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.ShardGroup shard_group = 6;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.shard_group_, this_._impl_.shard_group_->GetCachedSize(), target,
        stream);
  }

  // bytes proposed_by = 7;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_proposed_by().empty()) {
      const ::std::string& _s = this_._internal_proposed_by();
      target = stream->WriteBytesMaybeAliased(7, _s, target);
    }
  }

  // bytes state_merkle_root = 8;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (!this_._internal_state_merkle_root().empty()) {
      const ::std::string& _s = this_._internal_state_merkle_root();
      target = stream->WriteBytesMaybeAliased(8, _s, target);
    }
  }

  // bytes command_merkle_root = 9;
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (!this_._internal_command_merkle_root().empty()) {
      const ::std::string& _s = this_._internal_command_merkle_root();
      target = stream->WriteBytesMaybeAliased(9, _s, target);
    }
  }

  // bytes metadata_hash = 10;
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (!this_._internal_metadata_hash().empty()) {
      const ::std::string& _s = this_._internal_metadata_hash();
      target = stream->WriteBytesMaybeAliased(10, _s, target);
    }
  }

  // .tari.rpc.Signature signature = 11;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *this_._impl_.signature_, this_._impl_.signature_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.SidechainBlockHeader)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SidechainBlockHeader::ByteSizeLong(const MessageLite& base) {
  const SidechainBlockHeader& this_ = static_cast<const SidechainBlockHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SidechainBlockHeader::ByteSizeLong() const {
  const SidechainBlockHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.SidechainBlockHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // bytes parent_id = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_parent_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_parent_id());
      }
    }
    // bytes justify_id = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_justify_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_justify_id());
      }
    }
    // bytes proposed_by = 7;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_proposed_by().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_proposed_by());
      }
    }
    // bytes state_merkle_root = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_state_merkle_root().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_state_merkle_root());
      }
    }
    // bytes command_merkle_root = 9;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_command_merkle_root().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_command_merkle_root());
      }
    }
    // bytes metadata_hash = 10;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!this_._internal_metadata_hash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_metadata_hash());
      }
    }
    // .tari.rpc.ShardGroup shard_group = 6;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shard_group_);
    }
    // .tari.rpc.Signature signature = 11;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.signature_);
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    // uint64 height = 4;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_height() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_height());
      }
    }
    // uint64 epoch = 5;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_epoch() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_epoch());
      }
    }
    // uint32 network = 1;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_network() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_network());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SidechainBlockHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SidechainBlockHeader*>(&to_msg);
  auto& from = static_cast<const SidechainBlockHeader&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.SidechainBlockHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_parent_id().empty()) {
        _this->_internal_set_parent_id(from._internal_parent_id());
      } else {
        if (_this->_impl_.parent_id_.IsDefault()) {
          _this->_internal_set_parent_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_justify_id().empty()) {
        _this->_internal_set_justify_id(from._internal_justify_id());
      } else {
        if (_this->_impl_.justify_id_.IsDefault()) {
          _this->_internal_set_justify_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_proposed_by().empty()) {
        _this->_internal_set_proposed_by(from._internal_proposed_by());
      } else {
        if (_this->_impl_.proposed_by_.IsDefault()) {
          _this->_internal_set_proposed_by("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_state_merkle_root().empty()) {
        _this->_internal_set_state_merkle_root(from._internal_state_merkle_root());
      } else {
        if (_this->_impl_.state_merkle_root_.IsDefault()) {
          _this->_internal_set_state_merkle_root("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_command_merkle_root().empty()) {
        _this->_internal_set_command_merkle_root(from._internal_command_merkle_root());
      } else {
        if (_this->_impl_.command_merkle_root_.IsDefault()) {
          _this->_internal_set_command_merkle_root("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!from._internal_metadata_hash().empty()) {
        _this->_internal_set_metadata_hash(from._internal_metadata_hash());
      } else {
        if (_this->_impl_.metadata_hash_.IsDefault()) {
          _this->_internal_set_metadata_hash("");
        }
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.shard_group_ != nullptr);
      if (_this->_impl_.shard_group_ == nullptr) {
        _this->_impl_.shard_group_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.shard_group_);
      } else {
        _this->_impl_.shard_group_->MergeFrom(*from._impl_.shard_group_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(from._impl_.signature_ != nullptr);
      if (_this->_impl_.signature_ == nullptr) {
        _this->_impl_.signature_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.signature_);
      } else {
        _this->_impl_.signature_->MergeFrom(*from._impl_.signature_);
      }
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_height() != 0) {
        _this->_impl_.height_ = from._impl_.height_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_epoch() != 0) {
        _this->_impl_.epoch_ = from._impl_.epoch_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_network() != 0) {
        _this->_impl_.network_ = from._impl_.network_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SidechainBlockHeader::CopyFrom(const SidechainBlockHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.SidechainBlockHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SidechainBlockHeader::InternalSwap(SidechainBlockHeader* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_id_, &other->_impl_.parent_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.justify_id_, &other->_impl_.justify_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposed_by_, &other->_impl_.proposed_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_merkle_root_, &other->_impl_.state_merkle_root_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.command_merkle_root_, &other->_impl_.command_merkle_root_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_hash_, &other->_impl_.metadata_hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.network_)
      + sizeof(SidechainBlockHeader::_impl_.network_)
      - PROTOBUF_FIELD_OFFSET(SidechainBlockHeader, _impl_.shard_group_)>(
          reinterpret_cast<char*>(&_impl_.shard_group_),
          reinterpret_cast<char*>(&other->_impl_.shard_group_));
}

::google::protobuf::Metadata SidechainBlockHeader::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ShardGroup::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ShardGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ShardGroup, _impl_._has_bits_);
};

ShardGroup::ShardGroup(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ShardGroup_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.ShardGroup)
}
ShardGroup::ShardGroup(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ShardGroup& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ShardGroup_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ShardGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ShardGroup::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_),
           0,
           offsetof(Impl_, end_inclusive_) -
               offsetof(Impl_, start_) +
               sizeof(Impl_::end_inclusive_));
}
ShardGroup::~ShardGroup() {
  // @@protoc_insertion_point(destructor:tari.rpc.ShardGroup)
  SharedDtor(*this);
}
inline void ShardGroup::SharedDtor(MessageLite& self) {
  ShardGroup& this_ = static_cast<ShardGroup&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ShardGroup::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ShardGroup(arena);
}
constexpr auto ShardGroup::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ShardGroup),
                                            alignof(ShardGroup));
}
constexpr auto ShardGroup::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ShardGroup_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ShardGroup::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ShardGroup>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ShardGroup::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ShardGroup>(), &ShardGroup::ByteSizeLong,
              &ShardGroup::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ShardGroup, _impl_._cached_size_),
          false,
      },
      &ShardGroup::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ShardGroup_class_data_ =
        ShardGroup::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ShardGroup::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ShardGroup_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ShardGroup_class_data_.tc_table);
  return ShardGroup_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
ShardGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ShardGroup, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ShardGroup_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::ShardGroup>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 end_inclusive = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ShardGroup, _impl_.end_inclusive_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ShardGroup, _impl_.end_inclusive_)}},
    // uint32 start = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ShardGroup, _impl_.start_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ShardGroup, _impl_.start_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 start = 1;
    {PROTOBUF_FIELD_OFFSET(ShardGroup, _impl_.start_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 end_inclusive = 2;
    {PROTOBUF_FIELD_OFFSET(ShardGroup, _impl_.end_inclusive_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ShardGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.ShardGroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.start_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.end_inclusive_) -
        reinterpret_cast<char*>(&_impl_.start_)) + sizeof(_impl_.end_inclusive_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ShardGroup::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ShardGroup& this_ = static_cast<const ShardGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ShardGroup::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ShardGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.ShardGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 start = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_start() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_start(), target);
    }
  }

  // uint32 end_inclusive = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_end_inclusive() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_end_inclusive(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.ShardGroup)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ShardGroup::ByteSizeLong(const MessageLite& base) {
  const ShardGroup& this_ = static_cast<const ShardGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ShardGroup::ByteSizeLong() const {
  const ShardGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.ShardGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint32 start = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_start() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_start());
      }
    }
    // uint32 end_inclusive = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_end_inclusive() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_end_inclusive());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ShardGroup::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ShardGroup*>(&to_msg);
  auto& from = static_cast<const ShardGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.ShardGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_start() != 0) {
        _this->_impl_.start_ = from._impl_.start_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_end_inclusive() != 0) {
        _this->_impl_.end_inclusive_ = from._impl_.end_inclusive_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ShardGroup::CopyFrom(const ShardGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.ShardGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ShardGroup::InternalSwap(ShardGroup* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ShardGroup, _impl_.end_inclusive_)
      + sizeof(ShardGroup::_impl_.end_inclusive_)
      - PROTOBUF_FIELD_OFFSET(ShardGroup, _impl_.start_)>(
          reinterpret_cast<char*>(&_impl_.start_),
          reinterpret_cast<char*>(&other->_impl_.start_));
}

::google::protobuf::Metadata ShardGroup::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EvictAtom::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EvictAtom>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EvictAtom, _impl_._has_bits_);
};

EvictAtom::EvictAtom(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EvictAtom_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.EvictAtom)
}
PROTOBUF_NDEBUG_INLINE EvictAtom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::EvictAtom& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        public_key_(arena, from.public_key_) {}

EvictAtom::EvictAtom(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EvictAtom& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EvictAtom_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EvictAtom* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.EvictAtom)
}
PROTOBUF_NDEBUG_INLINE EvictAtom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        public_key_(arena) {}

inline void EvictAtom::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EvictAtom::~EvictAtom() {
  // @@protoc_insertion_point(destructor:tari.rpc.EvictAtom)
  SharedDtor(*this);
}
inline void EvictAtom::SharedDtor(MessageLite& self) {
  EvictAtom& this_ = static_cast<EvictAtom&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.public_key_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EvictAtom::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EvictAtom(arena);
}
constexpr auto EvictAtom::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EvictAtom),
                                            alignof(EvictAtom));
}
constexpr auto EvictAtom::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EvictAtom_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EvictAtom::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EvictAtom>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EvictAtom::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EvictAtom>(), &EvictAtom::ByteSizeLong,
              &EvictAtom::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EvictAtom, _impl_._cached_size_),
          false,
      },
      &EvictAtom::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EvictAtom_class_data_ =
        EvictAtom::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EvictAtom::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EvictAtom_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EvictAtom_class_data_.tc_table);
  return EvictAtom_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
EvictAtom::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EvictAtom, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EvictAtom_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::EvictAtom>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes public_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EvictAtom, _impl_.public_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes public_key = 1;
    {PROTOBUF_FIELD_OFFSET(EvictAtom, _impl_.public_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void EvictAtom::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.EvictAtom)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.public_key_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EvictAtom::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EvictAtom& this_ = static_cast<const EvictAtom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EvictAtom::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EvictAtom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.EvictAtom)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes public_key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_public_key().empty()) {
      const ::std::string& _s = this_._internal_public_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.EvictAtom)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EvictAtom::ByteSizeLong(const MessageLite& base) {
  const EvictAtom& this_ = static_cast<const EvictAtom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EvictAtom::ByteSizeLong() const {
  const EvictAtom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.EvictAtom)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // bytes public_key = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_public_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_public_key());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EvictAtom::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EvictAtom*>(&to_msg);
  auto& from = static_cast<const EvictAtom&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.EvictAtom)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_public_key().empty()) {
      _this->_internal_set_public_key(from._internal_public_key());
    } else {
      if (_this->_impl_.public_key_.IsDefault()) {
        _this->_internal_set_public_key("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EvictAtom::CopyFrom(const EvictAtom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.EvictAtom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EvictAtom::InternalSwap(EvictAtom* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.public_key_, &other->_impl_.public_key_, arena);
}

::google::protobuf::Metadata EvictAtom::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QuorumCertificate::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<QuorumCertificate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QuorumCertificate, _impl_._has_bits_);
};

QuorumCertificate::QuorumCertificate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QuorumCertificate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.QuorumCertificate)
}
PROTOBUF_NDEBUG_INLINE QuorumCertificate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::QuorumCertificate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        signatures_{visibility, arena, from.signatures_},
        header_hash_(arena, from.header_hash_),
        parent_id_(arena, from.parent_id_) {}

QuorumCertificate::QuorumCertificate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const QuorumCertificate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QuorumCertificate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QuorumCertificate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.decision_ = from._impl_.decision_;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.QuorumCertificate)
}
PROTOBUF_NDEBUG_INLINE QuorumCertificate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        signatures_{visibility, arena},
        header_hash_(arena),
        parent_id_(arena) {}

inline void QuorumCertificate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.decision_ = {};
}
QuorumCertificate::~QuorumCertificate() {
  // @@protoc_insertion_point(destructor:tari.rpc.QuorumCertificate)
  SharedDtor(*this);
}
inline void QuorumCertificate::SharedDtor(MessageLite& self) {
  QuorumCertificate& this_ = static_cast<QuorumCertificate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.header_hash_.Destroy();
  this_._impl_.parent_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL QuorumCertificate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) QuorumCertificate(arena);
}
constexpr auto QuorumCertificate::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QuorumCertificate, _impl_.signatures_) +
          decltype(QuorumCertificate::_impl_.signatures_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(QuorumCertificate), alignof(QuorumCertificate), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QuorumCertificate::PlacementNew_,
                                 sizeof(QuorumCertificate),
                                 alignof(QuorumCertificate));
  }
}
constexpr auto QuorumCertificate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_QuorumCertificate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &QuorumCertificate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<QuorumCertificate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &QuorumCertificate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<QuorumCertificate>(), &QuorumCertificate::ByteSizeLong,
              &QuorumCertificate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(QuorumCertificate, _impl_._cached_size_),
          false,
      },
      &QuorumCertificate::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull QuorumCertificate_class_data_ =
        QuorumCertificate::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
QuorumCertificate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&QuorumCertificate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(QuorumCertificate_class_data_.tc_table);
  return QuorumCertificate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2>
QuorumCertificate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QuorumCertificate, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    QuorumCertificate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::QuorumCertificate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tari.rpc.QuorumDecision decision = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QuorumCertificate, _impl_.decision_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(QuorumCertificate, _impl_.decision_)}},
    // bytes header_hash = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QuorumCertificate, _impl_.header_hash_)}},
    // bytes parent_id = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(QuorumCertificate, _impl_.parent_id_)}},
    // repeated .tari.rpc.ValidatorSignature signatures = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(QuorumCertificate, _impl_.signatures_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes header_hash = 1;
    {PROTOBUF_FIELD_OFFSET(QuorumCertificate, _impl_.header_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes parent_id = 2;
    {PROTOBUF_FIELD_OFFSET(QuorumCertificate, _impl_.parent_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .tari.rpc.ValidatorSignature signatures = 3;
    {PROTOBUF_FIELD_OFFSET(QuorumCertificate, _impl_.signatures_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.QuorumDecision decision = 4;
    {PROTOBUF_FIELD_OFFSET(QuorumCertificate, _impl_.decision_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::ValidatorSignature>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void QuorumCertificate::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.QuorumCertificate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.signatures_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.header_hash_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.parent_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.decision_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL QuorumCertificate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const QuorumCertificate& this_ = static_cast<const QuorumCertificate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL QuorumCertificate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const QuorumCertificate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.QuorumCertificate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes header_hash = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_header_hash().empty()) {
      const ::std::string& _s = this_._internal_header_hash();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // bytes parent_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_parent_id().empty()) {
      const ::std::string& _s = this_._internal_parent_id();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // repeated .tari.rpc.ValidatorSignature signatures = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_signatures_size());
       i < n; i++) {
    const auto& repfield = this_._internal_signatures().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .tari.rpc.QuorumDecision decision = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_decision() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_decision(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.QuorumCertificate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t QuorumCertificate::ByteSizeLong(const MessageLite& base) {
  const QuorumCertificate& this_ = static_cast<const QuorumCertificate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t QuorumCertificate::ByteSizeLong() const {
  const QuorumCertificate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.QuorumCertificate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .tari.rpc.ValidatorSignature signatures = 3;
    {
      total_size += 1UL * this_._internal_signatures_size();
      for (const auto& msg : this_._internal_signatures()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // bytes header_hash = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_header_hash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_header_hash());
      }
    }
    // bytes parent_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_parent_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_parent_id());
      }
    }
    // .tari.rpc.QuorumDecision decision = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_decision() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_decision());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void QuorumCertificate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QuorumCertificate*>(&to_msg);
  auto& from = static_cast<const QuorumCertificate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.QuorumCertificate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_signatures()->MergeFrom(
      from._internal_signatures());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_header_hash().empty()) {
        _this->_internal_set_header_hash(from._internal_header_hash());
      } else {
        if (_this->_impl_.header_hash_.IsDefault()) {
          _this->_internal_set_header_hash("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_parent_id().empty()) {
        _this->_internal_set_parent_id(from._internal_parent_id());
      } else {
        if (_this->_impl_.parent_id_.IsDefault()) {
          _this->_internal_set_parent_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_decision() != 0) {
        _this->_impl_.decision_ = from._impl_.decision_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QuorumCertificate::CopyFrom(const QuorumCertificate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.QuorumCertificate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QuorumCertificate::InternalSwap(QuorumCertificate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.signatures_.InternalSwap(&other->_impl_.signatures_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.header_hash_, &other->_impl_.header_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_id_, &other->_impl_.parent_id_, arena);
  swap(_impl_.decision_, other->_impl_.decision_);
}

::google::protobuf::Metadata QuorumCertificate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorSignature::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValidatorSignature>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidatorSignature, _impl_._has_bits_);
};

void ValidatorSignature::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.signature_ != nullptr) _impl_.signature_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ValidatorSignature::ValidatorSignature(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidatorSignature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.ValidatorSignature)
}
PROTOBUF_NDEBUG_INLINE ValidatorSignature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::ValidatorSignature& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        public_key_(arena, from.public_key_) {}

ValidatorSignature::ValidatorSignature(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValidatorSignature& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidatorSignature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorSignature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.signature_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.signature_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.ValidatorSignature)
}
PROTOBUF_NDEBUG_INLINE ValidatorSignature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        public_key_(arena) {}

inline void ValidatorSignature::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.signature_ = {};
}
ValidatorSignature::~ValidatorSignature() {
  // @@protoc_insertion_point(destructor:tari.rpc.ValidatorSignature)
  SharedDtor(*this);
}
inline void ValidatorSignature::SharedDtor(MessageLite& self) {
  ValidatorSignature& this_ = static_cast<ValidatorSignature&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.public_key_.Destroy();
  delete this_._impl_.signature_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValidatorSignature::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValidatorSignature(arena);
}
constexpr auto ValidatorSignature::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidatorSignature),
                                            alignof(ValidatorSignature));
}
constexpr auto ValidatorSignature::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ValidatorSignature_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValidatorSignature::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ValidatorSignature>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValidatorSignature::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ValidatorSignature>(), &ValidatorSignature::ByteSizeLong,
              &ValidatorSignature::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValidatorSignature, _impl_._cached_size_),
          false,
      },
      &ValidatorSignature::kDescriptorMethods,
      &descriptor_table_sidechain_5ftypes_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ValidatorSignature_class_data_ =
        ValidatorSignature::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValidatorSignature::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ValidatorSignature_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ValidatorSignature_class_data_.tc_table);
  return ValidatorSignature_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
ValidatorSignature::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidatorSignature, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ValidatorSignature_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::ValidatorSignature>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tari.rpc.Signature signature = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ValidatorSignature, _impl_.signature_)}},
    // bytes public_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ValidatorSignature, _impl_.public_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes public_key = 1;
    {PROTOBUF_FIELD_OFFSET(ValidatorSignature, _impl_.public_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // .tari.rpc.Signature signature = 2;
    {PROTOBUF_FIELD_OFFSET(ValidatorSignature, _impl_.signature_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::Signature>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ValidatorSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.ValidatorSignature)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.public_key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.signature_ != nullptr);
      _impl_.signature_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValidatorSignature::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValidatorSignature& this_ = static_cast<const ValidatorSignature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValidatorSignature::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValidatorSignature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.ValidatorSignature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes public_key = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_public_key().empty()) {
      const ::std::string& _s = this_._internal_public_key();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.Signature signature = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.signature_, this_._impl_.signature_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.ValidatorSignature)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValidatorSignature::ByteSizeLong(const MessageLite& base) {
  const ValidatorSignature& this_ = static_cast<const ValidatorSignature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValidatorSignature::ByteSizeLong() const {
  const ValidatorSignature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.ValidatorSignature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // bytes public_key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_public_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_public_key());
      }
    }
    // .tari.rpc.Signature signature = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.signature_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ValidatorSignature::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorSignature*>(&to_msg);
  auto& from = static_cast<const ValidatorSignature&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.ValidatorSignature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_public_key().empty()) {
        _this->_internal_set_public_key(from._internal_public_key());
      } else {
        if (_this->_impl_.public_key_.IsDefault()) {
          _this->_internal_set_public_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.signature_ != nullptr);
      if (_this->_impl_.signature_ == nullptr) {
        _this->_impl_.signature_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.signature_);
      } else {
        _this->_impl_.signature_->MergeFrom(*from._impl_.signature_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorSignature::CopyFrom(const ValidatorSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.ValidatorSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorSignature::InternalSwap(ValidatorSignature* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.public_key_, &other->_impl_.public_key_, arena);
  swap(_impl_.signature_, other->_impl_.signature_);
}

::google::protobuf::Metadata ValidatorSignature::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
}  // namespace tari
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_sidechain_5ftypes_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
