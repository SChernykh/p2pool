// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: types.proto
// Protobuf C++ Version: 6.31.1

#include "types.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tari {
namespace rpc {

inline constexpr WeightParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        kernel_weight_{::uint64_t{0u}},
        input_weight_{::uint64_t{0u}},
        output_weight_{::uint64_t{0u}},
        features_and_scripts_bytes_per_gram_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR WeightParams::WeightParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WeightParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WeightParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WeightParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WeightParamsDefaultTypeInternal() {}
  union {
    WeightParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WeightParamsDefaultTypeInternal _WeightParams_default_instance_;

inline constexpr Signature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        public_nonce_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Signature::Signature(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Signature_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SignatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignatureDefaultTypeInternal() {}
  union {
    Signature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignatureDefaultTypeInternal _Signature_default_instance_;

inline constexpr RangeProof::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        proof_bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RangeProof::RangeProof(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RangeProof_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RangeProofDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RangeProofDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RangeProofDefaultTypeInternal() {}
  union {
    RangeProof _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RangeProofDefaultTypeInternal _RangeProof_default_instance_;

inline constexpr Range::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_{::uint64_t{0u}},
        max_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Range::Range(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Range_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RangeDefaultTypeInternal() {}
  union {
    Range _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RangeDefaultTypeInternal _Range_default_instance_;

inline constexpr PowAlgorithmConstants::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_difficulty_{::uint64_t{0u}},
        max_difficulty_{::uint64_t{0u}},
        target_time_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR PowAlgorithmConstants::PowAlgorithmConstants(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PowAlgorithmConstants_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PowAlgorithmConstantsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PowAlgorithmConstantsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PowAlgorithmConstantsDefaultTypeInternal() {}
  union {
    PowAlgorithmConstants _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PowAlgorithmConstantsDefaultTypeInternal _PowAlgorithmConstants_default_instance_;

inline constexpr PermittedRangeProofs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        range_proof_types_{},
        _range_proof_types_cached_byte_size_{0},
        output_type_{static_cast< ::tari::rpc::OutputType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PermittedRangeProofs::PermittedRangeProofs(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PermittedRangeProofs_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PermittedRangeProofsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PermittedRangeProofsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PermittedRangeProofsDefaultTypeInternal() {}
  union {
    PermittedRangeProofs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PermittedRangeProofsDefaultTypeInternal _PermittedRangeProofs_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Empty::Empty(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(Empty_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;

inline constexpr CommitmentSignature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        public_nonce_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        u_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        v_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CommitmentSignature::CommitmentSignature(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CommitmentSignature_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommitmentSignatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommitmentSignatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommitmentSignatureDefaultTypeInternal() {}
  union {
    CommitmentSignature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommitmentSignatureDefaultTypeInternal _CommitmentSignature_default_instance_;

inline constexpr ComAndPubSignature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ephemeral_commitment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ephemeral_pubkey_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        u_a_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        u_x_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        u_y_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ComAndPubSignature::ComAndPubSignature(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ComAndPubSignature_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ComAndPubSignatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComAndPubSignatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComAndPubSignatureDefaultTypeInternal() {}
  union {
    ComAndPubSignature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComAndPubSignatureDefaultTypeInternal _ComAndPubSignature_default_instance_;

inline constexpr BlockHeight::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        block_height_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR BlockHeight::BlockHeight(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BlockHeight_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockHeightDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockHeightDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockHeightDefaultTypeInternal() {}
  union {
    BlockHeight _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockHeightDefaultTypeInternal _BlockHeight_default_instance_;

inline constexpr OutputsVersion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        outputs_{nullptr},
        features_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR OutputsVersion::OutputsVersion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OutputsVersion_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OutputsVersionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OutputsVersionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OutputsVersionDefaultTypeInternal() {}
  union {
    OutputsVersion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OutputsVersionDefaultTypeInternal _OutputsVersion_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ConsensusConstants_ProofOfWorkEntry_DoNotUse::ConsensusConstants_ProofOfWorkEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ConsensusConstants_ProofOfWorkEntry_DoNotUse::MapEntry(ConsensusConstants_ProofOfWorkEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ConsensusConstants_ProofOfWorkEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ConsensusConstants_ProofOfWorkEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConsensusConstants_ProofOfWorkEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConsensusConstants_ProofOfWorkEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ConsensusConstants_ProofOfWorkEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConsensusConstants_ProofOfWorkEntry_DoNotUseDefaultTypeInternal _ConsensusConstants_ProofOfWorkEntry_DoNotUse_default_instance_;

inline constexpr ConsensusConstants::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        emission_decay_{},
        _emission_decay_cached_byte_size_{0},
        proof_of_work_{},
        permitted_output_types_{},
        _permitted_output_types_cached_byte_size_{0},
        permitted_range_proof_types_{},
        valid_blockchain_version_range_{nullptr},
        transaction_weight_{nullptr},
        input_version_range_{nullptr},
        output_version_range_{nullptr},
        kernel_version_range_{nullptr},
        coinbase_min_maturity_{::uint64_t{0u}},
        future_time_limit_{::uint64_t{0u}},
        difficulty_block_window_{::uint64_t{0u}},
        max_block_transaction_weight_{::uint64_t{0u}},
        pow_algo_count_{::uint64_t{0u}},
        median_timestamp_count_{::uint64_t{0u}},
        emission_initial_{::uint64_t{0u}},
        emission_tail_{::uint64_t{0u}},
        min_sha3x_pow_difficulty_{::uint64_t{0u}},
        block_weight_inputs_{::uint64_t{0u}},
        block_weight_outputs_{::uint64_t{0u}},
        block_weight_kernels_{::uint64_t{0u}},
        pre_mine_value_{::uint64_t{0u}},
        max_script_byte_size_{::uint64_t{0u}},
        effective_from_height_{::uint64_t{0u}},
        blockchain_version_{0u},
        vn_registration_max_vns_initial_epoch_{0u},
        max_randomx_seed_height_{::uint64_t{0u}},
        epoch_length_{::uint64_t{0u}},
        validator_node_registration_min_deposit_amount_{::uint64_t{0u}},
        validator_node_registration_min_lock_height_{::uint64_t{0u}},
        validator_node_registration_shuffle_interval_epoch_{::uint64_t{0u}},
        inflation_bips_{::uint64_t{0u}},
        tail_epoch_length_{::uint64_t{0u}},
        max_block_coinbase_count_{::uint64_t{0u}},
        vn_registration_max_vns_per_epoch_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ConsensusConstants::ConsensusConstants(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ConsensusConstants_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConsensusConstantsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConsensusConstantsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConsensusConstantsDefaultTypeInternal() {}
  union {
    ConsensusConstants _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConsensusConstantsDefaultTypeInternal _ConsensusConstants_default_instance_;
}  // namespace rpc
}  // namespace tari
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_types_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_types_2eproto = nullptr;
const ::uint32_t
    TableStruct_types_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Range, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Range, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Range, _impl_.max_),
        0,
        1,
        0x000, // bitmap
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeight, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::BlockHeight, _impl_.block_height_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Signature, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Signature, _impl_.public_nonce_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::Signature, _impl_.signature_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ComAndPubSignature, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ComAndPubSignature, _impl_.ephemeral_commitment_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ComAndPubSignature, _impl_.ephemeral_pubkey_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ComAndPubSignature, _impl_.u_a_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ComAndPubSignature, _impl_.u_x_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ComAndPubSignature, _impl_.u_y_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::CommitmentSignature, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::CommitmentSignature, _impl_.public_nonce_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::CommitmentSignature, _impl_.u_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::CommitmentSignature, _impl_.v_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::PowAlgorithmConstants, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::PowAlgorithmConstants, _impl_.min_difficulty_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::PowAlgorithmConstants, _impl_.max_difficulty_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::PowAlgorithmConstants, _impl_.target_time_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::WeightParams, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::WeightParams, _impl_.kernel_weight_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::WeightParams, _impl_.input_weight_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::WeightParams, _impl_.output_weight_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::WeightParams, _impl_.features_and_scripts_bytes_per_gram_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::OutputsVersion, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::OutputsVersion, _impl_.outputs_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::OutputsVersion, _impl_.features_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::PermittedRangeProofs, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::PermittedRangeProofs, _impl_.output_type_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::PermittedRangeProofs, _impl_.range_proof_types_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::RangeProof, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::RangeProof, _impl_.proof_bytes_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants_ProofOfWorkEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants_ProofOfWorkEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants_ProofOfWorkEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_._has_bits_),
        38, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.coinbase_min_maturity_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.blockchain_version_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.future_time_limit_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.difficulty_block_window_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.max_block_transaction_weight_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.pow_algo_count_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.median_timestamp_count_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.emission_initial_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.emission_decay_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.emission_tail_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.min_sha3x_pow_difficulty_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.block_weight_inputs_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.block_weight_outputs_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.block_weight_kernels_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.pre_mine_value_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.max_script_byte_size_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.effective_from_height_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.valid_blockchain_version_range_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.max_randomx_seed_height_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.proof_of_work_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.transaction_weight_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.input_version_range_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.output_version_range_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.kernel_version_range_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.permitted_output_types_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.epoch_length_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.validator_node_registration_min_deposit_amount_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.validator_node_registration_min_lock_height_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.validator_node_registration_shuffle_interval_epoch_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.permitted_range_proof_types_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.inflation_bips_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.tail_epoch_length_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.max_block_coinbase_count_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.vn_registration_max_vns_initial_epoch_),
        PROTOBUF_FIELD_OFFSET(::tari::rpc::ConsensusConstants, _impl_.vn_registration_max_vns_per_epoch_),
        5,
        20,
        6,
        7,
        8,
        9,
        10,
        11,
        ~0u,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        0,
        22,
        ~0u,
        1,
        2,
        3,
        4,
        ~0u,
        23,
        24,
        25,
        26,
        ~0u,
        27,
        28,
        29,
        21,
        30,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::tari::rpc::Range)},
        {7, sizeof(::tari::rpc::Empty)},
        {8, sizeof(::tari::rpc::BlockHeight)},
        {13, sizeof(::tari::rpc::Signature)},
        {20, sizeof(::tari::rpc::ComAndPubSignature)},
        {33, sizeof(::tari::rpc::CommitmentSignature)},
        {42, sizeof(::tari::rpc::PowAlgorithmConstants)},
        {51, sizeof(::tari::rpc::WeightParams)},
        {62, sizeof(::tari::rpc::OutputsVersion)},
        {69, sizeof(::tari::rpc::PermittedRangeProofs)},
        {76, sizeof(::tari::rpc::RangeProof)},
        {81, sizeof(::tari::rpc::ConsensusConstants_ProofOfWorkEntry_DoNotUse)},
        {88, sizeof(::tari::rpc::ConsensusConstants)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::tari::rpc::_Range_default_instance_._instance,
    &::tari::rpc::_Empty_default_instance_._instance,
    &::tari::rpc::_BlockHeight_default_instance_._instance,
    &::tari::rpc::_Signature_default_instance_._instance,
    &::tari::rpc::_ComAndPubSignature_default_instance_._instance,
    &::tari::rpc::_CommitmentSignature_default_instance_._instance,
    &::tari::rpc::_PowAlgorithmConstants_default_instance_._instance,
    &::tari::rpc::_WeightParams_default_instance_._instance,
    &::tari::rpc::_OutputsVersion_default_instance_._instance,
    &::tari::rpc::_PermittedRangeProofs_default_instance_._instance,
    &::tari::rpc::_RangeProof_default_instance_._instance,
    &::tari::rpc::_ConsensusConstants_ProofOfWorkEntry_DoNotUse_default_instance_._instance,
    &::tari::rpc::_ConsensusConstants_default_instance_._instance,
};
const char descriptor_table_protodef_types_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013types.proto\022\010tari.rpc\"!\n\005Range\022\013\n\003min\030"
    "\001 \001(\004\022\013\n\003max\030\002 \001(\004\"\007\n\005Empty\"#\n\013BlockHeig"
    "ht\022\024\n\014block_height\030\001 \001(\004\"4\n\tSignature\022\024\n"
    "\014public_nonce\030\001 \001(\014\022\021\n\tsignature\030\002 \001(\014\"s"
    "\n\022ComAndPubSignature\022\034\n\024ephemeral_commit"
    "ment\030\001 \001(\014\022\030\n\020ephemeral_pubkey\030\002 \001(\014\022\013\n\003"
    "u_a\030\003 \001(\014\022\013\n\003u_x\030\004 \001(\014\022\013\n\003u_y\030\005 \001(\014\"A\n\023C"
    "ommitmentSignature\022\024\n\014public_nonce\030\001 \001(\014"
    "\022\t\n\001u\030\002 \001(\014\022\t\n\001v\030\003 \001(\014\"\\\n\025PowAlgorithmCo"
    "nstants\022\026\n\016min_difficulty\030\002 \001(\004\022\026\n\016max_d"
    "ifficulty\030\003 \001(\004\022\023\n\013target_time\030\004 \001(\004\"\177\n\014"
    "WeightParams\022\025\n\rkernel_weight\030\001 \001(\004\022\024\n\014i"
    "nput_weight\030\002 \001(\004\022\025\n\routput_weight\030\003 \001(\004"
    "\022+\n#features_and_scripts_bytes_per_gram\030"
    "\004 \001(\004\"U\n\016OutputsVersion\022 \n\007outputs\030\001 \001(\013"
    "2\017.tari.rpc.Range\022!\n\010features\030\002 \001(\0132\017.ta"
    "ri.rpc.Range\"v\n\024PermittedRangeProofs\022)\n\013"
    "output_type\030\001 \001(\0162\024.tari.rpc.OutputType\022"
    "3\n\021range_proof_types\030\002 \003(\0162\030.tari.rpc.Ra"
    "ngeProofType\"!\n\nRangeProof\022\023\n\013proof_byte"
    "s\030\001 \001(\014\"\255\013\n\022ConsensusConstants\022\035\n\025coinba"
    "se_min_maturity\030\001 \001(\004\022\032\n\022blockchain_vers"
    "ion\030\002 \001(\r\022\031\n\021future_time_limit\030\003 \001(\004\022\037\n\027"
    "difficulty_block_window\030\005 \001(\004\022$\n\034max_blo"
    "ck_transaction_weight\030\007 \001(\004\022\026\n\016pow_algo_"
    "count\030\010 \001(\004\022\036\n\026median_timestamp_count\030\t "
    "\001(\004\022\030\n\020emission_initial\030\n \001(\004\022\026\n\016emissio"
    "n_decay\030\013 \003(\004\022\031\n\remission_tail\030\014 \001(\004B\002\030\001"
    "\022 \n\030min_sha3x_pow_difficulty\030\r \001(\004\022\033\n\023bl"
    "ock_weight_inputs\030\016 \001(\004\022\034\n\024block_weight_"
    "outputs\030\017 \001(\004\022\034\n\024block_weight_kernels\030\020 "
    "\001(\004\022\026\n\016pre_mine_value\030\021 \001(\004\022\034\n\024max_scrip"
    "t_byte_size\030\022 \001(\004\022\035\n\025effective_from_heig"
    "ht\030\024 \001(\004\0227\n\036valid_blockchain_version_ran"
    "ge\030\025 \001(\0132\017.tari.rpc.Range\022\037\n\027max_randomx"
    "_seed_height\030\026 \001(\004\022D\n\rproof_of_work\030\027 \003("
    "\0132-.tari.rpc.ConsensusConstants.ProofOfW"
    "orkEntry\0222\n\022transaction_weight\030\030 \001(\0132\026.t"
    "ari.rpc.WeightParams\022,\n\023input_version_ra"
    "nge\030\032 \001(\0132\017.tari.rpc.Range\0226\n\024output_ver"
    "sion_range\030\033 \001(\0132\030.tari.rpc.OutputsVersi"
    "on\022-\n\024kernel_version_range\030\034 \001(\0132\017.tari."
    "rpc.Range\0224\n\026permitted_output_types\030\035 \003("
    "\0162\024.tari.rpc.OutputType\022\024\n\014epoch_length\030"
    "\036 \001(\004\0226\n.validator_node_registration_min"
    "_deposit_amount\030\037 \001(\004\0223\n+validator_node_"
    "registration_min_lock_height\030  \001(\004\022:\n2va"
    "lidator_node_registration_shuffle_interv"
    "al_epoch\030! \001(\004\022C\n\033permitted_range_proof_"
    "types\030\" \003(\0132\036.tari.rpc.PermittedRangePro"
    "ofs\022\026\n\016inflation_bips\030# \001(\004\022\031\n\021tail_epoc"
    "h_length\030$ \001(\004\022 \n\030max_block_coinbase_cou"
    "nt\030% \001(\004\022-\n%vn_registration_max_vns_init"
    "ial_epoch\030& \001(\r\022)\n!vn_registration_max_v"
    "ns_per_epoch\030\' \001(\r\032S\n\020ProofOfWorkEntry\022\013"
    "\n\003key\030\001 \001(\r\022.\n\005value\030\002 \001(\0132\037.tari.rpc.Po"
    "wAlgorithmConstants:\0028\001*s\n\nOutputType\022\014\n"
    "\010STANDARD\020\000\022\014\n\010COINBASE\020\001\022\010\n\004BURN\020\002\022\037\n\033V"
    "ALIDATOR_NODE_REGISTRATION\020\003\022\036\n\032CODE_TEM"
    "PLATE_REGISTRATION\020\004*:\n\016RangeProofType\022\024"
    "\n\020BULLETPROOF_PLUS\020\000\022\022\n\016REVEALED_VALUE\020\001"
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_types_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_types_2eproto = {
    false,
    false,
    2448,
    descriptor_table_protodef_types_2eproto,
    "types.proto",
    &descriptor_table_types_2eproto_once,
    nullptr,
    0,
    13,
    schemas,
    file_default_instances,
    TableStruct_types_2eproto::offsets,
    file_level_enum_descriptors_types_2eproto,
    file_level_service_descriptors_types_2eproto,
};
namespace tari {
namespace rpc {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL OutputType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_types_2eproto);
  return file_level_enum_descriptors_types_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t OutputType_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RangeProofType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_types_2eproto);
  return file_level_enum_descriptors_types_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t RangeProofType_internal_data_[] = {
    131072u, 0u, };
// ===================================================================

class Range::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Range>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Range, _impl_._has_bits_);
};

Range::Range(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Range_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.Range)
}
Range::Range(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Range& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Range_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Range::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Range::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, min_) +
               sizeof(Impl_::max_));
}
Range::~Range() {
  // @@protoc_insertion_point(destructor:tari.rpc.Range)
  SharedDtor(*this);
}
inline void Range::SharedDtor(MessageLite& self) {
  Range& this_ = static_cast<Range&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Range::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Range(arena);
}
constexpr auto Range::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Range),
                                            alignof(Range));
}
constexpr auto Range::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Range_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Range::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Range>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Range::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Range>(), &Range::ByteSizeLong,
              &Range::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Range, _impl_._cached_size_),
          false,
      },
      &Range::kDescriptorMethods,
      &descriptor_table_types_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Range_class_data_ =
        Range::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Range::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Range_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Range_class_data_.tc_table);
  return Range_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
Range::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Range, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Range_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::Range>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 max = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Range, _impl_.max_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Range, _impl_.max_)}},
    // uint64 min = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Range, _impl_.min_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Range, _impl_.min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 min = 1;
    {PROTOBUF_FIELD_OFFSET(Range, _impl_.min_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 max = 2;
    {PROTOBUF_FIELD_OFFSET(Range, _impl_.max_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Range::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.Range)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.min_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_) -
        reinterpret_cast<char*>(&_impl_.min_)) + sizeof(_impl_.max_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Range::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Range& this_ = static_cast<const Range&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Range::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Range& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.Range)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 min = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_min() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_min(), target);
    }
  }

  // uint64 max = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_max() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_max(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.Range)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Range::ByteSizeLong(const MessageLite& base) {
  const Range& this_ = static_cast<const Range&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Range::ByteSizeLong() const {
  const Range& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.Range)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint64 min = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_min() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_min());
      }
    }
    // uint64 max = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_max() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_max());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Range::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Range*>(&to_msg);
  auto& from = static_cast<const Range&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.Range)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_min() != 0) {
        _this->_impl_.min_ = from._impl_.min_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_max() != 0) {
        _this->_impl_.max_ = from._impl_.max_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Range::CopyFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Range::InternalSwap(Range* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Range, _impl_.max_)
      + sizeof(Range::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(Range, _impl_.min_)>(
          reinterpret_cast<char*>(&_impl_.min_),
          reinterpret_cast<char*>(&other->_impl_.min_));
}

::google::protobuf::Metadata Range::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, Empty_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:tari.rpc.Empty)
}
Empty::Empty(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Empty& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, Empty_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Empty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.Empty)
}

inline void* PROTOBUF_NONNULL Empty::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Empty(arena);
}
constexpr auto Empty::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Empty),
                                            alignof(Empty));
}
constexpr auto Empty::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Empty_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Empty::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<Empty>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Empty::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<Empty>(), &Empty::ByteSizeLong,
              &Empty::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Empty, _impl_._cached_size_),
          false,
      },
      &Empty::kDescriptorMethods,
      &descriptor_table_types_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Empty_class_data_ =
        Empty::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Empty::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Empty_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Empty_class_data_.tc_table);
  return Empty_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
Empty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Empty_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::Empty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata Empty::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlockHeight::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BlockHeight>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlockHeight, _impl_._has_bits_);
};

BlockHeight::BlockHeight(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BlockHeight_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.BlockHeight)
}
BlockHeight::BlockHeight(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BlockHeight& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BlockHeight_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE BlockHeight::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void BlockHeight::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.block_height_ = {};
}
BlockHeight::~BlockHeight() {
  // @@protoc_insertion_point(destructor:tari.rpc.BlockHeight)
  SharedDtor(*this);
}
inline void BlockHeight::SharedDtor(MessageLite& self) {
  BlockHeight& this_ = static_cast<BlockHeight&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BlockHeight::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BlockHeight(arena);
}
constexpr auto BlockHeight::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlockHeight),
                                            alignof(BlockHeight));
}
constexpr auto BlockHeight::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BlockHeight_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BlockHeight::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BlockHeight>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BlockHeight::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BlockHeight>(), &BlockHeight::ByteSizeLong,
              &BlockHeight::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BlockHeight, _impl_._cached_size_),
          false,
      },
      &BlockHeight::kDescriptorMethods,
      &descriptor_table_types_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BlockHeight_class_data_ =
        BlockHeight::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BlockHeight::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BlockHeight_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BlockHeight_class_data_.tc_table);
  return BlockHeight_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
BlockHeight::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlockHeight, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BlockHeight_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::BlockHeight>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 block_height = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlockHeight, _impl_.block_height_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(BlockHeight, _impl_.block_height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 block_height = 1;
    {PROTOBUF_FIELD_OFFSET(BlockHeight, _impl_.block_height_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void BlockHeight::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.BlockHeight)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.block_height_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BlockHeight::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BlockHeight& this_ = static_cast<const BlockHeight&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BlockHeight::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BlockHeight& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.BlockHeight)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 block_height = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_block_height() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_block_height(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.BlockHeight)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BlockHeight::ByteSizeLong(const MessageLite& base) {
  const BlockHeight& this_ = static_cast<const BlockHeight&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BlockHeight::ByteSizeLong() const {
  const BlockHeight& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.BlockHeight)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // uint64 block_height = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_block_height() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_block_height());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BlockHeight::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlockHeight*>(&to_msg);
  auto& from = static_cast<const BlockHeight&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.BlockHeight)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_block_height() != 0) {
      _this->_impl_.block_height_ = from._impl_.block_height_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockHeight::CopyFrom(const BlockHeight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.BlockHeight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlockHeight::InternalSwap(BlockHeight* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.block_height_, other->_impl_.block_height_);
}

::google::protobuf::Metadata BlockHeight::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Signature::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Signature>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Signature, _impl_._has_bits_);
};

Signature::Signature(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Signature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.Signature)
}
PROTOBUF_NDEBUG_INLINE Signature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::Signature& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        public_nonce_(arena, from.public_nonce_),
        signature_(arena, from.signature_) {}

Signature::Signature(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Signature& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Signature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Signature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.Signature)
}
PROTOBUF_NDEBUG_INLINE Signature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        public_nonce_(arena),
        signature_(arena) {}

inline void Signature::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Signature::~Signature() {
  // @@protoc_insertion_point(destructor:tari.rpc.Signature)
  SharedDtor(*this);
}
inline void Signature::SharedDtor(MessageLite& self) {
  Signature& this_ = static_cast<Signature&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.public_nonce_.Destroy();
  this_._impl_.signature_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Signature::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Signature(arena);
}
constexpr auto Signature::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Signature),
                                            alignof(Signature));
}
constexpr auto Signature::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Signature_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Signature::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Signature>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Signature::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Signature>(), &Signature::ByteSizeLong,
              &Signature::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Signature, _impl_._cached_size_),
          false,
      },
      &Signature::kDescriptorMethods,
      &descriptor_table_types_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Signature_class_data_ =
        Signature::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Signature::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Signature_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Signature_class_data_.tc_table);
  return Signature_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
Signature::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Signature, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Signature_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::Signature>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes signature = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Signature, _impl_.signature_)}},
    // bytes public_nonce = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Signature, _impl_.public_nonce_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes public_nonce = 1;
    {PROTOBUF_FIELD_OFFSET(Signature, _impl_.public_nonce_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes signature = 2;
    {PROTOBUF_FIELD_OFFSET(Signature, _impl_.signature_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Signature::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.Signature)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.public_nonce_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.signature_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Signature::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Signature& this_ = static_cast<const Signature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Signature::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Signature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.Signature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes public_nonce = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_public_nonce().empty()) {
      const ::std::string& _s = this_._internal_public_nonce();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // bytes signature = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_signature().empty()) {
      const ::std::string& _s = this_._internal_signature();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.Signature)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Signature::ByteSizeLong(const MessageLite& base) {
  const Signature& this_ = static_cast<const Signature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Signature::ByteSizeLong() const {
  const Signature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.Signature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // bytes public_nonce = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_public_nonce().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_public_nonce());
      }
    }
    // bytes signature = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_signature().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_signature());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Signature::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Signature*>(&to_msg);
  auto& from = static_cast<const Signature&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.Signature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_public_nonce().empty()) {
        _this->_internal_set_public_nonce(from._internal_public_nonce());
      } else {
        if (_this->_impl_.public_nonce_.IsDefault()) {
          _this->_internal_set_public_nonce("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_signature().empty()) {
        _this->_internal_set_signature(from._internal_signature());
      } else {
        if (_this->_impl_.signature_.IsDefault()) {
          _this->_internal_set_signature("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Signature::CopyFrom(const Signature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.Signature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Signature::InternalSwap(Signature* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.public_nonce_, &other->_impl_.public_nonce_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, &other->_impl_.signature_, arena);
}

::google::protobuf::Metadata Signature::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ComAndPubSignature::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ComAndPubSignature>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ComAndPubSignature, _impl_._has_bits_);
};

ComAndPubSignature::ComAndPubSignature(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ComAndPubSignature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.ComAndPubSignature)
}
PROTOBUF_NDEBUG_INLINE ComAndPubSignature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::ComAndPubSignature& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ephemeral_commitment_(arena, from.ephemeral_commitment_),
        ephemeral_pubkey_(arena, from.ephemeral_pubkey_),
        u_a_(arena, from.u_a_),
        u_x_(arena, from.u_x_),
        u_y_(arena, from.u_y_) {}

ComAndPubSignature::ComAndPubSignature(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ComAndPubSignature& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ComAndPubSignature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ComAndPubSignature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.ComAndPubSignature)
}
PROTOBUF_NDEBUG_INLINE ComAndPubSignature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        ephemeral_commitment_(arena),
        ephemeral_pubkey_(arena),
        u_a_(arena),
        u_x_(arena),
        u_y_(arena) {}

inline void ComAndPubSignature::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ComAndPubSignature::~ComAndPubSignature() {
  // @@protoc_insertion_point(destructor:tari.rpc.ComAndPubSignature)
  SharedDtor(*this);
}
inline void ComAndPubSignature::SharedDtor(MessageLite& self) {
  ComAndPubSignature& this_ = static_cast<ComAndPubSignature&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.ephemeral_commitment_.Destroy();
  this_._impl_.ephemeral_pubkey_.Destroy();
  this_._impl_.u_a_.Destroy();
  this_._impl_.u_x_.Destroy();
  this_._impl_.u_y_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ComAndPubSignature::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ComAndPubSignature(arena);
}
constexpr auto ComAndPubSignature::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ComAndPubSignature),
                                            alignof(ComAndPubSignature));
}
constexpr auto ComAndPubSignature::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ComAndPubSignature_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ComAndPubSignature::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ComAndPubSignature>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ComAndPubSignature::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ComAndPubSignature>(), &ComAndPubSignature::ByteSizeLong,
              &ComAndPubSignature::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ComAndPubSignature, _impl_._cached_size_),
          false,
      },
      &ComAndPubSignature::kDescriptorMethods,
      &descriptor_table_types_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ComAndPubSignature_class_data_ =
        ComAndPubSignature::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ComAndPubSignature::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ComAndPubSignature_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ComAndPubSignature_class_data_.tc_table);
  return ComAndPubSignature_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
ComAndPubSignature::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ComAndPubSignature, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ComAndPubSignature_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::ComAndPubSignature>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes ephemeral_commitment = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ComAndPubSignature, _impl_.ephemeral_commitment_)}},
    // bytes ephemeral_pubkey = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ComAndPubSignature, _impl_.ephemeral_pubkey_)}},
    // bytes u_a = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(ComAndPubSignature, _impl_.u_a_)}},
    // bytes u_x = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(ComAndPubSignature, _impl_.u_x_)}},
    // bytes u_y = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(ComAndPubSignature, _impl_.u_y_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes ephemeral_commitment = 1;
    {PROTOBUF_FIELD_OFFSET(ComAndPubSignature, _impl_.ephemeral_commitment_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes ephemeral_pubkey = 2;
    {PROTOBUF_FIELD_OFFSET(ComAndPubSignature, _impl_.ephemeral_pubkey_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes u_a = 3;
    {PROTOBUF_FIELD_OFFSET(ComAndPubSignature, _impl_.u_a_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes u_x = 4;
    {PROTOBUF_FIELD_OFFSET(ComAndPubSignature, _impl_.u_x_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes u_y = 5;
    {PROTOBUF_FIELD_OFFSET(ComAndPubSignature, _impl_.u_y_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ComAndPubSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.ComAndPubSignature)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.ephemeral_commitment_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.ephemeral_pubkey_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.u_a_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.u_x_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.u_y_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ComAndPubSignature::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ComAndPubSignature& this_ = static_cast<const ComAndPubSignature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ComAndPubSignature::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ComAndPubSignature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.ComAndPubSignature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes ephemeral_commitment = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_ephemeral_commitment().empty()) {
      const ::std::string& _s = this_._internal_ephemeral_commitment();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // bytes ephemeral_pubkey = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_ephemeral_pubkey().empty()) {
      const ::std::string& _s = this_._internal_ephemeral_pubkey();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // bytes u_a = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_u_a().empty()) {
      const ::std::string& _s = this_._internal_u_a();
      target = stream->WriteBytesMaybeAliased(3, _s, target);
    }
  }

  // bytes u_x = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_u_x().empty()) {
      const ::std::string& _s = this_._internal_u_x();
      target = stream->WriteBytesMaybeAliased(4, _s, target);
    }
  }

  // bytes u_y = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._internal_u_y().empty()) {
      const ::std::string& _s = this_._internal_u_y();
      target = stream->WriteBytesMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.ComAndPubSignature)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ComAndPubSignature::ByteSizeLong(const MessageLite& base) {
  const ComAndPubSignature& this_ = static_cast<const ComAndPubSignature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ComAndPubSignature::ByteSizeLong() const {
  const ComAndPubSignature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.ComAndPubSignature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // bytes ephemeral_commitment = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_ephemeral_commitment().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_ephemeral_commitment());
      }
    }
    // bytes ephemeral_pubkey = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_ephemeral_pubkey().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_ephemeral_pubkey());
      }
    }
    // bytes u_a = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_u_a().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_u_a());
      }
    }
    // bytes u_x = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_u_x().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_u_x());
      }
    }
    // bytes u_y = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_u_y().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_u_y());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ComAndPubSignature::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ComAndPubSignature*>(&to_msg);
  auto& from = static_cast<const ComAndPubSignature&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.ComAndPubSignature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_ephemeral_commitment().empty()) {
        _this->_internal_set_ephemeral_commitment(from._internal_ephemeral_commitment());
      } else {
        if (_this->_impl_.ephemeral_commitment_.IsDefault()) {
          _this->_internal_set_ephemeral_commitment("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_ephemeral_pubkey().empty()) {
        _this->_internal_set_ephemeral_pubkey(from._internal_ephemeral_pubkey());
      } else {
        if (_this->_impl_.ephemeral_pubkey_.IsDefault()) {
          _this->_internal_set_ephemeral_pubkey("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_u_a().empty()) {
        _this->_internal_set_u_a(from._internal_u_a());
      } else {
        if (_this->_impl_.u_a_.IsDefault()) {
          _this->_internal_set_u_a("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_u_x().empty()) {
        _this->_internal_set_u_x(from._internal_u_x());
      } else {
        if (_this->_impl_.u_x_.IsDefault()) {
          _this->_internal_set_u_x("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_u_y().empty()) {
        _this->_internal_set_u_y(from._internal_u_y());
      } else {
        if (_this->_impl_.u_y_.IsDefault()) {
          _this->_internal_set_u_y("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ComAndPubSignature::CopyFrom(const ComAndPubSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.ComAndPubSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ComAndPubSignature::InternalSwap(ComAndPubSignature* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ephemeral_commitment_, &other->_impl_.ephemeral_commitment_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ephemeral_pubkey_, &other->_impl_.ephemeral_pubkey_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.u_a_, &other->_impl_.u_a_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.u_x_, &other->_impl_.u_x_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.u_y_, &other->_impl_.u_y_, arena);
}

::google::protobuf::Metadata ComAndPubSignature::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommitmentSignature::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CommitmentSignature>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CommitmentSignature, _impl_._has_bits_);
};

CommitmentSignature::CommitmentSignature(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CommitmentSignature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.CommitmentSignature)
}
PROTOBUF_NDEBUG_INLINE CommitmentSignature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::CommitmentSignature& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        public_nonce_(arena, from.public_nonce_),
        u_(arena, from.u_),
        v_(arena, from.v_) {}

CommitmentSignature::CommitmentSignature(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CommitmentSignature& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CommitmentSignature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CommitmentSignature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.CommitmentSignature)
}
PROTOBUF_NDEBUG_INLINE CommitmentSignature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        public_nonce_(arena),
        u_(arena),
        v_(arena) {}

inline void CommitmentSignature::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CommitmentSignature::~CommitmentSignature() {
  // @@protoc_insertion_point(destructor:tari.rpc.CommitmentSignature)
  SharedDtor(*this);
}
inline void CommitmentSignature::SharedDtor(MessageLite& self) {
  CommitmentSignature& this_ = static_cast<CommitmentSignature&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.public_nonce_.Destroy();
  this_._impl_.u_.Destroy();
  this_._impl_.v_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CommitmentSignature::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CommitmentSignature(arena);
}
constexpr auto CommitmentSignature::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CommitmentSignature),
                                            alignof(CommitmentSignature));
}
constexpr auto CommitmentSignature::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CommitmentSignature_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CommitmentSignature::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CommitmentSignature>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CommitmentSignature::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CommitmentSignature>(), &CommitmentSignature::ByteSizeLong,
              &CommitmentSignature::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CommitmentSignature, _impl_._cached_size_),
          false,
      },
      &CommitmentSignature::kDescriptorMethods,
      &descriptor_table_types_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CommitmentSignature_class_data_ =
        CommitmentSignature::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CommitmentSignature::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CommitmentSignature_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CommitmentSignature_class_data_.tc_table);
  return CommitmentSignature_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
CommitmentSignature::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CommitmentSignature, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CommitmentSignature_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::CommitmentSignature>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes public_nonce = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CommitmentSignature, _impl_.public_nonce_)}},
    // bytes u = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CommitmentSignature, _impl_.u_)}},
    // bytes v = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CommitmentSignature, _impl_.v_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes public_nonce = 1;
    {PROTOBUF_FIELD_OFFSET(CommitmentSignature, _impl_.public_nonce_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes u = 2;
    {PROTOBUF_FIELD_OFFSET(CommitmentSignature, _impl_.u_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes v = 3;
    {PROTOBUF_FIELD_OFFSET(CommitmentSignature, _impl_.v_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CommitmentSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.CommitmentSignature)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.public_nonce_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.u_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.v_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CommitmentSignature::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CommitmentSignature& this_ = static_cast<const CommitmentSignature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CommitmentSignature::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CommitmentSignature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.CommitmentSignature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes public_nonce = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_public_nonce().empty()) {
      const ::std::string& _s = this_._internal_public_nonce();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // bytes u = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_u().empty()) {
      const ::std::string& _s = this_._internal_u();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // bytes v = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_v().empty()) {
      const ::std::string& _s = this_._internal_v();
      target = stream->WriteBytesMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.CommitmentSignature)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CommitmentSignature::ByteSizeLong(const MessageLite& base) {
  const CommitmentSignature& this_ = static_cast<const CommitmentSignature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CommitmentSignature::ByteSizeLong() const {
  const CommitmentSignature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.CommitmentSignature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // bytes public_nonce = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_public_nonce().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_public_nonce());
      }
    }
    // bytes u = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_u().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_u());
      }
    }
    // bytes v = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_v().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_v());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CommitmentSignature::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommitmentSignature*>(&to_msg);
  auto& from = static_cast<const CommitmentSignature&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.CommitmentSignature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_public_nonce().empty()) {
        _this->_internal_set_public_nonce(from._internal_public_nonce());
      } else {
        if (_this->_impl_.public_nonce_.IsDefault()) {
          _this->_internal_set_public_nonce("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_u().empty()) {
        _this->_internal_set_u(from._internal_u());
      } else {
        if (_this->_impl_.u_.IsDefault()) {
          _this->_internal_set_u("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_v().empty()) {
        _this->_internal_set_v(from._internal_v());
      } else {
        if (_this->_impl_.v_.IsDefault()) {
          _this->_internal_set_v("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommitmentSignature::CopyFrom(const CommitmentSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.CommitmentSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommitmentSignature::InternalSwap(CommitmentSignature* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.public_nonce_, &other->_impl_.public_nonce_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.u_, &other->_impl_.u_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.v_, &other->_impl_.v_, arena);
}

::google::protobuf::Metadata CommitmentSignature::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PowAlgorithmConstants::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PowAlgorithmConstants>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PowAlgorithmConstants, _impl_._has_bits_);
};

PowAlgorithmConstants::PowAlgorithmConstants(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PowAlgorithmConstants_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.PowAlgorithmConstants)
}
PowAlgorithmConstants::PowAlgorithmConstants(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PowAlgorithmConstants& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PowAlgorithmConstants_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PowAlgorithmConstants::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PowAlgorithmConstants::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_difficulty_),
           0,
           offsetof(Impl_, target_time_) -
               offsetof(Impl_, min_difficulty_) +
               sizeof(Impl_::target_time_));
}
PowAlgorithmConstants::~PowAlgorithmConstants() {
  // @@protoc_insertion_point(destructor:tari.rpc.PowAlgorithmConstants)
  SharedDtor(*this);
}
inline void PowAlgorithmConstants::SharedDtor(MessageLite& self) {
  PowAlgorithmConstants& this_ = static_cast<PowAlgorithmConstants&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PowAlgorithmConstants::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PowAlgorithmConstants(arena);
}
constexpr auto PowAlgorithmConstants::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PowAlgorithmConstants),
                                            alignof(PowAlgorithmConstants));
}
constexpr auto PowAlgorithmConstants::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PowAlgorithmConstants_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PowAlgorithmConstants::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PowAlgorithmConstants>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PowAlgorithmConstants::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PowAlgorithmConstants>(), &PowAlgorithmConstants::ByteSizeLong,
              &PowAlgorithmConstants::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PowAlgorithmConstants, _impl_._cached_size_),
          false,
      },
      &PowAlgorithmConstants::kDescriptorMethods,
      &descriptor_table_types_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PowAlgorithmConstants_class_data_ =
        PowAlgorithmConstants::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PowAlgorithmConstants::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PowAlgorithmConstants_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PowAlgorithmConstants_class_data_.tc_table);
  return PowAlgorithmConstants_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
PowAlgorithmConstants::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PowAlgorithmConstants, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967281,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PowAlgorithmConstants_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::PowAlgorithmConstants>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 target_time = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PowAlgorithmConstants, _impl_.target_time_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(PowAlgorithmConstants, _impl_.target_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 min_difficulty = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PowAlgorithmConstants, _impl_.min_difficulty_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(PowAlgorithmConstants, _impl_.min_difficulty_)}},
    // uint64 max_difficulty = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PowAlgorithmConstants, _impl_.max_difficulty_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(PowAlgorithmConstants, _impl_.max_difficulty_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 min_difficulty = 2;
    {PROTOBUF_FIELD_OFFSET(PowAlgorithmConstants, _impl_.min_difficulty_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 max_difficulty = 3;
    {PROTOBUF_FIELD_OFFSET(PowAlgorithmConstants, _impl_.max_difficulty_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 target_time = 4;
    {PROTOBUF_FIELD_OFFSET(PowAlgorithmConstants, _impl_.target_time_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PowAlgorithmConstants::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.PowAlgorithmConstants)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.min_difficulty_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.target_time_) -
        reinterpret_cast<char*>(&_impl_.min_difficulty_)) + sizeof(_impl_.target_time_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PowAlgorithmConstants::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PowAlgorithmConstants& this_ = static_cast<const PowAlgorithmConstants&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PowAlgorithmConstants::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PowAlgorithmConstants& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.PowAlgorithmConstants)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 min_difficulty = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_min_difficulty() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_min_difficulty(), target);
    }
  }

  // uint64 max_difficulty = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_max_difficulty() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          3, this_._internal_max_difficulty(), target);
    }
  }

  // uint64 target_time = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_target_time() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          4, this_._internal_target_time(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.PowAlgorithmConstants)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PowAlgorithmConstants::ByteSizeLong(const MessageLite& base) {
  const PowAlgorithmConstants& this_ = static_cast<const PowAlgorithmConstants&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PowAlgorithmConstants::ByteSizeLong() const {
  const PowAlgorithmConstants& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.PowAlgorithmConstants)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // uint64 min_difficulty = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_min_difficulty() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_min_difficulty());
      }
    }
    // uint64 max_difficulty = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_max_difficulty() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_max_difficulty());
      }
    }
    // uint64 target_time = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_target_time() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_target_time());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PowAlgorithmConstants::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PowAlgorithmConstants*>(&to_msg);
  auto& from = static_cast<const PowAlgorithmConstants&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.PowAlgorithmConstants)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_min_difficulty() != 0) {
        _this->_impl_.min_difficulty_ = from._impl_.min_difficulty_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_max_difficulty() != 0) {
        _this->_impl_.max_difficulty_ = from._impl_.max_difficulty_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_target_time() != 0) {
        _this->_impl_.target_time_ = from._impl_.target_time_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PowAlgorithmConstants::CopyFrom(const PowAlgorithmConstants& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.PowAlgorithmConstants)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PowAlgorithmConstants::InternalSwap(PowAlgorithmConstants* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PowAlgorithmConstants, _impl_.target_time_)
      + sizeof(PowAlgorithmConstants::_impl_.target_time_)
      - PROTOBUF_FIELD_OFFSET(PowAlgorithmConstants, _impl_.min_difficulty_)>(
          reinterpret_cast<char*>(&_impl_.min_difficulty_),
          reinterpret_cast<char*>(&other->_impl_.min_difficulty_));
}

::google::protobuf::Metadata PowAlgorithmConstants::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WeightParams::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<WeightParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WeightParams, _impl_._has_bits_);
};

WeightParams::WeightParams(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WeightParams_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.WeightParams)
}
WeightParams::WeightParams(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WeightParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WeightParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE WeightParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void WeightParams::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, kernel_weight_),
           0,
           offsetof(Impl_, features_and_scripts_bytes_per_gram_) -
               offsetof(Impl_, kernel_weight_) +
               sizeof(Impl_::features_and_scripts_bytes_per_gram_));
}
WeightParams::~WeightParams() {
  // @@protoc_insertion_point(destructor:tari.rpc.WeightParams)
  SharedDtor(*this);
}
inline void WeightParams::SharedDtor(MessageLite& self) {
  WeightParams& this_ = static_cast<WeightParams&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WeightParams::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WeightParams(arena);
}
constexpr auto WeightParams::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WeightParams),
                                            alignof(WeightParams));
}
constexpr auto WeightParams::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WeightParams_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WeightParams::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WeightParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WeightParams::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WeightParams>(), &WeightParams::ByteSizeLong,
              &WeightParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WeightParams, _impl_._cached_size_),
          false,
      },
      &WeightParams::kDescriptorMethods,
      &descriptor_table_types_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WeightParams_class_data_ =
        WeightParams::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WeightParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WeightParams_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WeightParams_class_data_.tc_table);
  return WeightParams_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
WeightParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WeightParams, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    WeightParams_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::WeightParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 features_and_scripts_bytes_per_gram = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WeightParams, _impl_.features_and_scripts_bytes_per_gram_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(WeightParams, _impl_.features_and_scripts_bytes_per_gram_)}},
    // uint64 kernel_weight = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WeightParams, _impl_.kernel_weight_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(WeightParams, _impl_.kernel_weight_)}},
    // uint64 input_weight = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WeightParams, _impl_.input_weight_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(WeightParams, _impl_.input_weight_)}},
    // uint64 output_weight = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WeightParams, _impl_.output_weight_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(WeightParams, _impl_.output_weight_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 kernel_weight = 1;
    {PROTOBUF_FIELD_OFFSET(WeightParams, _impl_.kernel_weight_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 input_weight = 2;
    {PROTOBUF_FIELD_OFFSET(WeightParams, _impl_.input_weight_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 output_weight = 3;
    {PROTOBUF_FIELD_OFFSET(WeightParams, _impl_.output_weight_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 features_and_scripts_bytes_per_gram = 4;
    {PROTOBUF_FIELD_OFFSET(WeightParams, _impl_.features_and_scripts_bytes_per_gram_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void WeightParams::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.WeightParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.kernel_weight_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.features_and_scripts_bytes_per_gram_) -
        reinterpret_cast<char*>(&_impl_.kernel_weight_)) + sizeof(_impl_.features_and_scripts_bytes_per_gram_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WeightParams::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WeightParams& this_ = static_cast<const WeightParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WeightParams::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WeightParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.WeightParams)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 kernel_weight = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_kernel_weight() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_kernel_weight(), target);
    }
  }

  // uint64 input_weight = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_input_weight() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_input_weight(), target);
    }
  }

  // uint64 output_weight = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_output_weight() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          3, this_._internal_output_weight(), target);
    }
  }

  // uint64 features_and_scripts_bytes_per_gram = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_features_and_scripts_bytes_per_gram() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          4, this_._internal_features_and_scripts_bytes_per_gram(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.WeightParams)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WeightParams::ByteSizeLong(const MessageLite& base) {
  const WeightParams& this_ = static_cast<const WeightParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WeightParams::ByteSizeLong() const {
  const WeightParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.WeightParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // uint64 kernel_weight = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_kernel_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_kernel_weight());
      }
    }
    // uint64 input_weight = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_input_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_input_weight());
      }
    }
    // uint64 output_weight = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_output_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_output_weight());
      }
    }
    // uint64 features_and_scripts_bytes_per_gram = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_features_and_scripts_bytes_per_gram() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_features_and_scripts_bytes_per_gram());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WeightParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WeightParams*>(&to_msg);
  auto& from = static_cast<const WeightParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.WeightParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_kernel_weight() != 0) {
        _this->_impl_.kernel_weight_ = from._impl_.kernel_weight_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_input_weight() != 0) {
        _this->_impl_.input_weight_ = from._impl_.input_weight_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_output_weight() != 0) {
        _this->_impl_.output_weight_ = from._impl_.output_weight_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_features_and_scripts_bytes_per_gram() != 0) {
        _this->_impl_.features_and_scripts_bytes_per_gram_ = from._impl_.features_and_scripts_bytes_per_gram_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WeightParams::CopyFrom(const WeightParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.WeightParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WeightParams::InternalSwap(WeightParams* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WeightParams, _impl_.features_and_scripts_bytes_per_gram_)
      + sizeof(WeightParams::_impl_.features_and_scripts_bytes_per_gram_)
      - PROTOBUF_FIELD_OFFSET(WeightParams, _impl_.kernel_weight_)>(
          reinterpret_cast<char*>(&_impl_.kernel_weight_),
          reinterpret_cast<char*>(&other->_impl_.kernel_weight_));
}

::google::protobuf::Metadata WeightParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OutputsVersion::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OutputsVersion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OutputsVersion, _impl_._has_bits_);
};

OutputsVersion::OutputsVersion(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OutputsVersion_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.OutputsVersion)
}
PROTOBUF_NDEBUG_INLINE OutputsVersion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::OutputsVersion& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

OutputsVersion::OutputsVersion(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OutputsVersion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OutputsVersion_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OutputsVersion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.outputs_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.outputs_)
                : nullptr;
  _impl_.features_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.features_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.OutputsVersion)
}
PROTOBUF_NDEBUG_INLINE OutputsVersion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void OutputsVersion::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, outputs_),
           0,
           offsetof(Impl_, features_) -
               offsetof(Impl_, outputs_) +
               sizeof(Impl_::features_));
}
OutputsVersion::~OutputsVersion() {
  // @@protoc_insertion_point(destructor:tari.rpc.OutputsVersion)
  SharedDtor(*this);
}
inline void OutputsVersion::SharedDtor(MessageLite& self) {
  OutputsVersion& this_ = static_cast<OutputsVersion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.outputs_;
  delete this_._impl_.features_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OutputsVersion::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OutputsVersion(arena);
}
constexpr auto OutputsVersion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OutputsVersion),
                                            alignof(OutputsVersion));
}
constexpr auto OutputsVersion::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OutputsVersion_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OutputsVersion::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OutputsVersion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OutputsVersion::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OutputsVersion>(), &OutputsVersion::ByteSizeLong,
              &OutputsVersion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OutputsVersion, _impl_._cached_size_),
          false,
      },
      &OutputsVersion::kDescriptorMethods,
      &descriptor_table_types_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OutputsVersion_class_data_ =
        OutputsVersion::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OutputsVersion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OutputsVersion_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OutputsVersion_class_data_.tc_table);
  return OutputsVersion_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
OutputsVersion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OutputsVersion, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OutputsVersion_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::OutputsVersion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tari.rpc.Range features = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(OutputsVersion, _impl_.features_)}},
    // .tari.rpc.Range outputs = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OutputsVersion, _impl_.outputs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tari.rpc.Range outputs = 1;
    {PROTOBUF_FIELD_OFFSET(OutputsVersion, _impl_.outputs_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.Range features = 2;
    {PROTOBUF_FIELD_OFFSET(OutputsVersion, _impl_.features_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::Range>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::Range>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void OutputsVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.OutputsVersion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.outputs_ != nullptr);
      _impl_.outputs_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.features_ != nullptr);
      _impl_.features_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OutputsVersion::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OutputsVersion& this_ = static_cast<const OutputsVersion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OutputsVersion::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OutputsVersion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.OutputsVersion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.Range outputs = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.outputs_, this_._impl_.outputs_->GetCachedSize(), target,
        stream);
  }

  // .tari.rpc.Range features = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.features_, this_._impl_.features_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.OutputsVersion)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OutputsVersion::ByteSizeLong(const MessageLite& base) {
  const OutputsVersion& this_ = static_cast<const OutputsVersion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OutputsVersion::ByteSizeLong() const {
  const OutputsVersion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.OutputsVersion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .tari.rpc.Range outputs = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.outputs_);
    }
    // .tari.rpc.Range features = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.features_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OutputsVersion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OutputsVersion*>(&to_msg);
  auto& from = static_cast<const OutputsVersion&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.OutputsVersion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.outputs_ != nullptr);
      if (_this->_impl_.outputs_ == nullptr) {
        _this->_impl_.outputs_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.outputs_);
      } else {
        _this->_impl_.outputs_->MergeFrom(*from._impl_.outputs_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.features_ != nullptr);
      if (_this->_impl_.features_ == nullptr) {
        _this->_impl_.features_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.features_);
      } else {
        _this->_impl_.features_->MergeFrom(*from._impl_.features_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OutputsVersion::CopyFrom(const OutputsVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.OutputsVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OutputsVersion::InternalSwap(OutputsVersion* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OutputsVersion, _impl_.features_)
      + sizeof(OutputsVersion::_impl_.features_)
      - PROTOBUF_FIELD_OFFSET(OutputsVersion, _impl_.outputs_)>(
          reinterpret_cast<char*>(&_impl_.outputs_),
          reinterpret_cast<char*>(&other->_impl_.outputs_));
}

::google::protobuf::Metadata OutputsVersion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PermittedRangeProofs::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PermittedRangeProofs>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PermittedRangeProofs, _impl_._has_bits_);
};

PermittedRangeProofs::PermittedRangeProofs(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PermittedRangeProofs_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.PermittedRangeProofs)
}
PROTOBUF_NDEBUG_INLINE PermittedRangeProofs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::PermittedRangeProofs& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        range_proof_types_{visibility, arena, from.range_proof_types_},
        _range_proof_types_cached_byte_size_{0} {}

PermittedRangeProofs::PermittedRangeProofs(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PermittedRangeProofs& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PermittedRangeProofs_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PermittedRangeProofs* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.output_type_ = from._impl_.output_type_;

  // @@protoc_insertion_point(copy_constructor:tari.rpc.PermittedRangeProofs)
}
PROTOBUF_NDEBUG_INLINE PermittedRangeProofs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        range_proof_types_{visibility, arena},
        _range_proof_types_cached_byte_size_{0} {}

inline void PermittedRangeProofs::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.output_type_ = {};
}
PermittedRangeProofs::~PermittedRangeProofs() {
  // @@protoc_insertion_point(destructor:tari.rpc.PermittedRangeProofs)
  SharedDtor(*this);
}
inline void PermittedRangeProofs::SharedDtor(MessageLite& self) {
  PermittedRangeProofs& this_ = static_cast<PermittedRangeProofs&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PermittedRangeProofs::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PermittedRangeProofs(arena);
}
constexpr auto PermittedRangeProofs::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PermittedRangeProofs, _impl_.range_proof_types_) +
          decltype(PermittedRangeProofs::_impl_.range_proof_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PermittedRangeProofs), alignof(PermittedRangeProofs), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PermittedRangeProofs::PlacementNew_,
                                 sizeof(PermittedRangeProofs),
                                 alignof(PermittedRangeProofs));
  }
}
constexpr auto PermittedRangeProofs::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PermittedRangeProofs_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PermittedRangeProofs::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PermittedRangeProofs>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PermittedRangeProofs::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PermittedRangeProofs>(), &PermittedRangeProofs::ByteSizeLong,
              &PermittedRangeProofs::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PermittedRangeProofs, _impl_._cached_size_),
          false,
      },
      &PermittedRangeProofs::kDescriptorMethods,
      &descriptor_table_types_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PermittedRangeProofs_class_data_ =
        PermittedRangeProofs::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PermittedRangeProofs::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PermittedRangeProofs_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PermittedRangeProofs_class_data_.tc_table);
  return PermittedRangeProofs_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
PermittedRangeProofs::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PermittedRangeProofs, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PermittedRangeProofs_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::PermittedRangeProofs>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tari.rpc.RangeProofType range_proof_types = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PermittedRangeProofs, _impl_.range_proof_types_)}},
    // .tari.rpc.OutputType output_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PermittedRangeProofs, _impl_.output_type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PermittedRangeProofs, _impl_.output_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tari.rpc.OutputType output_type = 1;
    {PROTOBUF_FIELD_OFFSET(PermittedRangeProofs, _impl_.output_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .tari.rpc.RangeProofType range_proof_types = 2;
    {PROTOBUF_FIELD_OFFSET(PermittedRangeProofs, _impl_.range_proof_types_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PermittedRangeProofs::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.PermittedRangeProofs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.range_proof_types_.Clear();
  _impl_.output_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PermittedRangeProofs::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PermittedRangeProofs& this_ = static_cast<const PermittedRangeProofs&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PermittedRangeProofs::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PermittedRangeProofs& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.PermittedRangeProofs)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .tari.rpc.OutputType output_type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_output_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_output_type(), target);
    }
  }

  // repeated .tari.rpc.RangeProofType range_proof_types = 2;
  {
    ::size_t byte_size = this_._impl_._range_proof_types_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, this_._internal_range_proof_types(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.PermittedRangeProofs)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PermittedRangeProofs::ByteSizeLong(const MessageLite& base) {
  const PermittedRangeProofs& this_ = static_cast<const PermittedRangeProofs&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PermittedRangeProofs::ByteSizeLong() const {
  const PermittedRangeProofs& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.PermittedRangeProofs)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .tari.rpc.RangeProofType range_proof_types = 2;
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_range_proof_types(), 1, this_._impl_._range_proof_types_cached_byte_size_);
    }
  }
   {
    // .tari.rpc.OutputType output_type = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_output_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_output_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PermittedRangeProofs::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PermittedRangeProofs*>(&to_msg);
  auto& from = static_cast<const PermittedRangeProofs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.PermittedRangeProofs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_range_proof_types()->MergeFrom(from._internal_range_proof_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_output_type() != 0) {
      _this->_impl_.output_type_ = from._impl_.output_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PermittedRangeProofs::CopyFrom(const PermittedRangeProofs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.PermittedRangeProofs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PermittedRangeProofs::InternalSwap(PermittedRangeProofs* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.range_proof_types_.InternalSwap(&other->_impl_.range_proof_types_);
  swap(_impl_.output_type_, other->_impl_.output_type_);
}

::google::protobuf::Metadata PermittedRangeProofs::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RangeProof::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RangeProof>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RangeProof, _impl_._has_bits_);
};

RangeProof::RangeProof(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RangeProof_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.RangeProof)
}
PROTOBUF_NDEBUG_INLINE RangeProof::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::RangeProof& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        proof_bytes_(arena, from.proof_bytes_) {}

RangeProof::RangeProof(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RangeProof& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RangeProof_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RangeProof* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tari.rpc.RangeProof)
}
PROTOBUF_NDEBUG_INLINE RangeProof::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        proof_bytes_(arena) {}

inline void RangeProof::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RangeProof::~RangeProof() {
  // @@protoc_insertion_point(destructor:tari.rpc.RangeProof)
  SharedDtor(*this);
}
inline void RangeProof::SharedDtor(MessageLite& self) {
  RangeProof& this_ = static_cast<RangeProof&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.proof_bytes_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RangeProof::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RangeProof(arena);
}
constexpr auto RangeProof::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RangeProof),
                                            alignof(RangeProof));
}
constexpr auto RangeProof::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RangeProof_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RangeProof::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RangeProof>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RangeProof::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RangeProof>(), &RangeProof::ByteSizeLong,
              &RangeProof::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RangeProof, _impl_._cached_size_),
          false,
      },
      &RangeProof::kDescriptorMethods,
      &descriptor_table_types_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RangeProof_class_data_ =
        RangeProof::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RangeProof::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RangeProof_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RangeProof_class_data_.tc_table);
  return RangeProof_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
RangeProof::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RangeProof, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RangeProof_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::RangeProof>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes proof_bytes = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RangeProof, _impl_.proof_bytes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes proof_bytes = 1;
    {PROTOBUF_FIELD_OFFSET(RangeProof, _impl_.proof_bytes_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void RangeProof::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.RangeProof)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.proof_bytes_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RangeProof::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RangeProof& this_ = static_cast<const RangeProof&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RangeProof::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RangeProof& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.RangeProof)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes proof_bytes = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_proof_bytes().empty()) {
      const ::std::string& _s = this_._internal_proof_bytes();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.RangeProof)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RangeProof::ByteSizeLong(const MessageLite& base) {
  const RangeProof& this_ = static_cast<const RangeProof&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RangeProof::ByteSizeLong() const {
  const RangeProof& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.RangeProof)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // bytes proof_bytes = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_proof_bytes().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_proof_bytes());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RangeProof::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RangeProof*>(&to_msg);
  auto& from = static_cast<const RangeProof&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.RangeProof)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_proof_bytes().empty()) {
      _this->_internal_set_proof_bytes(from._internal_proof_bytes());
    } else {
      if (_this->_impl_.proof_bytes_.IsDefault()) {
        _this->_internal_set_proof_bytes("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RangeProof::CopyFrom(const RangeProof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.RangeProof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RangeProof::InternalSwap(RangeProof* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proof_bytes_, &other->_impl_.proof_bytes_, arena);
}

::google::protobuf::Metadata RangeProof::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
ConsensusConstants_ProofOfWorkEntry_DoNotUse::ConsensusConstants_ProofOfWorkEntry_DoNotUse()
    : SuperType(ConsensusConstants_ProofOfWorkEntry_DoNotUse_class_data_.base()) {}
ConsensusConstants_ProofOfWorkEntry_DoNotUse::ConsensusConstants_ProofOfWorkEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, ConsensusConstants_ProofOfWorkEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
ConsensusConstants_ProofOfWorkEntry_DoNotUse::ConsensusConstants_ProofOfWorkEntry_DoNotUse() : SuperType() {}
ConsensusConstants_ProofOfWorkEntry_DoNotUse::ConsensusConstants_ProofOfWorkEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL ConsensusConstants_ProofOfWorkEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConsensusConstants_ProofOfWorkEntry_DoNotUse(arena);
}
constexpr auto ConsensusConstants_ProofOfWorkEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ConsensusConstants_ProofOfWorkEntry_DoNotUse),
                                            alignof(ConsensusConstants_ProofOfWorkEntry_DoNotUse));
}
constexpr auto ConsensusConstants_ProofOfWorkEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConsensusConstants_ProofOfWorkEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConsensusConstants_ProofOfWorkEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConsensusConstants_ProofOfWorkEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConsensusConstants_ProofOfWorkEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&ConsensusConstants_ProofOfWorkEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConsensusConstants_ProofOfWorkEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &ConsensusConstants_ProofOfWorkEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_types_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConsensusConstants_ProofOfWorkEntry_DoNotUse_class_data_ =
        ConsensusConstants_ProofOfWorkEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConsensusConstants_ProofOfWorkEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConsensusConstants_ProofOfWorkEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConsensusConstants_ProofOfWorkEntry_DoNotUse_class_data_.tc_table);
  return ConsensusConstants_ProofOfWorkEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
ConsensusConstants_ProofOfWorkEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConsensusConstants_ProofOfWorkEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ConsensusConstants_ProofOfWorkEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::ConsensusConstants_ProofOfWorkEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tari.rpc.PowAlgorithmConstants value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants_ProofOfWorkEntry_DoNotUse, _impl_.value_)}},
    // uint32 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConsensusConstants_ProofOfWorkEntry_DoNotUse, _impl_.key_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants_ProofOfWorkEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 key = 1;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants_ProofOfWorkEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .tari.rpc.PowAlgorithmConstants value = 2;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants_ProofOfWorkEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::PowAlgorithmConstants>()},
  }},
  {{
  }},
};
// ===================================================================

class ConsensusConstants::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ConsensusConstants>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_._has_bits_);
};

ConsensusConstants::ConsensusConstants(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConsensusConstants_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tari.rpc.ConsensusConstants)
}
PROTOBUF_NDEBUG_INLINE ConsensusConstants::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::tari::rpc::ConsensusConstants& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        emission_decay_{visibility, arena, from.emission_decay_},
        _emission_decay_cached_byte_size_{0},
        proof_of_work_{visibility, arena, from.proof_of_work_},
        permitted_output_types_{visibility, arena, from.permitted_output_types_},
        _permitted_output_types_cached_byte_size_{0},
        permitted_range_proof_types_{visibility, arena, from.permitted_range_proof_types_} {}

ConsensusConstants::ConsensusConstants(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ConsensusConstants& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConsensusConstants_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConsensusConstants* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.valid_blockchain_version_range_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.valid_blockchain_version_range_)
                : nullptr;
  _impl_.transaction_weight_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.transaction_weight_)
                : nullptr;
  _impl_.input_version_range_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.input_version_range_)
                : nullptr;
  _impl_.output_version_range_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.output_version_range_)
                : nullptr;
  _impl_.kernel_version_range_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.kernel_version_range_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, coinbase_min_maturity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, coinbase_min_maturity_),
           offsetof(Impl_, vn_registration_max_vns_per_epoch_) -
               offsetof(Impl_, coinbase_min_maturity_) +
               sizeof(Impl_::vn_registration_max_vns_per_epoch_));

  // @@protoc_insertion_point(copy_constructor:tari.rpc.ConsensusConstants)
}
PROTOBUF_NDEBUG_INLINE ConsensusConstants::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        emission_decay_{visibility, arena},
        _emission_decay_cached_byte_size_{0},
        proof_of_work_{visibility, arena},
        permitted_output_types_{visibility, arena},
        _permitted_output_types_cached_byte_size_{0},
        permitted_range_proof_types_{visibility, arena} {}

inline void ConsensusConstants::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, valid_blockchain_version_range_),
           0,
           offsetof(Impl_, vn_registration_max_vns_per_epoch_) -
               offsetof(Impl_, valid_blockchain_version_range_) +
               sizeof(Impl_::vn_registration_max_vns_per_epoch_));
}
ConsensusConstants::~ConsensusConstants() {
  // @@protoc_insertion_point(destructor:tari.rpc.ConsensusConstants)
  SharedDtor(*this);
}
inline void ConsensusConstants::SharedDtor(MessageLite& self) {
  ConsensusConstants& this_ = static_cast<ConsensusConstants&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.valid_blockchain_version_range_;
  delete this_._impl_.transaction_weight_;
  delete this_._impl_.input_version_range_;
  delete this_._impl_.output_version_range_;
  delete this_._impl_.kernel_version_range_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ConsensusConstants::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConsensusConstants(arena);
}
constexpr auto ConsensusConstants::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.emission_decay_) +
          decltype(ConsensusConstants::_impl_.emission_decay_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.proof_of_work_) +
          decltype(ConsensusConstants::_impl_.proof_of_work_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.proof_of_work_) +
          decltype(ConsensusConstants::_impl_.proof_of_work_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.permitted_output_types_) +
          decltype(ConsensusConstants::_impl_.permitted_output_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.permitted_range_proof_types_) +
          decltype(ConsensusConstants::_impl_.permitted_range_proof_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ConsensusConstants), alignof(ConsensusConstants), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ConsensusConstants::PlacementNew_,
                                 sizeof(ConsensusConstants),
                                 alignof(ConsensusConstants));
  }
}
constexpr auto ConsensusConstants::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConsensusConstants_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConsensusConstants::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConsensusConstants>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConsensusConstants::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ConsensusConstants>(), &ConsensusConstants::ByteSizeLong,
              &ConsensusConstants::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_._cached_size_),
          false,
      },
      &ConsensusConstants::kDescriptorMethods,
      &descriptor_table_types_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConsensusConstants_class_data_ =
        ConsensusConstants::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConsensusConstants::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConsensusConstants_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConsensusConstants_class_data_.tc_table);
  return ConsensusConstants_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 35, 8, 0, 7>
ConsensusConstants::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_._has_bits_),
    0, // no _extensions_
    39, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    17039400,  // skipmap
    offsetof(decltype(_table_), field_entries),
    35,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ConsensusConstants_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tari::rpc::ConsensusConstants>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 coinbase_min_maturity = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConsensusConstants, _impl_.coinbase_min_maturity_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.coinbase_min_maturity_)}},
    // uint32 blockchain_version = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConsensusConstants, _impl_.blockchain_version_), 20>(),
     {16, 20, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.blockchain_version_)}},
    // uint64 future_time_limit = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConsensusConstants, _impl_.future_time_limit_), 6>(),
     {24, 6, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.future_time_limit_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 difficulty_block_window = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConsensusConstants, _impl_.difficulty_block_window_), 7>(),
     {40, 7, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.difficulty_block_window_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 max_block_transaction_weight = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConsensusConstants, _impl_.max_block_transaction_weight_), 8>(),
     {56, 8, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.max_block_transaction_weight_)}},
    // uint64 pow_algo_count = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConsensusConstants, _impl_.pow_algo_count_), 9>(),
     {64, 9, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.pow_algo_count_)}},
    // uint64 median_timestamp_count = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConsensusConstants, _impl_.median_timestamp_count_), 10>(),
     {72, 10, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.median_timestamp_count_)}},
    // uint64 emission_initial = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConsensusConstants, _impl_.emission_initial_), 11>(),
     {80, 11, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.emission_initial_)}},
    // repeated uint64 emission_decay = 11;
    {::_pbi::TcParser::FastV64P1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.emission_decay_)}},
    // uint64 emission_tail = 12 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConsensusConstants, _impl_.emission_tail_), 12>(),
     {96, 12, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.emission_tail_)}},
    // uint64 min_sha3x_pow_difficulty = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConsensusConstants, _impl_.min_sha3x_pow_difficulty_), 13>(),
     {104, 13, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.min_sha3x_pow_difficulty_)}},
    // uint64 block_weight_inputs = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConsensusConstants, _impl_.block_weight_inputs_), 14>(),
     {112, 14, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.block_weight_inputs_)}},
    // uint64 block_weight_outputs = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConsensusConstants, _impl_.block_weight_outputs_), 15>(),
     {120, 15, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.block_weight_outputs_)}},
    // uint64 block_weight_kernels = 16;
    {::_pbi::TcParser::FastV64S2,
     {384, 16, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.block_weight_kernels_)}},
    // uint64 pre_mine_value = 17;
    {::_pbi::TcParser::FastV64S2,
     {392, 17, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.pre_mine_value_)}},
    // uint64 max_script_byte_size = 18;
    {::_pbi::TcParser::FastV64S2,
     {400, 18, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.max_script_byte_size_)}},
    // uint64 inflation_bips = 35;
    {::_pbi::TcParser::FastV64S2,
     {664, 27, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.inflation_bips_)}},
    // uint64 effective_from_height = 20;
    {::_pbi::TcParser::FastV64S2,
     {416, 19, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.effective_from_height_)}},
    // .tari.rpc.Range valid_blockchain_version_range = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 0, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.valid_blockchain_version_range_)}},
    // uint64 max_randomx_seed_height = 22;
    {::_pbi::TcParser::FastV64S2,
     {432, 22, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.max_randomx_seed_height_)}},
    // uint32 vn_registration_max_vns_per_epoch = 39;
    {::_pbi::TcParser::FastV32S2,
     {696, 30, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.vn_registration_max_vns_per_epoch_)}},
    // .tari.rpc.WeightParams transaction_weight = 24;
    {::_pbi::TcParser::FastMtS2,
     {450, 1, 1, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.transaction_weight_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tari.rpc.Range input_version_range = 26;
    {::_pbi::TcParser::FastMtS2,
     {466, 2, 2, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.input_version_range_)}},
    // .tari.rpc.OutputsVersion output_version_range = 27;
    {::_pbi::TcParser::FastMtS2,
     {474, 3, 3, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.output_version_range_)}},
    // .tari.rpc.Range kernel_version_range = 28;
    {::_pbi::TcParser::FastMtS2,
     {482, 4, 4, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.kernel_version_range_)}},
    // repeated .tari.rpc.OutputType permitted_output_types = 29;
    {::_pbi::TcParser::FastV32P2,
     {490, 63, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.permitted_output_types_)}},
    // uint64 epoch_length = 30;
    {::_pbi::TcParser::FastV64S2,
     {496, 23, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.epoch_length_)}},
    // uint64 validator_node_registration_min_deposit_amount = 31;
    {::_pbi::TcParser::FastV64S2,
     {504, 24, 0, PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.validator_node_registration_min_deposit_amount_)}},
  }}, {{
    33, 0, 1,
    65408, 28,
    65535, 65535
  }}, {{
    // uint64 coinbase_min_maturity = 1;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.coinbase_min_maturity_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint32 blockchain_version = 2;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.blockchain_version_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint64 future_time_limit = 3;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.future_time_limit_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 difficulty_block_window = 5;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.difficulty_block_window_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 max_block_transaction_weight = 7;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.max_block_transaction_weight_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 pow_algo_count = 8;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.pow_algo_count_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 median_timestamp_count = 9;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.median_timestamp_count_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 emission_initial = 10;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.emission_initial_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated uint64 emission_decay = 11;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.emission_decay_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // uint64 emission_tail = 12 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.emission_tail_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 min_sha3x_pow_difficulty = 13;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.min_sha3x_pow_difficulty_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 block_weight_inputs = 14;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.block_weight_inputs_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 block_weight_outputs = 15;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.block_weight_outputs_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 block_weight_kernels = 16;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.block_weight_kernels_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 pre_mine_value = 17;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.pre_mine_value_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 max_script_byte_size = 18;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.max_script_byte_size_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 effective_from_height = 20;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.effective_from_height_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // .tari.rpc.Range valid_blockchain_version_range = 21;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.valid_blockchain_version_range_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 max_randomx_seed_height = 22;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.max_randomx_seed_height_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // map<uint32, .tari.rpc.PowAlgorithmConstants> proof_of_work = 23;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.proof_of_work_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .tari.rpc.WeightParams transaction_weight = 24;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.transaction_weight_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.Range input_version_range = 26;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.input_version_range_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.OutputsVersion output_version_range = 27;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.output_version_range_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tari.rpc.Range kernel_version_range = 28;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.kernel_version_range_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tari.rpc.OutputType permitted_output_types = 29;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.permitted_output_types_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // uint64 epoch_length = 30;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.epoch_length_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 validator_node_registration_min_deposit_amount = 31;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.validator_node_registration_min_deposit_amount_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 validator_node_registration_min_lock_height = 32;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.validator_node_registration_min_lock_height_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 validator_node_registration_shuffle_interval_epoch = 33;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.validator_node_registration_shuffle_interval_epoch_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated .tari.rpc.PermittedRangeProofs permitted_range_proof_types = 34;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.permitted_range_proof_types_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 inflation_bips = 35;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.inflation_bips_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 tail_epoch_length = 36;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.tail_epoch_length_), _Internal::kHasBitsOffset + 28, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 max_block_coinbase_count = 37;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.max_block_coinbase_count_), _Internal::kHasBitsOffset + 29, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint32 vn_registration_max_vns_initial_epoch = 38;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.vn_registration_max_vns_initial_epoch_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 vn_registration_max_vns_per_epoch = 39;
    {PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.vn_registration_max_vns_per_epoch_), _Internal::kHasBitsOffset + 30, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::tari::rpc::Range>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::WeightParams>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::Range>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::OutputsVersion>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::Range>()},
      {::_pbi::TcParser::GetTable<::tari::rpc::PermittedRangeProofs>()},
      {::_pbi::TcParser::GetMapAuxInfo(0, 0, 0,
                                       13, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::tari::rpc::PowAlgorithmConstants>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ConsensusConstants::Clear() {
// @@protoc_insertion_point(message_clear_start:tari.rpc.ConsensusConstants)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.emission_decay_.Clear();
  _impl_.proof_of_work_.Clear();
  _impl_.permitted_output_types_.Clear();
  _impl_.permitted_range_proof_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.valid_blockchain_version_range_ != nullptr);
      _impl_.valid_blockchain_version_range_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.transaction_weight_ != nullptr);
      _impl_.transaction_weight_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.input_version_range_ != nullptr);
      _impl_.input_version_range_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.output_version_range_ != nullptr);
      _impl_.output_version_range_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.kernel_version_range_ != nullptr);
      _impl_.kernel_version_range_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000e0u) != 0) {
    ::memset(&_impl_.coinbase_min_maturity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.difficulty_block_window_) -
        reinterpret_cast<char*>(&_impl_.coinbase_min_maturity_)) + sizeof(_impl_.difficulty_block_window_));
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    ::memset(&_impl_.max_block_transaction_weight_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.block_weight_outputs_) -
        reinterpret_cast<char*>(&_impl_.max_block_transaction_weight_)) + sizeof(_impl_.block_weight_outputs_));
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    ::memset(&_impl_.block_weight_kernels_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.epoch_length_) -
        reinterpret_cast<char*>(&_impl_.block_weight_kernels_)) + sizeof(_impl_.epoch_length_));
  }
  if ((cached_has_bits & 0x7f000000u) != 0) {
    ::memset(&_impl_.validator_node_registration_min_deposit_amount_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.vn_registration_max_vns_per_epoch_) -
        reinterpret_cast<char*>(&_impl_.validator_node_registration_min_deposit_amount_)) + sizeof(_impl_.vn_registration_max_vns_per_epoch_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ConsensusConstants::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ConsensusConstants& this_ = static_cast<const ConsensusConstants&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ConsensusConstants::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ConsensusConstants& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:tari.rpc.ConsensusConstants)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 coinbase_min_maturity = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_coinbase_min_maturity() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_coinbase_min_maturity(), target);
    }
  }

  // uint32 blockchain_version = 2;
  if ((this_._impl_._has_bits_[0] & 0x00100000u) != 0) {
    if (this_._internal_blockchain_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_blockchain_version(), target);
    }
  }

  // uint64 future_time_limit = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_future_time_limit() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          3, this_._internal_future_time_limit(), target);
    }
  }

  // uint64 difficulty_block_window = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_difficulty_block_window() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          5, this_._internal_difficulty_block_window(), target);
    }
  }

  // uint64 max_block_transaction_weight = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_max_block_transaction_weight() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          7, this_._internal_max_block_transaction_weight(), target);
    }
  }

  // uint64 pow_algo_count = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (this_._internal_pow_algo_count() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          8, this_._internal_pow_algo_count(), target);
    }
  }

  // uint64 median_timestamp_count = 9;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (this_._internal_median_timestamp_count() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          9, this_._internal_median_timestamp_count(), target);
    }
  }

  // uint64 emission_initial = 10;
  if ((this_._impl_._has_bits_[0] & 0x00000800u) != 0) {
    if (this_._internal_emission_initial() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          10, this_._internal_emission_initial(), target);
    }
  }

  // repeated uint64 emission_decay = 11;
  {
    int byte_size = this_._impl_._emission_decay_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          11, this_._internal_emission_decay(), byte_size, target);
    }
  }

  // uint64 emission_tail = 12 [deprecated = true];
  if ((this_._impl_._has_bits_[0] & 0x00001000u) != 0) {
    if (this_._internal_emission_tail() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          12, this_._internal_emission_tail(), target);
    }
  }

  // uint64 min_sha3x_pow_difficulty = 13;
  if ((this_._impl_._has_bits_[0] & 0x00002000u) != 0) {
    if (this_._internal_min_sha3x_pow_difficulty() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          13, this_._internal_min_sha3x_pow_difficulty(), target);
    }
  }

  // uint64 block_weight_inputs = 14;
  if ((this_._impl_._has_bits_[0] & 0x00004000u) != 0) {
    if (this_._internal_block_weight_inputs() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          14, this_._internal_block_weight_inputs(), target);
    }
  }

  // uint64 block_weight_outputs = 15;
  if ((this_._impl_._has_bits_[0] & 0x00008000u) != 0) {
    if (this_._internal_block_weight_outputs() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          15, this_._internal_block_weight_outputs(), target);
    }
  }

  // uint64 block_weight_kernels = 16;
  if ((this_._impl_._has_bits_[0] & 0x00010000u) != 0) {
    if (this_._internal_block_weight_kernels() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          16, this_._internal_block_weight_kernels(), target);
    }
  }

  // uint64 pre_mine_value = 17;
  if ((this_._impl_._has_bits_[0] & 0x00020000u) != 0) {
    if (this_._internal_pre_mine_value() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          17, this_._internal_pre_mine_value(), target);
    }
  }

  // uint64 max_script_byte_size = 18;
  if ((this_._impl_._has_bits_[0] & 0x00040000u) != 0) {
    if (this_._internal_max_script_byte_size() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          18, this_._internal_max_script_byte_size(), target);
    }
  }

  // uint64 effective_from_height = 20;
  if ((this_._impl_._has_bits_[0] & 0x00080000u) != 0) {
    if (this_._internal_effective_from_height() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          20, this_._internal_effective_from_height(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .tari.rpc.Range valid_blockchain_version_range = 21;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        21, *this_._impl_.valid_blockchain_version_range_, this_._impl_.valid_blockchain_version_range_->GetCachedSize(), target,
        stream);
  }

  // uint64 max_randomx_seed_height = 22;
  if ((cached_has_bits & 0x00400000u) != 0) {
    if (this_._internal_max_randomx_seed_height() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          22, this_._internal_max_randomx_seed_height(), target);
    }
  }

  // map<uint32, .tari.rpc.PowAlgorithmConstants> proof_of_work = 23;
  if (!this_._internal_proof_of_work().empty()) {
    using MapType = ::google::protobuf::Map<::uint32_t, ::tari::rpc::PowAlgorithmConstants>;
    using WireHelper = _pbi::MapEntryFuncs<::uint32_t, ::tari::rpc::PowAlgorithmConstants,
                                   _pbi::WireFormatLite::TYPE_UINT32,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_proof_of_work();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            23, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            23, entry.first, entry.second, target, stream);
      }
    }
  }

  // .tari.rpc.WeightParams transaction_weight = 24;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        24, *this_._impl_.transaction_weight_, this_._impl_.transaction_weight_->GetCachedSize(), target,
        stream);
  }

  // .tari.rpc.Range input_version_range = 26;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        26, *this_._impl_.input_version_range_, this_._impl_.input_version_range_->GetCachedSize(), target,
        stream);
  }

  // .tari.rpc.OutputsVersion output_version_range = 27;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        27, *this_._impl_.output_version_range_, this_._impl_.output_version_range_->GetCachedSize(), target,
        stream);
  }

  // .tari.rpc.Range kernel_version_range = 28;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        28, *this_._impl_.kernel_version_range_, this_._impl_.kernel_version_range_->GetCachedSize(), target,
        stream);
  }

  // repeated .tari.rpc.OutputType permitted_output_types = 29;
  {
    ::size_t byte_size = this_._impl_._permitted_output_types_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          29, this_._internal_permitted_output_types(), byte_size, target);
    }
  }

  // uint64 epoch_length = 30;
  if ((cached_has_bits & 0x00800000u) != 0) {
    if (this_._internal_epoch_length() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          30, this_._internal_epoch_length(), target);
    }
  }

  // uint64 validator_node_registration_min_deposit_amount = 31;
  if ((cached_has_bits & 0x01000000u) != 0) {
    if (this_._internal_validator_node_registration_min_deposit_amount() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          31, this_._internal_validator_node_registration_min_deposit_amount(), target);
    }
  }

  // uint64 validator_node_registration_min_lock_height = 32;
  if ((cached_has_bits & 0x02000000u) != 0) {
    if (this_._internal_validator_node_registration_min_lock_height() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          32, this_._internal_validator_node_registration_min_lock_height(), target);
    }
  }

  // uint64 validator_node_registration_shuffle_interval_epoch = 33;
  if ((cached_has_bits & 0x04000000u) != 0) {
    if (this_._internal_validator_node_registration_shuffle_interval_epoch() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          33, this_._internal_validator_node_registration_shuffle_interval_epoch(), target);
    }
  }

  // repeated .tari.rpc.PermittedRangeProofs permitted_range_proof_types = 34;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_permitted_range_proof_types_size());
       i < n; i++) {
    const auto& repfield = this_._internal_permitted_range_proof_types().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            34, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // uint64 inflation_bips = 35;
  if ((cached_has_bits & 0x08000000u) != 0) {
    if (this_._internal_inflation_bips() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          35, this_._internal_inflation_bips(), target);
    }
  }

  // uint64 tail_epoch_length = 36;
  if ((cached_has_bits & 0x10000000u) != 0) {
    if (this_._internal_tail_epoch_length() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          36, this_._internal_tail_epoch_length(), target);
    }
  }

  // uint64 max_block_coinbase_count = 37;
  if ((cached_has_bits & 0x20000000u) != 0) {
    if (this_._internal_max_block_coinbase_count() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          37, this_._internal_max_block_coinbase_count(), target);
    }
  }

  // uint32 vn_registration_max_vns_initial_epoch = 38;
  if ((cached_has_bits & 0x00200000u) != 0) {
    if (this_._internal_vn_registration_max_vns_initial_epoch() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          38, this_._internal_vn_registration_max_vns_initial_epoch(), target);
    }
  }

  // uint32 vn_registration_max_vns_per_epoch = 39;
  if ((cached_has_bits & 0x40000000u) != 0) {
    if (this_._internal_vn_registration_max_vns_per_epoch() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          39, this_._internal_vn_registration_max_vns_per_epoch(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tari.rpc.ConsensusConstants)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ConsensusConstants::ByteSizeLong(const MessageLite& base) {
  const ConsensusConstants& this_ = static_cast<const ConsensusConstants&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ConsensusConstants::ByteSizeLong() const {
  const ConsensusConstants& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:tari.rpc.ConsensusConstants)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint64 emission_decay = 11;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt64SizeWithPackedTagSize(
              this_._internal_emission_decay(), 1,
              this_._impl_._emission_decay_cached_byte_size_);
    }
    // map<uint32, .tari.rpc.PowAlgorithmConstants> proof_of_work = 23;
    {
      total_size +=
          2 * ::google::protobuf::internal::FromIntSize(this_._internal_proof_of_work_size());
      for (const auto& entry : this_._internal_proof_of_work()) {
        total_size += _pbi::MapEntryFuncs<::uint32_t, ::tari::rpc::PowAlgorithmConstants,
                                       _pbi::WireFormatLite::TYPE_UINT32,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated .tari.rpc.OutputType permitted_output_types = 29;
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_permitted_output_types(), 2, this_._impl_._permitted_output_types_cached_byte_size_);
    }
    // repeated .tari.rpc.PermittedRangeProofs permitted_range_proof_types = 34;
    {
      total_size += 2UL * this_._internal_permitted_range_proof_types_size();
      for (const auto& msg : this_._internal_permitted_range_proof_types()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // .tari.rpc.Range valid_blockchain_version_range = 21;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.valid_blockchain_version_range_);
    }
    // .tari.rpc.WeightParams transaction_weight = 24;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.transaction_weight_);
    }
    // .tari.rpc.Range input_version_range = 26;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.input_version_range_);
    }
    // .tari.rpc.OutputsVersion output_version_range = 27;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.output_version_range_);
    }
    // .tari.rpc.Range kernel_version_range = 28;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kernel_version_range_);
    }
    // uint64 coinbase_min_maturity = 1;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_coinbase_min_maturity() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_coinbase_min_maturity());
      }
    }
    // uint64 future_time_limit = 3;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_future_time_limit() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_future_time_limit());
      }
    }
    // uint64 difficulty_block_window = 5;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_difficulty_block_window() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_difficulty_block_window());
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // uint64 max_block_transaction_weight = 7;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_max_block_transaction_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_max_block_transaction_weight());
      }
    }
    // uint64 pow_algo_count = 8;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_pow_algo_count() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_pow_algo_count());
      }
    }
    // uint64 median_timestamp_count = 9;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_median_timestamp_count() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_median_timestamp_count());
      }
    }
    // uint64 emission_initial = 10;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (this_._internal_emission_initial() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_emission_initial());
      }
    }
    // uint64 emission_tail = 12 [deprecated = true];
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (this_._internal_emission_tail() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_emission_tail());
      }
    }
    // uint64 min_sha3x_pow_difficulty = 13;
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (this_._internal_min_sha3x_pow_difficulty() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_min_sha3x_pow_difficulty());
      }
    }
    // uint64 block_weight_inputs = 14;
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (this_._internal_block_weight_inputs() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_block_weight_inputs());
      }
    }
    // uint64 block_weight_outputs = 15;
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (this_._internal_block_weight_outputs() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_block_weight_outputs());
      }
    }
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    // uint64 block_weight_kernels = 16;
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (this_._internal_block_weight_kernels() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                        this_._internal_block_weight_kernels());
      }
    }
    // uint64 pre_mine_value = 17;
    if ((cached_has_bits & 0x00020000u) != 0) {
      if (this_._internal_pre_mine_value() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                        this_._internal_pre_mine_value());
      }
    }
    // uint64 max_script_byte_size = 18;
    if ((cached_has_bits & 0x00040000u) != 0) {
      if (this_._internal_max_script_byte_size() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                        this_._internal_max_script_byte_size());
      }
    }
    // uint64 effective_from_height = 20;
    if ((cached_has_bits & 0x00080000u) != 0) {
      if (this_._internal_effective_from_height() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                        this_._internal_effective_from_height());
      }
    }
    // uint32 blockchain_version = 2;
    if ((cached_has_bits & 0x00100000u) != 0) {
      if (this_._internal_blockchain_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_blockchain_version());
      }
    }
    // uint32 vn_registration_max_vns_initial_epoch = 38;
    if ((cached_has_bits & 0x00200000u) != 0) {
      if (this_._internal_vn_registration_max_vns_initial_epoch() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_vn_registration_max_vns_initial_epoch());
      }
    }
    // uint64 max_randomx_seed_height = 22;
    if ((cached_has_bits & 0x00400000u) != 0) {
      if (this_._internal_max_randomx_seed_height() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                        this_._internal_max_randomx_seed_height());
      }
    }
    // uint64 epoch_length = 30;
    if ((cached_has_bits & 0x00800000u) != 0) {
      if (this_._internal_epoch_length() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                        this_._internal_epoch_length());
      }
    }
  }
  if ((cached_has_bits & 0x7f000000u) != 0) {
    // uint64 validator_node_registration_min_deposit_amount = 31;
    if ((cached_has_bits & 0x01000000u) != 0) {
      if (this_._internal_validator_node_registration_min_deposit_amount() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                        this_._internal_validator_node_registration_min_deposit_amount());
      }
    }
    // uint64 validator_node_registration_min_lock_height = 32;
    if ((cached_has_bits & 0x02000000u) != 0) {
      if (this_._internal_validator_node_registration_min_lock_height() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                        this_._internal_validator_node_registration_min_lock_height());
      }
    }
    // uint64 validator_node_registration_shuffle_interval_epoch = 33;
    if ((cached_has_bits & 0x04000000u) != 0) {
      if (this_._internal_validator_node_registration_shuffle_interval_epoch() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                        this_._internal_validator_node_registration_shuffle_interval_epoch());
      }
    }
    // uint64 inflation_bips = 35;
    if ((cached_has_bits & 0x08000000u) != 0) {
      if (this_._internal_inflation_bips() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                        this_._internal_inflation_bips());
      }
    }
    // uint64 tail_epoch_length = 36;
    if ((cached_has_bits & 0x10000000u) != 0) {
      if (this_._internal_tail_epoch_length() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                        this_._internal_tail_epoch_length());
      }
    }
    // uint64 max_block_coinbase_count = 37;
    if ((cached_has_bits & 0x20000000u) != 0) {
      if (this_._internal_max_block_coinbase_count() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                        this_._internal_max_block_coinbase_count());
      }
    }
    // uint32 vn_registration_max_vns_per_epoch = 39;
    if ((cached_has_bits & 0x40000000u) != 0) {
      if (this_._internal_vn_registration_max_vns_per_epoch() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_vn_registration_max_vns_per_epoch());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ConsensusConstants::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConsensusConstants*>(&to_msg);
  auto& from = static_cast<const ConsensusConstants&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tari.rpc.ConsensusConstants)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_emission_decay()->MergeFrom(from._internal_emission_decay());
  _this->_impl_.proof_of_work_.MergeFrom(from._impl_.proof_of_work_);
  _this->_internal_mutable_permitted_output_types()->MergeFrom(from._internal_permitted_output_types());
  _this->_internal_mutable_permitted_range_proof_types()->MergeFrom(
      from._internal_permitted_range_proof_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.valid_blockchain_version_range_ != nullptr);
      if (_this->_impl_.valid_blockchain_version_range_ == nullptr) {
        _this->_impl_.valid_blockchain_version_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.valid_blockchain_version_range_);
      } else {
        _this->_impl_.valid_blockchain_version_range_->MergeFrom(*from._impl_.valid_blockchain_version_range_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.transaction_weight_ != nullptr);
      if (_this->_impl_.transaction_weight_ == nullptr) {
        _this->_impl_.transaction_weight_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.transaction_weight_);
      } else {
        _this->_impl_.transaction_weight_->MergeFrom(*from._impl_.transaction_weight_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.input_version_range_ != nullptr);
      if (_this->_impl_.input_version_range_ == nullptr) {
        _this->_impl_.input_version_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.input_version_range_);
      } else {
        _this->_impl_.input_version_range_->MergeFrom(*from._impl_.input_version_range_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.output_version_range_ != nullptr);
      if (_this->_impl_.output_version_range_ == nullptr) {
        _this->_impl_.output_version_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.output_version_range_);
      } else {
        _this->_impl_.output_version_range_->MergeFrom(*from._impl_.output_version_range_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.kernel_version_range_ != nullptr);
      if (_this->_impl_.kernel_version_range_ == nullptr) {
        _this->_impl_.kernel_version_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.kernel_version_range_);
      } else {
        _this->_impl_.kernel_version_range_->MergeFrom(*from._impl_.kernel_version_range_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_coinbase_min_maturity() != 0) {
        _this->_impl_.coinbase_min_maturity_ = from._impl_.coinbase_min_maturity_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_future_time_limit() != 0) {
        _this->_impl_.future_time_limit_ = from._impl_.future_time_limit_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_difficulty_block_window() != 0) {
        _this->_impl_.difficulty_block_window_ = from._impl_.difficulty_block_window_;
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_max_block_transaction_weight() != 0) {
        _this->_impl_.max_block_transaction_weight_ = from._impl_.max_block_transaction_weight_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_pow_algo_count() != 0) {
        _this->_impl_.pow_algo_count_ = from._impl_.pow_algo_count_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_median_timestamp_count() != 0) {
        _this->_impl_.median_timestamp_count_ = from._impl_.median_timestamp_count_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (from._internal_emission_initial() != 0) {
        _this->_impl_.emission_initial_ = from._impl_.emission_initial_;
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (from._internal_emission_tail() != 0) {
        _this->_impl_.emission_tail_ = from._impl_.emission_tail_;
      }
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (from._internal_min_sha3x_pow_difficulty() != 0) {
        _this->_impl_.min_sha3x_pow_difficulty_ = from._impl_.min_sha3x_pow_difficulty_;
      }
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (from._internal_block_weight_inputs() != 0) {
        _this->_impl_.block_weight_inputs_ = from._impl_.block_weight_inputs_;
      }
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (from._internal_block_weight_outputs() != 0) {
        _this->_impl_.block_weight_outputs_ = from._impl_.block_weight_outputs_;
      }
    }
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (from._internal_block_weight_kernels() != 0) {
        _this->_impl_.block_weight_kernels_ = from._impl_.block_weight_kernels_;
      }
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      if (from._internal_pre_mine_value() != 0) {
        _this->_impl_.pre_mine_value_ = from._impl_.pre_mine_value_;
      }
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      if (from._internal_max_script_byte_size() != 0) {
        _this->_impl_.max_script_byte_size_ = from._impl_.max_script_byte_size_;
      }
    }
    if ((cached_has_bits & 0x00080000u) != 0) {
      if (from._internal_effective_from_height() != 0) {
        _this->_impl_.effective_from_height_ = from._impl_.effective_from_height_;
      }
    }
    if ((cached_has_bits & 0x00100000u) != 0) {
      if (from._internal_blockchain_version() != 0) {
        _this->_impl_.blockchain_version_ = from._impl_.blockchain_version_;
      }
    }
    if ((cached_has_bits & 0x00200000u) != 0) {
      if (from._internal_vn_registration_max_vns_initial_epoch() != 0) {
        _this->_impl_.vn_registration_max_vns_initial_epoch_ = from._impl_.vn_registration_max_vns_initial_epoch_;
      }
    }
    if ((cached_has_bits & 0x00400000u) != 0) {
      if (from._internal_max_randomx_seed_height() != 0) {
        _this->_impl_.max_randomx_seed_height_ = from._impl_.max_randomx_seed_height_;
      }
    }
    if ((cached_has_bits & 0x00800000u) != 0) {
      if (from._internal_epoch_length() != 0) {
        _this->_impl_.epoch_length_ = from._impl_.epoch_length_;
      }
    }
  }
  if ((cached_has_bits & 0x7f000000u) != 0) {
    if ((cached_has_bits & 0x01000000u) != 0) {
      if (from._internal_validator_node_registration_min_deposit_amount() != 0) {
        _this->_impl_.validator_node_registration_min_deposit_amount_ = from._impl_.validator_node_registration_min_deposit_amount_;
      }
    }
    if ((cached_has_bits & 0x02000000u) != 0) {
      if (from._internal_validator_node_registration_min_lock_height() != 0) {
        _this->_impl_.validator_node_registration_min_lock_height_ = from._impl_.validator_node_registration_min_lock_height_;
      }
    }
    if ((cached_has_bits & 0x04000000u) != 0) {
      if (from._internal_validator_node_registration_shuffle_interval_epoch() != 0) {
        _this->_impl_.validator_node_registration_shuffle_interval_epoch_ = from._impl_.validator_node_registration_shuffle_interval_epoch_;
      }
    }
    if ((cached_has_bits & 0x08000000u) != 0) {
      if (from._internal_inflation_bips() != 0) {
        _this->_impl_.inflation_bips_ = from._impl_.inflation_bips_;
      }
    }
    if ((cached_has_bits & 0x10000000u) != 0) {
      if (from._internal_tail_epoch_length() != 0) {
        _this->_impl_.tail_epoch_length_ = from._impl_.tail_epoch_length_;
      }
    }
    if ((cached_has_bits & 0x20000000u) != 0) {
      if (from._internal_max_block_coinbase_count() != 0) {
        _this->_impl_.max_block_coinbase_count_ = from._impl_.max_block_coinbase_count_;
      }
    }
    if ((cached_has_bits & 0x40000000u) != 0) {
      if (from._internal_vn_registration_max_vns_per_epoch() != 0) {
        _this->_impl_.vn_registration_max_vns_per_epoch_ = from._impl_.vn_registration_max_vns_per_epoch_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConsensusConstants::CopyFrom(const ConsensusConstants& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tari.rpc.ConsensusConstants)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConsensusConstants::InternalSwap(ConsensusConstants* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.emission_decay_.InternalSwap(&other->_impl_.emission_decay_);
  _impl_.proof_of_work_.InternalSwap(&other->_impl_.proof_of_work_);
  _impl_.permitted_output_types_.InternalSwap(&other->_impl_.permitted_output_types_);
  _impl_.permitted_range_proof_types_.InternalSwap(&other->_impl_.permitted_range_proof_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.vn_registration_max_vns_per_epoch_)
      + sizeof(ConsensusConstants::_impl_.vn_registration_max_vns_per_epoch_)
      - PROTOBUF_FIELD_OFFSET(ConsensusConstants, _impl_.valid_blockchain_version_range_)>(
          reinterpret_cast<char*>(&_impl_.valid_blockchain_version_range_),
          reinterpret_cast<char*>(&other->_impl_.valid_blockchain_version_range_));
}

::google::protobuf::Metadata ConsensusConstants::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
}  // namespace tari
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_types_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
